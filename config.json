{"sections": [0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 10, 10, 10, 11, 13, 13, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 19, 19, 20, 20, 21, 21, 21, 21, 22, 22, 22, 23, 23, 23, 23, 23, 23, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 30, 30, 30, 30, 31, 31, 32, 32, 32, 33, 33, 33, 33, 33, 33, 33, 34, 34, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37],"entry": ["workers", "cpu_affinity_map", "auth_param", "acl", "acl", "acl", "acl", "acl", "acl", "acl", "acl", "acl", "acl", "acl", "acl", "http_access", "http_access", "http_access", "http_access", "http_access", "http_access", "http_port", "https_port", "ftp_port", "tcp_outgoing_tos", "clientside_tos", "tcp_outgoing_mark", "clientside_mark", "qos_flows", "tcp_outgoing_address", "ssl_engine", "sslproxy_client_certificate", "sslproxy_client_key", "sslproxy_version", "sslproxy_options", "sslproxy_cipher", "sslproxy_cafile", "sslproxy_capath", "sslproxy_cert_sign_hash", "ssl_bump", "sslproxy_flags", "sslproxy_cert_error", "sslproxy_cert_sign", "sslproxy_cert_adapt", "sslpassword_program", "sslcrtvalidator_program", "cache_peer", "cache_peer_domain", "cache_peer_access", "neighbor_type_domain", "dead_peer_timeout (seconds)", "cache_mem (bytes)", "maximum_object_size_in_memory (bytes)", "memory_cache_shared", "memory_cache_mode", "minimum_object_size (bytes)", "maximum_object_size (bytes)", "cache_dir", "max_open_disk_fds", "cache_swap_low (percent, 0-100)", "cache_swap_high (percent, 0-100)", "logformat", "icap_log", "stats_collection allow|deny acl acl...", "cache_store_log", "cache_swap_state", "client_netmask", "debug_options", "coredump_dir", "coredump_dir", "ftp_epsv", "url_rewrite_program", "url_rewrite_access", "store_id_program", "store_id_access", "cache", "send_hit", "store_miss", "max_stale time-units", "refresh_pattern", "refresh_pattern", "refresh_pattern", "refresh_pattern", "refresh_pattern", "quick_abort_min (KB)", "quick_abort_max (KB)", "quick_abort_pct (percent)", "read_ahead_gap buffer-size", "negative_ttl time-units", "positive_dns_ttl time-units", "negative_dns_ttl time-units", "range_offset_limit size [acl acl...]", "minimum_expiry_time (seconds)", "store_avg_object_size (bytes)", "request_header_max_size (KB)", "reply_header_max_size (KB)", "request_body_max_size (bytes)", "client_request_buffer_max_size (bytes)", "broken_posts", "request_header_access", "reply_header_access", "request_header_replace", "reply_header_replace", "request_header_add", "note", "relaxed_header_parser on|off|warn", "collapsed_forwarding (on|off)", "forward_timeout time-units", "connect_timeout time-units", "peer_connect_timeout time-units", "read_timeout time-units", "write_timeout time-units", "client_lifetime time-units", "shutdown_lifetime time-units", "mail_from", "cache_effective_group", "visible_hostname", "unique_hostname", "hostname_aliases", "announce_period", "announce_file", "httpd_accel_surrogate_id", "esi_parser libxml2|expat|custom", "delay_class", "delay_access", "delay_parameters", "delay_initial_bucket_level (percent, 0-100)", "client_delay_initial_bucket_level (percent, 0-no_limit)", "client_delay_parameters", "client_delay_access", "wccp_router", "wccp2_router", "wccp2_service", "wccp2_service_info", "wccp_address", "wccp2_address", "digest_rebuild_period (seconds)", "digest_rewrite_period (seconds)", "digest_swapout_chunk_size (bytes)", "digest_rebuild_chunk_percentage (percent, 0-100)", "snmp_port", "snmp_access", "snmp_incoming_address", "snmp_outgoing_address", "icp_port", "htcp_port", "udp_incoming_address", "udp_outgoing_address", "minimum_direct_rtt (msec)", "icp_query_timeout (msec)", "maximum_icp_query_timeout (msec)", "minimum_icp_query_timeout (msec)", "background_ping_rate time-units", "mcast_groups", "mcast_miss_addr", "mcast_icp_query_timeout (msec)", "error_directory", "error_default_language", "err_html_text", "deny_info", "always_direct", "never_direct", "accept_filter", "client_ip_max_connections", "tcp_recv_bufsize (bytes)", "icap_connect_timeout", "icap_io_timeout time-units", "icap_service_failure_limit limit [in memory-depth time-units]", "icap_preview_size", "icap_service", "icap_class", "icap_access", "ecap_service", "loadable_modules", "adaptation_service_set", "adaptation_service_chain", "adaptation_access", "adaptation_masterx_shared_names", "adaptation_meta", "icap_retry_limit", "dns_packet_max", "dns_defnames", "dns_multicast_local", "dns_nameservers", "append_domain", "ipcache_size (number of entries)", "ipcache_low (percent)", "ipcache_high (percent)", "fqdncache_size (number of entries)", "memory_pools_limit (bytes)", "forwarded_for on|off|transparent|truncate|delete", "cachemgr_passwd", "connect_retries", "chroot", "pipeline_prefetch", "high_response_time_warning (msec)", "high_page_fault_warning", "high_memory_warning", "sleep_after_fork (microseconds)", "max_filedescriptors"],"value": ["workers", "cpu_affinity_map", "auth_param", "acl SSL_ports port 443", "acl Safe_ports port 80\t\t# http", "acl Safe_ports port 21\t\t# ftp", "acl Safe_ports port 443\t\t# https", "acl Safe_ports port 70\t\t# gopher", "acl Safe_ports port 210\t\t# wais", "acl Safe_ports port 1025-65535\t# unregistered ports", "acl Safe_ports port 280\t\t# http-mgmt", "acl Safe_ports port 488\t\t# gss-http", "acl Safe_ports port 591\t\t# filemaker", "acl Safe_ports port 777\t\t# multiling http", "acl CONNECT method CONNECT", "http_access deny !Safe_ports", "http_access deny CONNECT !SSL_ports", "http_access allow localhost manager", "http_access deny manager", "http_access allow localhost", "http_access deny all", "http_port 3128", "https_port", "ftp_port", "tcp_outgoing_tos", "clientside_tos", "tcp_outgoing_mark", "clientside_mark", "qos_flows", "tcp_outgoing_address", "ssl_engine", "sslproxy_client_certificate", "sslproxy_client_key", "sslproxy_version", "sslproxy_options", "sslproxy_cipher", "sslproxy_cafile", "sslproxy_capath", "sslproxy_cert_sign_hash", "ssl_bump", "sslproxy_flags", "sslproxy_cert_error", "sslproxy_cert_sign", "sslproxy_cert_adapt", "sslpassword_program", "sslcrtvalidator_program", "cache_peer", "cache_peer_domain", "cache_peer_access", "neighbor_type_domain", "dead_peer_timeout (seconds)", "cache_mem (bytes)", "maximum_object_size_in_memory (bytes)", "memory_cache_shared", "memory_cache_mode", "minimum_object_size (bytes)", "maximum_object_size (bytes)", "cache_dir", "max_open_disk_fds", "cache_swap_low (percent, 0-100)", "cache_swap_high (percent, 0-100)", "logformat", "icap_log", "stats_collection allow|deny acl acl...", "cache_store_log", "cache_swap_state", "client_netmask", "debug_options", "coredump_dir", "coredump_dir /var/spool/squid", "ftp_epsv", "url_rewrite_program", "url_rewrite_access", "store_id_program", "store_id_access", "cache", "send_hit", "store_miss", "max_stale time-units", "refresh_pattern ^ftp:\t\t1440\t20%\t10080", "refresh_pattern ^gopher:\t1440\t0%\t1440", "refresh_pattern -i (/cgi-bin/|\\?) 0\t0%\t0", "refresh_pattern (Release|Packages(.gz)*)$      0       20%     2880", "refresh_pattern .\t\t0\t20%\t4320", "quick_abort_min (KB)", "quick_abort_max (KB)", "quick_abort_pct (percent)", "read_ahead_gap buffer-size", "negative_ttl time-units", "positive_dns_ttl time-units", "negative_dns_ttl time-units", "range_offset_limit size [acl acl...]", "minimum_expiry_time (seconds)", "store_avg_object_size (bytes)", "request_header_max_size (KB)", "reply_header_max_size (KB)", "request_body_max_size (bytes)", "client_request_buffer_max_size (bytes)", "broken_posts", "request_header_access", "reply_header_access", "request_header_replace", "reply_header_replace", "request_header_add", "note", "relaxed_header_parser on|off|warn", "collapsed_forwarding (on|off)", "forward_timeout time-units", "connect_timeout time-units", "peer_connect_timeout time-units", "read_timeout time-units", "write_timeout time-units", "client_lifetime time-units", "shutdown_lifetime time-units", "mail_from", "cache_effective_group", "visible_hostname", "unique_hostname", "hostname_aliases", "announce_period", "announce_file", "httpd_accel_surrogate_id", "esi_parser libxml2|expat|custom", "delay_class", "delay_access", "delay_parameters", "delay_initial_bucket_level (percent, 0-100)", "client_delay_initial_bucket_level (percent, 0-no_limit)", "client_delay_parameters", "client_delay_access", "wccp_router", "wccp2_router", "wccp2_service", "wccp2_service_info", "wccp_address", "wccp2_address", "digest_rebuild_period (seconds)", "digest_rewrite_period (seconds)", "digest_swapout_chunk_size (bytes)", "digest_rebuild_chunk_percentage (percent, 0-100)", "snmp_port", "snmp_access", "snmp_incoming_address", "snmp_outgoing_address", "icp_port", "htcp_port", "udp_incoming_address", "udp_outgoing_address", "minimum_direct_rtt (msec)", "icp_query_timeout (msec)", "maximum_icp_query_timeout (msec)", "minimum_icp_query_timeout (msec)", "background_ping_rate time-units", "mcast_groups", "mcast_miss_addr", "mcast_icp_query_timeout (msec)", "error_directory", "error_default_language", "err_html_text", "deny_info", "always_direct", "never_direct", "accept_filter", "client_ip_max_connections", "tcp_recv_bufsize (bytes)", "icap_connect_timeout", "icap_io_timeout time-units", "icap_service_failure_limit limit [in memory-depth time-units]", "icap_preview_size", "icap_service", "icap_class", "icap_access", "ecap_service", "loadable_modules", "adaptation_service_set", "adaptation_service_chain", "adaptation_access", "adaptation_masterx_shared_names", "adaptation_meta", "icap_retry_limit", "dns_packet_max", "dns_defnames", "dns_multicast_local", "dns_nameservers", "append_domain", "ipcache_size (number of entries)", "ipcache_low (percent)", "ipcache_high (percent)", "fqdncache_size (number of entries)", "memory_pools_limit (bytes)", "forwarded_for on|off|transparent|truncate|delete", "cachemgr_passwd", "connect_retries", "chroot", "pipeline_prefetch", "high_response_time_warning (msec)", "high_page_fault_warning", "high_memory_warning", "sleep_after_fork (microseconds)", "max_filedescriptors"],"isenabled": [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],"allsections": ["OPTIONS FOR SMP", "OPTIONS FOR AUTHENTICATION", "ACCESS CONTROLS", "NETWORK OPTIONS", "SSL OPTIONS", "OPTIONS RELATING TO EXTERNAL SSL_CRTD", "OPTIONS WHICH AFFECT THE NEIGHBOR SELECTION ALGORITHM", "MEMORY CACHE OPTIONS", "DISK CACHE OPTIONS", "LOGFILE OPTIONS", "OPTIONS FOR TROUBLESHOOTING", "OPTIONS FOR FTP GATEWAYING", "OPTIONS FOR EXTERNAL SUPPORT PROGRAMS", "OPTIONS FOR URL REWRITING", "OPTIONS FOR STORE ID", "OPTIONS FOR TUNING THE CACHE", "HTTP OPTIONS", "TIMEOUTS", "ADMINISTRATIVE PARAMETERS", "OPTIONS FOR THE CACHE REGISTRATION SERVICE", "HTTPD-ACCELERATOR OPTIONS", "DELAY POOL PARAMETERS", "CLIENT DELAY POOL PARAMETERS", "WCCPv1 AND WCCPv2 CONFIGURATION OPTIONS", "PERSISTENT CONNECTION HANDLING", "CACHE DIGEST OPTIONS", "SNMP OPTIONS", "ICP OPTIONS", "MULTICAST ICP OPTIONS", "INTERNAL ICON OPTIONS", "ERROR PAGE OPTIONS", "OPTIONS INFLUENCING REQUEST FORWARDING", "ADVANCED NETWORKING OPTIONS", "ICAP OPTIONS", "eCAP OPTIONS", "MESSAGE ADAPTATION OPTIONS", "DNS OPTIONS", "MISCELLANEOUS"],"switchable": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],"switchposition"help": ["\tNumber of main Squid processes or \"workers\" to fork and maintain.\n\t0: \"no daemon\" mode, like running \"squid -N ...\"\n\t1: \"no SMP\" mode, start one main Squid process daemon (default)\n\tN: start N main Squid process daemons (i.e., SMP mode)\n\n\tIn SMP mode, each worker does nearly all what a single Squid daemon\n\tdoes (e.g., listen on http_port and forward HTTP requests).\nDefault:\n SMP support disabled.\n", "\tUsage: cpu_affinity_map process_numbers=P1,P2,... cores=C1,C2,...\n\n\tSets 1:1 mapping between Squid processes and CPU cores. For example,\n\n\t    cpu_affinity_map process_numbers=1,2,3,4 cores=1,3,5,7\n\n\taffects processes 1 through 4 only and places them on the first\n\tfour even cores, starting with core 1.\n\n\tCPU cores are numbered starting from 1. Requires support for\n\tsched_getaffinity(2) and sched_setaffinity(2) system calls.\n\n\tMultiple cpu_affinity_map options are merged.\n\n\tSee also: workers\nDefault:\n Let operating system decide.\n", "\tThis is used to define parameters for the various authentication\n\tschemes supported by Squid.\n\n\t\tformat: auth_param scheme parameter [setting]\n\n\tThe order in which authentication schemes are presented to the client is\n\tdependent on the order the scheme first appears in config file. IE\n\thas a bug (it's not RFC 2617 compliant) in that it will use the basic\n\tscheme if basic is the first entry presented, even if more secure\n\tschemes are presented. For now use the order in the recommended\n\tsettings section below. If other browsers have difficulties (don't\n\trecognize the schemes offered even if you are using basic) either\n\tput basic first, or disable the other schemes (by commenting out their\n\tprogram entry).\n\n\tOnce an authentication scheme is fully configured, it can only be\n\tshutdown by shutting squid down and restarting. Changes can be made on\n\tthe fly and activated with a reconfigure. I.E. You can change to a\n\tdifferent helper, but not unconfigure the helper completely.\n\n\tPlease note that while this directive defines how Squid processes\n\tauthentication it does not automatically activate authentication.\n\tTo use authentication you must in addition make use of ACLs based\n\ton login name in http_access (proxy_auth, proxy_auth_regex or\n\texternal with %LOGIN used in the format tag). The browser will be\n\tchallenged for authentication on the first such acl encountered\n\tin http_access processing and will also be re-challenged for new\n\tlogin credentials if the request is being denied by a proxy_auth\n\ttype acl.\n\n\tWARNING: authentication can't be used in a transparently intercepting\n\tproxy as the client then thinks it is talking to an origin server and\n\tnot the proxy. This is a limitation of bending the TCP/IP protocol to\n\ttransparently intercepting port 80, not a limitation in Squid.\n\tPorts flagged 'transparent', 'intercept', or 'tproxy' have\n\tauthentication disabled.\n\n\t=== Parameters common to all schemes. ===\n\n\t\"program\" cmdline\n\t\tSpecifies the command for the external authenticator.\n\n\t\tBy default, each authentication scheme is not used unless a\n\t\tprogram is specified.\n\n\t\tSee http://wiki.squid-cache.org/Features/AddonHelpers for\n\t\tmore details on helper operations and creating your own.\n\n\t\"key_extras\" format\n\t\tSpecifies a string to be append to request line format for\n\t\tthe authentication helper. \"Quoted\" format values may contain\n\t\tspaces and logformat %macros. In theory, any logformat %macro\n\t\tcan be used. In practice, a %macro expands as a dash (-) if\n\t\tthe helper request is sent before the required macro\n\t\tinformation is available to Squid.\n\n\t\tBy default, Squid uses request formats provided in\n\t\tscheme-specific examples below (search for %credentials).\n\n\t\tThe expanded key_extras value is added to the Squid credentials\n\t\tcache and, hence, will affect authentication. It can be used to\n\t\tautenticate different users with identical user names (e.g.,\n\t\twhen user authentication depends on http_port).\n\n\t\tAvoid adding frequently changing information to key_extras. For\n\t\texample, if you add user source IP, and it changes frequently\n\t\tin your environment, then max_user_ip ACL is going to treat\n\t\tevery user+IP combination as a unique \"user\", breaking the ACL\n\t\tand wasting a lot of memory on those user records. It will also\n\t\tforce users to authenticate from scratch whenever their IP\n\t\tchanges.\n\n\t\"realm\" string\n\t\tSpecifies the protection scope (aka realm name) which is to be\n\t\treported to the client for the authentication scheme. It is\n\t\tcommonly part of the text the user will see when prompted for\n\t\ttheir username and password.\n\n\t\tFor Basic the default is \"Squid proxy-caching web server\".\n\t\tFor Digest there is no default, this parameter is mandatory.\n\t\tFor NTLM and Negotiate this parameter is ignored.\n\n\t\"children\" numberofchildren [startup=N] [idle=N] [concurrency=N]\n\n\t\tThe maximum number of authenticator processes to spawn. If\n\t\tyou start too few Squid will have to wait for them to process\n\t\ta backlog of credential verifications, slowing it down. When\n\t\tpassword verifications are done via a (slow) network you are\n\t\tlikely to need lots of authenticator processes.\n\n\t\tThe startup= and idle= options permit some skew in the exact\n\t\tamount run. A minimum of startup=N will begin during startup\n\t\tand reconfigure. Squid will start more in groups of up to\n\t\tidle=N in an attempt to meet traffic needs and to keep idle=N\n\t\tfree above those traffic needs up to the maximum.\n\n\t\tThe concurrency= option sets the number of concurrent requests\n\t\tthe helper can process.  The default of 0 is used for helpers\n\t\twho only supports one request at a time. Setting this to a\n\t\tnumber greater than 0 changes the protocol used to include a\n\t\tchannel ID field first on the request/response line, allowing\n\t\tmultiple requests to be sent to the same helper in parallel\n\t\twithout waiting for the response.\n\n\t\tConcurrency must not be set unless it's known the helper\n\t\tsupports the input format with channel-ID fields.\n\n\t\tNOTE: NTLM and Negotiate schemes do not support concurrency\n\t\t\tin the Squid code module even though some helpers can.\n\n\n\n\t=== Example Configuration ===\n\n\tThis configuration displays the recommended authentication scheme\n\torder from most to least secure with recommended minimum configuration\n\tsettings for each scheme:\n\nauth_param negotiate program <uncomment and complete this line to activate>\nauth_param negotiate children 20 startup=0 idle=1\nauth_param negotiate keep_alive on\n\nauth_param digest program <uncomment and complete this line to activate>\nauth_param digest children 20 startup=0 idle=1\nauth_param digest realm Squid proxy-caching web server\nauth_param digest nonce_garbage_interval 5 minutes\nauth_param digest nonce_max_duration 30 minutes\nauth_param digest nonce_max_count 50\n\nauth_param ntlm program <uncomment and complete this line to activate>\nauth_param ntlm children 20 startup=0 idle=1\nauth_param ntlm keep_alive on\n\nauth_param basic program <uncomment and complete this line>\nauth_param basic children 5 startup=5 idle=1\nauth_param basic realm Squid proxy-caching web server\nauth_param basic credentialsttl 2 hours\nDefault:\n none\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tDefining an Access List\n\n\tEvery access list definition must begin with an aclname and acltype, \n\tfollowed by either type-specific arguments or a quoted filename that\n\tthey are read from.\n\n\t   acl aclname acltype argument ...\n\t   acl aclname acltype \"file\" ...\n\n\tWhen using \"file\", the file should contain one item per line.\n\n\tSome acl types supports options which changes their default behaviour.\n\tThe available options are:\n\n\t-i,+i\tBy default, regular expressions are CASE-SENSITIVE. To make them\n\t\tcase-insensitive, use the -i option. To return case-sensitive\n\t\tuse the +i option between patterns, or make a new ACL line\n\t\twithout -i.\t\n\n\t-n\tDisable lookups and address type conversions.  If lookup or\n\t\tconversion is required because the parameter type (IP or\n\t\tdomain name) does not match the message address type (domain\n\t\tname or IP), then the ACL would immediately declare a mismatch\n\t\twithout any warnings or lookups.\n\n\t--\tUsed to stop processing all options, in the case the first acl\n\t\tvalue has '-' character as first character (for example the '-'\n\t\tis a valid domain name)\n\n\tSome acl types require suspending the current request in order\n\tto access some external data source.\n\tThose which do are marked with the tag [slow], those which\n\tdon't are marked as [fast].\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl\n\tfor further information\n\n\t***** ACL TYPES AVAILABLE *****\n\n\tacl aclname src ip-address/mask ...\t clients IP address [fast]\n\tacl aclname src addr1-addr2/mask ...\t range of addresses [fast]\n\tacl aclname dst [-n] ip-address/mask ...\t URL host's IP address [slow]\n\tacl aclname localip ip-address/mask ...  IP address the client connected to [fast]\n\n\tacl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)\n\t   [fast]\n\t   The 'arp' ACL code is not portable to all operating systems.\n\t   It works on Linux, Solaris, Windows, FreeBSD, and some other\n\t   BSD variants.\n\t  \n\t   NOTE: Squid can only determine the MAC/EUI address for IPv4\n\t   clients that are on the same subnet. If the client is on a\n\t   different subnet, then Squid cannot find out its address.\n\t  \n\t   NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either\n\t   encoded directly in the IPv6 address or not available.\n\n\tacl aclname srcdomain   .foo.com ...\n\t   reverse lookup, from client IP [slow]\n\tacl aclname dstdomain [-n] .foo.com ...\n\t   Destination server from URL [fast]\n\tacl aclname srcdom_regex [-i] \\.foo\\.com ...\n\t   regex matching client name [slow]\n\tacl aclname dstdom_regex [-n] [-i] \\.foo\\.com ...\n\t   regex matching server [fast]\n\t  \n\t   For dstdomain and dstdom_regex a reverse lookup is tried if a IP\n\t   based URL is used and no match is found. The name \"none\" is used\n\t   if the reverse lookup fails.\n\n\tacl aclname src_as number ...\n\tacl aclname dst_as number ...\n\t   [fast]\n\t   Except for access control, AS numbers can be used for\n\t   routing of requests to specific caches. Here's an\n\t   example for routing all requests for AS1241 and only\n\t   those to mycache.mydomain.net:\n\t   acl asexample dst_as 1241\n\t   cache_peer_access mycache.mydomain.net allow asexample\n\t   cache_peer_access mycache_mydomain.net deny all\n\n\tacl aclname peername myPeer ...\n\t   [fast]\n\t   match against a named cache_peer entry\n\t   set unique name= on cache_peer lines for reliable use.\n\n\tacl aclname time [day-abbrevs] [h1:m1-h2:m2]\n\t   [fast]\n\t    day-abbrevs:\n\t  \tS - Sunday\n\t  \tM - Monday\n\t  \tT - Tuesday\n\t  \tW - Wednesday\n\t  \tH - Thursday\n\t  \tF - Friday\n\t  \tA - Saturday\n\t    h1:m1 must be less than h2:m2\n\n\tacl aclname url_regex [-i] ^http:// ...\n\t   regex matching on whole URL [fast]\n\tacl aclname urllogin [-i] [^a-zA-Z0-9] ...\n\t   regex matching on URL login field\n\tacl aclname urlpath_regex [-i] \\.gif$ ...\n\t   regex matching on URL path [fast]\n\n\tacl aclname port 80 70 21 0-1024...    destination TCP port [fast]\n\t                                       ranges are alloed\n\tacl aclname localport 3128 ...\t       TCP port the client connected to [fast]\n\t                                       NP: for interception mode this is usually '80'\n\n\tacl aclname myportname 3128 ...        *_port name [fast]\n\n\tacl aclname proto HTTP FTP ...         request protocol [fast]\n \n\tacl aclname method GET POST ...        HTTP request method [fast]\n\n\tacl aclname http_status 200 301 500- 400-403 ... \n\t   status code in reply [fast]\n\n\tacl aclname browser [-i] regexp ...\n\t   pattern match on User-Agent header (see also req_header below) [fast]\n\n\tacl aclname referer_regex [-i] regexp ...\n\t   pattern match on Referer header [fast]\n\t   Referer is highly unreliable, so use with care\n\n\tacl aclname ident username ...\n\tacl aclname ident_regex [-i] pattern ...\n\t   string match on ident output [slow]\n\t   use REQUIRED to accept any non-null ident.\n\n\tacl aclname proxy_auth [-i] username ...\n\tacl aclname proxy_auth_regex [-i] pattern ...\n\t   perform http authentication challenge to the client and match against\n\t   supplied credentials [slow]\n\t  \n\t   takes a list of allowed usernames.\n\t   use REQUIRED to accept any valid username.\n\t  \n\t   Will use proxy authentication in forward-proxy scenarios, and plain\n\t   http authenticaiton in reverse-proxy scenarios\n\t  \n\t   NOTE: when a Proxy-Authentication header is sent but it is not\n\t   needed during ACL checking the username is NOT logged\n\t   in access.log.\n\t  \n\t   NOTE: proxy_auth requires a EXTERNAL authentication program\n\t   to check username/password combinations (see\n\t   auth_param directive).\n\t  \n\t   NOTE: proxy_auth can't be used in a transparent/intercepting proxy\n\t   as the browser needs to be configured for using a proxy in order\n\t   to respond to proxy authentication.\n\n\tacl aclname snmp_community string ...\n\t   A community string to limit access to your SNMP Agent [fast]\n\t   Example:\n\t  \n\t  \tacl snmppublic snmp_community public\n\n\tacl aclname maxconn number\n\t   This will be matched when the client's IP address has\n\t   more than <number> TCP connections established. [fast]\n\t   NOTE: This only measures direct TCP links so X-Forwarded-For\n\t   indirect clients are not counted.\n\n\tacl aclname max_user_ip [-s] number\n\t   This will be matched when the user attempts to log in from more\n\t   than <number> different ip addresses. The authenticate_ip_ttl\n\t   parameter controls the timeout on the ip entries. [fast]\n\t   If -s is specified the limit is strict, denying browsing\n\t   from any further IP addresses until the ttl has expired. Without\n\t   -s Squid will just annoy the user by \"randomly\" denying requests.\n\t   (the counter is reset each time the limit is reached and a\n\t   request is denied)\n\t   NOTE: in acceleration mode or where there is mesh of child proxies,\n\t   clients may appear to come from multiple addresses if they are\n\t   going through proxy farms, so a limit of 1 may cause user problems.\n\n\tacl aclname random probability\n\t   Pseudo-randomly match requests. Based on the probability given.\n\t   Probability may be written as a decimal (0.333), fraction (1/3)\n\t   or ratio of matches:non-matches (3:5).\n\n\tacl aclname req_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the request generated\n\t   by the client. Can be used to detect file upload or some\n\t   types HTTP tunneling requests [fast]\n\t   NOTE: This does NOT match the reply. You cannot use this\n\t   to match the returned file type.\n\n\tacl aclname req_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known request headers.  May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACL [fast]\n\n\tacl aclname rep_mime_type [-i] mime-type ...\n\t   regex match against the mime type of the reply received by\n\t   squid. Can be used to detect file download or some\n\t   types HTTP tunneling requests. [fast]\n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname rep_header header-name [-i] any\\.regex\\.here\n\t   regex match against any of the known reply headers. May be\n\t   thought of as a superset of \"browser\", \"referer\" and \"mime-type\"\n\t   ACLs [fast]\n\n\tacl aclname external class_name [arguments...]\n\t   external ACL lookup via a helper class defined by the\n\t   external_acl_type directive [slow]\n\n\tacl aclname user_cert attribute values...\n\t   match against attributes in a user SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]\n\n\tacl aclname ca_cert attribute values...\n\t   match against attributes a users issuing CA SSL certificate\n\t   attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]\n\n\tacl aclname ext_user username ...\n\tacl aclname ext_user_regex [-i] pattern ...\n\t   string match on username returned by external acl helper [slow]\n\t   use REQUIRED to accept any non-null user name.\n\n\tacl aclname tag tagvalue ...\n\t   string match on tag returned by external acl helper [fast]\n\t   DEPRECATED. Only the first tag will match with this ACL.\n\t   Use the 'note' ACL instead for handling multiple tag values.\n\n\tacl aclname hier_code codename ...\n\t   string match against squid hierarchy code(s); [fast]\n\t    e.g., DIRECT, PARENT_HIT, NONE, etc.\n\t  \n\t   NOTE: This has no effect in http_access rules. It only has\n\t   effect in rules that affect the reply data stream such as\n\t   http_reply_access.\n\n\tacl aclname note name [value ...]\n\t   match transaction annotation [fast]\n\t   Without values, matches any annotation with a given name.\n\t   With value(s), matches any annotation with a given name that\n\t   also has one of the given values.\n\t   Names and values are compared using a string equality test.\n\t   Annotation sources include note and adaptation_meta directives\n\t   as well as helper and eCAP responses.\n\n\tacl aclname adaptation_service service ...\n\t   Matches the name of any icap_service, ecap_service,\n\t   adaptation_service_set, or adaptation_service_chain that Squid\n\t   has used (or attempted to use) for the master transaction.\n\t   This ACL must be defined after the corresponding adaptation\n\t   service is named in squid.conf. This ACL is usable with\n\t   adaptation_meta because it starts matching immediately after\n\t   the service has been selected for adaptation.\n\n\tacl aclname any-of acl1 acl2 ...\n\t   match any one of the acls [fast or slow]\n\t   The first matching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple any-of lines with the same name are ORed.\n\t   For example, A = (a1 or a2) or (a3 or a4) can be written as\n\t     acl A any-of a1 a2\n\t     acl A any-of a3 a4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tacl aclname all-of acl1 acl2 ... \n\t   match all of the acls [fast or slow]\n\t   The first mismatching ACL stops further ACL evaluation.\n\t  \n\t   ACLs from multiple all-of lines with the same name are ORed.\n\t   For example, B = (b1 and b2) or (b3 and b4) can be written as\n\t     acl B all-of b1 b2\n\t     acl B all-of b3 b4\n\t  \n\t   This group ACL is fast if all evaluated ACLs in the group are fast\n\t   and slow otherwise.\n\n\tExamples:\n\t\tacl macaddress arp 09:00:2b:23:45:67\n\t\tacl myexample dst_as 1241\n\t\tacl password proxy_auth REQUIRED\n\t\tacl fileupload req_mime_type -i ^multipart/form-data$\n\t\tacl javascript rep_mime_type -i ^application/x-javascript$\n\nDefault:\n ACLs all, manager, localhost, and to_localhost are predefined.\n\n\n Recommended minimum configuration:\n\n\n Example rule allowing access from your local networks.\n Adapt to list your (internal) IP networks from where browsing\n should be allowed\nacl localnet src 10.0.0.0/8\t RFC1918 possible internal network\nacl localnet src 172.16.0.0/12\t RFC1918 possible internal network\nacl localnet src 192.168.0.0/16\t RFC1918 possible internal network\nacl localnet src fc00::/7        RFC 4193 local private network range\nacl localnet src fe80::/10       RFC 4291 link-local (directly plugged) machines\n\nacl SSL_ports port 443\n", "\tAllowing or Denying access based on defined access lists\n\n\tTo allow or deny a message received on an HTTP, HTTPS, or FTP port:\n\thttp_access allow|deny [!]aclname ...\n\n\tNOTE on default values:\n\n\tIf there are no \"access\" lines present, the default is to deny\n\tthe request.\n\n\tIf none of the \"access\" lines cause a match, the default is the\n\topposite of the last line in the list.  If the last line was\n\tdeny, the default is allow.  Conversely, if the last line\n\tis allow, the default will be deny.  For these reasons, it is a\n\tgood idea to have an \"deny all\" entry at the end of your access\n\tlists to avoid potential confusion.\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\nDefault:\n Deny, unless rules exist in squid.conf.\n\n\n\n Recommended minimum Access Permission configuration:\n\n Deny requests to certain unsafe ports\nhttp_access deny !Safe_ports\n", "\tAllowing or Denying access based on defined access lists\n\n\tTo allow or deny a message received on an HTTP, HTTPS, or FTP port:\n\thttp_access allow|deny [!]aclname ...\n\n\tNOTE on default values:\n\n\tIf there are no \"access\" lines present, the default is to deny\n\tthe request.\n\n\tIf none of the \"access\" lines cause a match, the default is the\n\topposite of the last line in the list.  If the last line was\n\tdeny, the default is allow.  Conversely, if the last line\n\tis allow, the default will be deny.  For these reasons, it is a\n\tgood idea to have an \"deny all\" entry at the end of your access\n\tlists to avoid potential confusion.\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\nDefault:\n Deny, unless rules exist in squid.conf.\n\n\n\n Recommended minimum Access Permission configuration:\n\n Deny requests to certain unsafe ports\nhttp_access deny !Safe_ports\n", "\tAllowing or Denying access based on defined access lists\n\n\tTo allow or deny a message received on an HTTP, HTTPS, or FTP port:\n\thttp_access allow|deny [!]aclname ...\n\n\tNOTE on default values:\n\n\tIf there are no \"access\" lines present, the default is to deny\n\tthe request.\n\n\tIf none of the \"access\" lines cause a match, the default is the\n\topposite of the last line in the list.  If the last line was\n\tdeny, the default is allow.  Conversely, if the last line\n\tis allow, the default will be deny.  For these reasons, it is a\n\tgood idea to have an \"deny all\" entry at the end of your access\n\tlists to avoid potential confusion.\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\nDefault:\n Deny, unless rules exist in squid.conf.\n\n\n\n Recommended minimum Access Permission configuration:\n\n Deny requests to certain unsafe ports\nhttp_access deny !Safe_ports\n", "\tAllowing or Denying access based on defined access lists\n\n\tTo allow or deny a message received on an HTTP, HTTPS, or FTP port:\n\thttp_access allow|deny [!]aclname ...\n\n\tNOTE on default values:\n\n\tIf there are no \"access\" lines present, the default is to deny\n\tthe request.\n\n\tIf none of the \"access\" lines cause a match, the default is the\n\topposite of the last line in the list.  If the last line was\n\tdeny, the default is allow.  Conversely, if the last line\n\tis allow, the default will be deny.  For these reasons, it is a\n\tgood idea to have an \"deny all\" entry at the end of your access\n\tlists to avoid potential confusion.\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\nDefault:\n Deny, unless rules exist in squid.conf.\n\n\n\n Recommended minimum Access Permission configuration:\n\n Deny requests to certain unsafe ports\nhttp_access deny !Safe_ports\n", "\tAllowing or Denying access based on defined access lists\n\n\tTo allow or deny a message received on an HTTP, HTTPS, or FTP port:\n\thttp_access allow|deny [!]aclname ...\n\n\tNOTE on default values:\n\n\tIf there are no \"access\" lines present, the default is to deny\n\tthe request.\n\n\tIf none of the \"access\" lines cause a match, the default is the\n\topposite of the last line in the list.  If the last line was\n\tdeny, the default is allow.  Conversely, if the last line\n\tis allow, the default will be deny.  For these reasons, it is a\n\tgood idea to have an \"deny all\" entry at the end of your access\n\tlists to avoid potential confusion.\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\nDefault:\n Deny, unless rules exist in squid.conf.\n\n\n\n Recommended minimum Access Permission configuration:\n\n Deny requests to certain unsafe ports\nhttp_access deny !Safe_ports\n", "\tAllowing or Denying access based on defined access lists\n\n\tTo allow or deny a message received on an HTTP, HTTPS, or FTP port:\n\thttp_access allow|deny [!]aclname ...\n\n\tNOTE on default values:\n\n\tIf there are no \"access\" lines present, the default is to deny\n\tthe request.\n\n\tIf none of the \"access\" lines cause a match, the default is the\n\topposite of the last line in the list.  If the last line was\n\tdeny, the default is allow.  Conversely, if the last line\n\tis allow, the default will be deny.  For these reasons, it is a\n\tgood idea to have an \"deny all\" entry at the end of your access\n\tlists to avoid potential confusion.\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\nDefault:\n Deny, unless rules exist in squid.conf.\n\n\n\n Recommended minimum Access Permission configuration:\n\n Deny requests to certain unsafe ports\nhttp_access deny !Safe_ports\n", "\tUsage:\tport [mode] [options]\n\t\thostname:port [mode] [options]\n\t\t1.2.3.4:port [mode] [options]\n\n\tThe socket addresses where Squid will listen for HTTP client\n\trequests.  You may specify multiple socket addresses.\n\tThere are three forms: port alone, hostname with port, and\n\tIP address with port.  If you specify a hostname or IP\n\taddress, Squid binds the socket to that specific\n\taddress. Most likely, you do not need to bind to a specific\n\taddress, so you can use the port number alone.\n\n\tIf you are running Squid in accelerator mode, you\n\tprobably want to listen on port 80 also, or instead.\n\n\tThe -a command line option may be used to specify additional\n\tport(s) where Squid listens for proxy request. Such ports will\n\tbe plain proxy ports with no options.\n\n\tYou may specify multiple socket addresses on multiple lines.\n\n\tModes:\n\n\t   intercept\tSupport for IP-Layer NAT interception delivering\n\t\t\ttraffic to this Squid port.\n\t\t\tNP: disables authentication on the port.\n\n\t   tproxy\tSupport Linux TPROXY (or BSD divert-to) with spoofing\n\t\t\tof outgoing connections using the client IP address.\n\t\t\tNP: disables authentication on the port.\n\n\t   accel\tAccelerator / reverse proxy mode\n\n\t   ssl-bump\tFor each CONNECT request allowed by ssl_bump ACLs,\n\t\t\testablish secure connection with the client and with\n\t\t\tthe server, decrypt HTTPS messages as they pass through\n\t\t\tSquid, and treat them as unencrypted HTTP messages,\n\t\t\tbecoming the man-in-the-middle.\n\n\t\t\tThe ssl_bump option is required to fully enable\n\t\t\tbumping of CONNECT requests.\n\n\tOmitting the mode flag causes default forward proxy mode to be used.\n\n\n\tAccelerator Mode Options:\n\n\t   defaultsite=domainname\n\t\t\tWhat to use for the Host: header if it is not present\n\t\t\tin a request. Determines what site (not origin server)\n\t\t\taccelerators should consider the default.\n\n\t   no-vhost\tDisable using HTTP/1.1 Host header for virtual domain support.\n\n\t   protocol=\tProtocol to reconstruct accelerated and intercepted\n\t\t\trequests with. Defaults to HTTP/1.1 for http_port and\n\t\t\tHTTPS/1.1 for https_port.\n\t\t\tWhen an unsupported value is configured Squid will\n\t\t\tproduce a FATAL error.\n\t\t\tValues: HTTP or HTTP/1.1, HTTPS or HTTPS/1.1\n\n\t   vport\tVirtual host port support. Using the http_port number\n\t\t\tinstead of the port passed on Host: headers.\n\n\t   vport=NN\tVirtual host port support. Using the specified port\n\t\t\tnumber instead of the port passed on Host: headers.\n\n\t   act-as-origin\n\t\t\tAct as if this Squid is the origin server.\n\t\t\tThis currently means generate new Date: and Expires:\n\t\t\theaders on HIT instead of adding Age:.\n\n\t   ignore-cc\tIgnore request Cache-Control headers.\n\n\t\t\tWARNING: This option violates HTTP specifications if\n\t\t\tused in non-accelerator setups.\n\n\t   allow-direct\tAllow direct forwarding in accelerator mode. Normally\n\t\t\taccelerated requests are denied direct forwarding as if\n\t\t\tnever_direct was used.\n\n\t\t\tWARNING: this option opens accelerator mode to security\n\t\t\tvulnerabilities usually only affecting in interception\n\t\t\tmode. Make sure to protect forwarding with suitable\n\t\t\thttp_access rules when using this.\n\n\n\tSSL Bump Mode Options:\n\t    In addition to these options ssl-bump requires TLS/SSL options.\n\n\t   generate-host-certificates[=<on|off>]\n\t\t\tDynamically create SSL server certificates for the\n\t\t\tdestination hosts of bumped CONNECT requests.When \n\t\t\tenabled, the cert and key options are used to sign\n\t\t\tgenerated certificates. Otherwise generated\n\t\t\tcertificate will be selfsigned.\n\t\t\tIf there is a CA certificate lifetime of the generated \n\t\t\tcertificate equals lifetime of the CA certificate. If\n\t\t\tgenerated certificate is selfsigned lifetime is three \n\t\t\tyears.\n\t\t\tThis option is enabled by default when ssl-bump is used.\n\t\t\tSee the ssl-bump option above for more information.\n\t\t\t\n\t   dynamic_cert_mem_cache_size=SIZE\n\t\t\tApproximate total RAM size spent on cached generated\n\t\t\tcertificates. If set to zero, caching is disabled. The\n\t\t\tdefault value is 4MB.\n\n\tTLS / SSL Options:\n\n\t   cert=\tPath to SSL certificate (PEM format).\n\n\t   key=\t\tPath to SSL private key file (PEM format)\n\t\t\tif not specified, the certificate file is\n\t\t\tassumed to be a combined certificate and\n\t\t\tkey file.\n\n\t   version=\tThe version of SSL/TLS supported\n\t\t\t    1\tautomatic (default)\n\t\t\t    2\tSSLv2 only\n\t\t\t    3\tSSLv3 only\n\t\t\t    4\tTLSv1.0 only\n\t\t\t    5\tTLSv1.1 only\n\t\t\t    6\tTLSv1.2 only\n\n\t   cipher=\tColon separated list of supported ciphers.\n\t\t\tNOTE: some ciphers such as EDH ciphers depend on\n\t\t\t      additional settings. If those settings are\n\t\t\t      omitted the ciphers may be silently ignored\n\t\t\t      by the OpenSSL library.\n\n\t   options=\tVarious SSL implementation options. The most important\n\t\t\tbeing:\n\t\t\t    NO_SSLv2    Disallow the use of SSLv2\n\t\t\t    NO_SSLv3    Disallow the use of SSLv3\n\t\t\t    NO_TLSv1    Disallow the use of TLSv1.0\n\t\t\t    NO_TLSv1_1  Disallow the use of TLSv1.1\n\t\t\t    NO_TLSv1_2  Disallow the use of TLSv1.2\n\t\t\t    SINGLE_DH_USE Always create a new key when using\n\t\t\t\t      temporary/ephemeral DH key exchanges\n\t\t\t    NO_TICKET Disables TLS tickets extension\n\t\t\t    ALL       Enable various bug workarounds\n\t\t\t\t      suggested as \"harmless\" by OpenSSL\n\t\t\t\t      Be warned that this reduces SSL/TLS\n\t\t\t\t      strength to some attacks.\n\t\t\tSee OpenSSL SSL_CTX_set_options documentation for a\n\t\t\tcomplete list of options.\n\n\t   clientca=\tFile containing the list of CAs to use when\n\t\t\trequesting a client certificate.\n\n\t   cafile=\tFile containing additional CA certificates to\n\t\t\tuse when verifying client certificates. If unset\n\t\t\tclientca will be used.\n\n\t   capath=\tDirectory containing additional CA certificates\n\t\t\tand CRL lists to use when verifying client certificates.\n\n\t   crlfile=\tFile of additional CRL lists to use when verifying\n\t\t\tthe client certificate, in addition to CRLs stored in\n\t\t\tthe capath. Implies VERIFY_CRL flag below.\n\n\t   dhparams=\tFile containing DH parameters for temporary/ephemeral\n\t\t\tDH key exchanges. See OpenSSL documentation for details\n\t\t\ton how to create this file.\n\t\t\tWARNING: EDH ciphers will be silently disabled if this\n\t\t\t\t option is not set.\n\n\t   sslflags=\tVarious flags modifying the use of SSL:\n\t\t\t    DELAYED_AUTH\n\t\t\t\tDon't request client certificates\n\t\t\t\timmediately, but wait until acl processing\n\t\t\t\trequires a certificate (not yet implemented).\n\t\t\t    NO_DEFAULT_CA\n\t\t\t\tDon't use the default CA lists built in\n\t\t\t\tto OpenSSL.\n\t\t\t    NO_SESSION_REUSE\n\t\t\t\tDon't allow for session reuse. Each connection\n\t\t\t\twill result in a new SSL session.\n\t\t\t    VERIFY_CRL\n\t\t\t\tVerify CRL lists when accepting client\n\t\t\t\tcertificates.\n\t\t\t    VERIFY_CRL_ALL\n\t\t\t\tVerify CRL lists for all certificates in the\n\t\t\t\tclient certificate chain.\n\n\t   sslcontext=\tSSL session ID context identifier.\n\n\tOther Options:\n\n\t   connection-auth[=on|off]\n\t                use connection-auth=off to tell Squid to prevent \n\t                forwarding Microsoft connection oriented authentication\n\t\t\t(NTLM, Negotiate and Kerberos)\n\n\t   disable-pmtu-discovery=\n\t\t\tControl Path-MTU discovery usage:\n\t\t\t    off\t\tlets OS decide on what to do (default).\n\t\t\t    transparent\tdisable PMTU discovery when transparent\n\t\t\t\t\tsupport is enabled.\n\t\t\t    always\tdisable always PMTU discovery.\n\n\t\t\tIn many setups of transparently intercepting proxies\n\t\t\tPath-MTU discovery can not work on traffic towards the\n\t\t\tclients. This is the case when the intercepting device\n\t\t\tdoes not fully track connections and fails to forward\n\t\t\tICMP must fragment messages to the cache server. If you\n\t\t\thave such setup and experience that certain clients\n\t\t\tsporadically hang or never complete requests set\n\t\t\tdisable-pmtu-discovery option to 'transparent'.\n\n\t   name=\tSpecifies a internal name for the port. Defaults to\n\t\t\tthe port specification (port or addr:port)\n\n\t   tcpkeepalive[=idle,interval,timeout]\n\t\t\tEnable TCP keepalive probes of idle connections.\n\t\t\tIn seconds; idle is the initial time before TCP starts\n\t\t\tprobing the connection, interval how often to probe, and\n\t\t\ttimeout the time before giving up.\n\n\t   require-proxy-header\n\t\t\tRequire PROXY protocol version 1 or 2 connections.\n\t\t\tThe proxy_protocol_access is required to whitelist\n\t\t\tdownstream proxies which can be trusted.\n\n\tIf you run Squid on a dual-homed machine with an internal\n\tand an external interface we recommend you to specify the\n\tinternal address:port in http_port. This way Squid will only be\n\tvisible on the internal address.\n\n\n\n Squid normally listens to port 3128\nhttp_port 3128\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tUsage:  [ip:]port cert=certificate.pem [key=key.pem] [mode] [options...]\n\n\tThe socket address where Squid will listen for client requests made\n\tover TLS or SSL connections. Commonly referred to as HTTPS.\n\n\tThis is most useful for situations where you are running squid in\n\taccelerator mode and you want to do the SSL work at the accelerator level.\n\n\tYou may specify multiple socket addresses on multiple lines,\n\teach with their own SSL certificate and/or options.\n\n\tModes:\n\n\t   accel\tAccelerator / reverse proxy mode\n\n\t   intercept\tSupport for IP-Layer interception of\n\t\t\toutgoing requests without browser settings.\n\t\t\tNP: disables authentication and IPv6 on the port.\n\n\t   tproxy\tSupport Linux TPROXY for spoofing outgoing\n\t\t\tconnections using the client IP address.\n\t\t\tNP: disables authentication and maybe IPv6 on the port.\n\n\t   ssl-bump\tFor each intercepted connection allowed by ssl_bump\n\t\t\tACLs, establish a secure connection with the client and with\n\t\t\tthe server, decrypt HTTPS messages as they pass through\n\t\t\tSquid, and treat them as unencrypted HTTP messages,\n\t\t\tbecoming the man-in-the-middle.\n\n\t\t\tAn \"ssl_bump server-first\" match is required to\n\t\t\tfully enable bumping of intercepted SSL\tconnections.\n\n\t\t\tRequires tproxy or intercept.\n\n\tOmitting the mode flag causes default forward proxy mode to be used.\n\n\n\tSee http_port for a list of generic options\n\n\n\tSSL Options:\n\n\t   cert=\tPath to SSL certificate (PEM format).\n\n\t   key=\t\tPath to SSL private key file (PEM format)\n\t\t\tif not specified, the certificate file is\n\t\t\tassumed to be a combined certificate and\n\t\t\tkey file.\n\n\t   version=\tThe version of SSL/TLS supported\n\t\t\t    1\tautomatic (default)\n\t\t\t    2\tSSLv2 only\n\t\t\t    3\tSSLv3 only\n\t\t\t    4\tTLSv1 only\n\n\t   cipher=\tColon separated list of supported ciphers.\n\n\t   options=\tVarious SSL engine options. The most important\n\t\t\tbeing:\n\t\t\t    NO_SSLv2  Disallow the use of SSLv2\n\t\t\t    NO_SSLv3  Disallow the use of SSLv3\n\t\t\t    NO_TLSv1  Disallow the use of TLSv1\n\t\t\t    SINGLE_DH_USE Always create a new key when using\n\t\t\t\t      temporary/ephemeral DH key exchanges\n\t\t\tSee src/ssl_support.c or OpenSSL SSL_CTX_set_options\n\t\t\tdocumentation for a complete list of options.\n\n\t   clientca=\tFile containing the list of CAs to use when\n\t\t\trequesting a client certificate.\n\n\t   cafile=\tFile containing additional CA certificates to\n\t\t\tuse when verifying client certificates. If unset\n\t\t\tclientca will be used.\n\n\t   capath=\tDirectory containing additional CA certificates\n\t\t\tand CRL lists to use when verifying client certificates.\n\n\t   crlfile=\tFile of additional CRL lists to use when verifying\n\t\t\tthe client certificate, in addition to CRLs stored in\n\t\t\tthe capath. Implies VERIFY_CRL flag below.\n\n\t   dhparams=\tFile containing DH parameters for temporary/ephemeral\n\t\t\tDH key exchanges.\n\n\t   sslflags=\tVarious flags modifying the use of SSL:\n\t\t\t    DELAYED_AUTH\n\t\t\t\tDon't request client certificates\n\t\t\t\timmediately, but wait until acl processing\n\t\t\t\trequires a certificate (not yet implemented).\n\t\t\t    NO_DEFAULT_CA\n\t\t\t\tDon't use the default CA lists built in\n\t\t\t\tto OpenSSL.\n\t\t\t    NO_SESSION_REUSE\n\t\t\t\tDon't allow for session reuse. Each connection\n\t\t\t\twill result in a new SSL session.\n\t\t\t    VERIFY_CRL\n\t\t\t\tVerify CRL lists when accepting client\n\t\t\t\tcertificates.\n\t\t\t    VERIFY_CRL_ALL\n\t\t\t\tVerify CRL lists for all certificates in the\n\t\t\t\tclient certificate chain.\n\n\t   sslcontext=\tSSL session ID context identifier.\n\n\t   generate-host-certificates[=<on|off>]\n\t\t\tDynamically create SSL server certificates for the\n\t\t\tdestination hosts of bumped SSL requests.When\n\t\t\tenabled, the cert and key options are used to sign\n\t\t\tgenerated certificates. Otherwise generated\n\t\t\tcertificate will be selfsigned.\n\t\t\tIf there is CA certificate life time of generated\n\t\t\tcertificate equals lifetime of CA certificate. If\n\t\t\tgenerated certificate is selfsigned lifetime is three\n\t\t\tyears.\n\t\t\tThis option is enabled by default when SslBump is used.\n\t\t\tSee the sslBump option above for more information.\n\n\t   dynamic_cert_mem_cache_size=SIZE\n\t\t\tApproximate total RAM size spent on cached generated\n\t\t\tcertificates. If set to zero, caching is disabled. The\n\t\t\tdefault value is 4MB.\n\n\tSee http_port for a list of available options.\nDefault:\n none\n", "\tEnables Native FTP proxy by specifying the socket address where Squid\n\tlistens for FTP client requests. See http_port directive for various\n\tways to specify the listening address and mode.\n\n\tUsage: ftp_port address [mode] [options]\n\n\tWARNING: This is a new, experimental, complex feature that has seen\n\tlimited production exposure. Some Squid modules (e.g., caching) do not\n\tcurrently work with native FTP proxying, and many features have not\n\teven been tested for compatibility. Test well before deploying!\n\n\tNative FTP proxying differs substantially from proxying HTTP requests\n\twith ftp:// URIs because Squid works as an FTP server and receives\n\tactual FTP commands (rather than HTTP requests with FTP URLs).\n\n\tNative FTP commands accepted at ftp_port are internally converted or\n\twrapped into HTTP-like messages. The same happens to Native FTP\n\tresponses received from FTP origin servers. Those HTTP-like messages\n\tare shoveled through regular access control and adaptation layers\n\tbetween the FTP client and the FTP origin server. This allows Squid to\n\texamine, adapt, block, and log FTP exchanges. Squid reuses most HTTP\n\tmechanisms when shoveling wrapped FTP messages. For example,\n\thttp_access and adaptation_access directives are used.\n\n\tModes:\n\n\t   intercept\tSame as http_port intercept. The FTP origin address is\n\t\t\tdetermined based on the intended destination of the\n\t\t\tintercepted connection.\n\n\t   tproxy\tSupport Linux TPROXY for spoofing outgoing\n\t\t\tconnections using the client IP address.\n\t\t\tNP: disables authentication and maybe IPv6 on the port.\n\n\tBy default (i.e., without an explicit mode option), Squid extracts the\n\tFTP origin address from the login@origin parameter of the FTP USER\n\tcommand. Many popular FTP clients support such native FTP proxying.\n\n\tOptions:\n\n\t   name=token\tSpecifies an internal name for the port. Defaults to\n\t\t\tthe port address. Usable with myportname ACL.\n\n\t   ftp-track-dirs\n\t\t\tEnables tracking of FTP directories by injecting extra\n\t\t\tPWD commands and adjusting Request-URI (in wrapping\n\t\t\tHTTP requests) to reflect the current FTP server\n\t\t\tdirectory. Tracking is disabled by default.\n\n\t   protocol=FTP\tProtocol to reconstruct accelerated and intercepted\n\t\t\trequests with. Defaults to FTP. No other accepted\n\t\t\tvalues have been tested with. An unsupported value\n\t\t\tresults in a FATAL error. Accepted values are FTP,\n\t\t\tHTTP (or HTTP/1.1), and HTTPS (or HTTPS/1.1).\n\n\tOther http_port modes and options that are not specific to HTTP and\n\tHTTPS may also work.\nDefault:\n none\n", "\tAllows you to select a TOS/Diffserv value for packets outgoing\n\ton the server side, based on an ACL.\n\n\ttcp_outgoing_tos ds-field [!]aclname ...\n\n\tExample where normal_service_net uses the TOS value 0x00\n\tand good_service_net uses 0x20\n\n\tacl normal_service_net src 10.0.0.0/24\n\tacl good_service_net src 10.0.1.0/24\n\ttcp_outgoing_tos 0x00 normal_service_net\n\ttcp_outgoing_tos 0x20 good_service_net\n\n\tTOS/DSCP values really only have local significance - so you should\n\tknow what you're specifying. For more information, see RFC2474,\n\tRFC2475, and RFC3260.\n\n\tThe TOS/DSCP byte must be exactly that - a octet value  0 - 255, or\n\t\"default\" to use whatever default your host has.\n\tNote that only multiples of 4 are usable as the two rightmost bits have\n\tbeen redefined for use by ECN (RFC 3168 section 23.1).\n\tThe squid parser will enforce this by masking away the ECN bits.\n\n\tProcessing proceeds in the order specified, and stops at first fully\n\tmatching line.\n\n\tOnly fast ACLs are supported.\nDefault:\n none\n", "\tAllows you to select a TOS/DSCP value for packets being transmitted\n\ton the client-side, based on an ACL.\n\n\tclientside_tos ds-field [!]aclname ...\n\n\tExample where normal_service_net uses the TOS value 0x00\n\tand good_service_net uses 0x20\n\n\tacl normal_service_net src 10.0.0.0/24\n\tacl good_service_net src 10.0.1.0/24\n\tclientside_tos 0x00 normal_service_net\n\tclientside_tos 0x20 good_service_net\n\n\tNote: This feature is incompatible with qos_flows. Any TOS values set here\n\twill be overwritten by TOS values in qos_flows.\n\n\tThe TOS/DSCP byte must be exactly that - a octet value  0 - 255, or\n\t\"default\" to use whatever default your host has.\n\tNote that only multiples of 4 are usable as the two rightmost bits have\n\tbeen redefined for use by ECN (RFC 3168 section 23.1).\n\tThe squid parser will enforce this by masking away the ECN bits.\n\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       Packet MARK (Linux)\n\n\tAllows you to apply a Netfilter mark value to outgoing packets\n\ton the server side, based on an ACL.\n\n\ttcp_outgoing_mark mark-value [!]aclname ...\n\n\tExample where normal_service_net uses the mark value 0x00\n\tand good_service_net uses 0x20\n\n\tacl normal_service_net src 10.0.0.0/24\n\tacl good_service_net src 10.0.1.0/24\n\ttcp_outgoing_mark 0x00 normal_service_net\n\ttcp_outgoing_mark 0x20 good_service_net\n\n\tOnly fast ACLs are supported.\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       Packet MARK (Linux)\n\n\tAllows you to apply a Netfilter mark value to packets being transmitted\n\ton the client-side, based on an ACL.\n\n\tclientside_mark mark-value [!]aclname ...\n\n\tExample where normal_service_net uses the mark value 0x00\n\tand good_service_net uses 0x20\n\n\tacl normal_service_net src 10.0.0.0/24\n\tacl good_service_net src 10.0.1.0/24\n\tclientside_mark 0x00 normal_service_net\n\tclientside_mark 0x20 good_service_net\n\n\tNote: This feature is incompatible with qos_flows. Any mark values set here\n\twill be overwritten by mark values in qos_flows.\nDefault:\n none\n", "\tAllows you to select a TOS/DSCP value to mark outgoing\n\tconnections to the client, based on where the reply was sourced.\n\tFor platforms using netfilter, allows you to set a netfilter mark\n\tvalue instead of, or in addition to, a TOS value.\n\n\tBy default this functionality is disabled. To enable it with the default\n\tsettings simply use \"qos_flows mark\" or \"qos_flows tos\". Default\n\tsettings will result in the netfilter mark or TOS value being copied\n\tfrom the upstream connection to the client. Note that it is the connection\n\tCONNMARK value not the packet MARK value that is copied.\n\n\tIt is not currently possible to copy the mark or TOS value from the\n\tclient to the upstream connection request.\n\n\tTOS values really only have local significance - so you should\n\tknow what you're specifying. For more information, see RFC2474,\n\tRFC2475, and RFC3260.\n\n\tThe TOS/DSCP byte must be exactly that - a octet value  0 - 255.\n\tNote that only multiples of 4 are usable as the two rightmost bits have\n\tbeen redefined for use by ECN (RFC 3168 section 23.1).\n\tThe squid parser will enforce this by masking away the ECN bits.\n\n\tMark values can be any unsigned 32-bit integer value.\n\n\tThis setting is configured by setting the following values:\n\n\ttos|mark                Whether to set TOS or netfilter mark values\n\n\tlocal-hit=0xFF\t\tValue to mark local cache hits.\n\n\tsibling-hit=0xFF\tValue to mark hits from sibling peers.\n\n\tparent-hit=0xFF\t\tValue to mark hits from parent peers.\n\n\tmiss=0xFF[/mask]\tValue to mark cache misses. Takes precedence\n\t\t\t\tover the preserve-miss feature (see below), unless\n\t\t\t\tmask is specified, in which case only the bits\n\t\t\t\tspecified in the mask are written.\n\n\tThe TOS variant of the following features are only possible on Linux\n\tand require your kernel to be patched with the TOS preserving ZPH\n\tpatch, available from http://zph.bratcheda.org\n\tNo patch is needed to preserve the netfilter mark, which will work\n\twith all variants of netfilter.\n\n\tdisable-preserve-miss\n\t\tThis option disables the preservation of the TOS or netfilter\n\t\tmark. By default, the existing TOS or netfilter mark value of\n\t\tthe response coming from the remote server will be retained\n\t\tand masked with miss-mark.\n\t\tNOTE: in the case of a netfilter mark, the mark must be set on\n\t\tthe connection (using the CONNMARK target) not on the packet\n\t\t(MARK target).\n\n\tmiss-mask=0xFF\n\t\tAllows you to mask certain bits in the TOS or mark value\n\t\treceived from the remote server, before copying the value to\n\t\tthe TOS sent towards clients.\n\t\tDefault for tos: 0xFF (TOS from server is not changed).\n\t\tDefault for mark: 0xFFFFFFFF (mark from server is not changed).\n\n\tAll of these features require the --enable-zph-qos compilation flag\n\t(enabled by default). Netfilter marking also requires the\n\tlibnetfilter_conntrack libraries (--with-netfilter-conntrack) and\n\tlibcap 2.09+ (--with-libcap).\n\nDefault:\n none\n", "\tAllows you to map requests to different outgoing IP addresses\n\tbased on the username or source address of the user making\n\tthe request.\n\n\ttcp_outgoing_address ipaddr [[!]aclname] ...\n\n\tFor example;\n\t\tForwarding clients with dedicated IPs for certain subnets.\n\n\t  acl normal_service_net src 10.0.0.0/24\n\t  acl good_service_net src 10.0.2.0/24\n\n\t  tcp_outgoing_address 2001:db8::c001 good_service_net\n\t  tcp_outgoing_address 10.1.0.2 good_service_net\n\n\t  tcp_outgoing_address 2001:db8::beef normal_service_net\n\t  tcp_outgoing_address 10.1.0.1 normal_service_net\n\n\t  tcp_outgoing_address 2001:db8::1\n\t  tcp_outgoing_address 10.1.0.3\n\n\tProcessing proceeds in the order specified, and stops at first fully\n\tmatching line.\n\n\tSquid will add an implicit IP version test to each line.\n\tRequests going to IPv4 websites will use the outgoing 10.1.0.* addresses.\n\tRequests going to IPv6 websites will use the outgoing 2001:db8:* addresses.\n\n\n\tNOTE: The use of this directive using client dependent ACLs is\n\tincompatible with the use of server side persistent connections. To\n\tensure correct results it is best to set server_persistent_connections\n\tto off when using this directive in such configurations.\n\n\tNOTE: The use of this directive to set a local IP on outgoing TCP links\n\tis incompatible with using TPROXY to set client IP out outbound TCP links.\n\tWhen needing to contact peers use the no-tproxy cache_peer option and the\n\tclient_dst_passthru directive re-enable normal forwarding such as this.\n\nDefault:\n Address selection is performed by the operating system.\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tThe OpenSSL engine to use. You will need to set this if you\n\twould like to use hardware SSL acceleration for example.\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tClient SSL Certificate to use when proxying https:// URLs\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tClient SSL Key to use when proxying https:// URLs\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tSSL version level to use when proxying https:// URLs\n\n\tThe versions of SSL/TLS supported:\n\n\t    1\tautomatic (default)\n\t    2\tSSLv2 only\n\t    3\tSSLv3 only\n\t    4\tTLSv1.0 only\n\t    5\tTLSv1.1 only\n\t    6\tTLSv1.2 only\nDefault:\n automatic SSL/TLS version negotiation\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tColon (:) or comma (,) separated list of SSL implementation options\n\tto use when proxying https:// URLs\n\t\n\tThe most important being:\n\n\t    NO_SSLv2    Disallow the use of SSLv2\n\t    NO_SSLv3    Disallow the use of SSLv3\n\t    NO_TLSv1    Disallow the use of TLSv1.0\n\t    NO_TLSv1_1  Disallow the use of TLSv1.1\n\t    NO_TLSv1_2  Disallow the use of TLSv1.2\n\t    SINGLE_DH_USE\n\t\t      Always create a new key when using temporary/ephemeral\n\t\t      DH key exchanges\n\t    SSL_OP_NO_TICKET\n\t\t      Disable use of RFC5077 session tickets. Some servers\n\t\t      may have problems understanding the TLS extension due\n\t\t      to ambiguous specification in RFC4507.\n\t    ALL       Enable various bug workarounds suggested as \"harmless\"\n\t\t      by OpenSSL. Be warned that this may reduce SSL/TLS\n\t\t      strength to some attacks.\n\t\n\tSee the OpenSSL SSL_CTX_set_options documentation for a\n\tcomplete list of possible options.\n\t\n\tWARNING: This directive takes a single token. If a space is used\n\t\t the value(s) after that space are SILENTLY IGNORED.\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tSSL cipher list to use when proxying https:// URLs\n\n\tColon separated list of supported ciphers.\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tfile containing CA certificates to use when verifying server\n\tcertificates while proxying https:// URLs\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tdirectory containing CA certificates to use when verifying\n\tserver certificates while proxying https:// URLs\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tSets the hashing algorithm to use when signing generated certificates.\n\tValid algorithm names depend on the OpenSSL library used. The following\n\tnames are usually available: sha1, sha256, sha512, and md5. Please see\n\tyour OpenSSL library manual for the available hashes. By default, Squids\n\tthat support this option use sha256 hashes.\n\n\tSquid does not forcefully purge cached certificates that were generated\n\twith an algorithm other than the currently configured one. They remain\n\tin the cache, subject to the regular cache eviction policy, and become\n\tuseful if the algorithm changes again.\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tThis option is consulted when a CONNECT request is received on\n\tan http_port (or a new connection is intercepted at an\n\thttps_port), provided that port was configured with an ssl-bump\n\tflag. The subsequent data on the connection is either treated as\n\tHTTPS and decrypted OR tunneled at TCP level without decryption,\n\tdepending on the first matching bumping \"action\".\n\n\tssl_bump <action> [!]acl ...\n\n\tThe following bumping actions are currently supported:\n\n\t    splice\n\t\tBecome a TCP tunnel without decrypting proxied traffic.\n\t\tThis is the default action.\n\n\t    bump\n\t\tEstablish a secure connection with the server and, using a\n\t\tmimicked server certificate, with the client.\n\n\t    peek\n\t\tReceive client (step SslBump1) or server (step SslBump2)\n\t\tcertificate while preserving the possibility of splicing the\n\t\tconnection. Peeking at the server certificate (during step 2)\n\t\tusually precludes bumping of the connection at step 3.\n\n\t    stare\n\t\tReceive client (step SslBump1) or server (step SslBump2)\n\t\tcertificate while preserving the possibility of bumping the\n\t\tconnection. Staring at the server certificate (during step 2)\n\t\tusually precludes splicing of the connection at step 3.\n\n\t    terminate\n\t\tClose client and server connections.\n\n\tBackward compatibility actions available at step SslBump1:\n\n\t    client-first\n\t\tBump the connection. Establish a secure connection with the\n\t\tclient first, then connect to the server. This old mode does\n\t\tnot allow Squid to mimic server SSL certificate and does not\n\t\twork with intercepted SSL connections.\n\n\t    server-first\n\t\tBump the connection. Establish a secure connection with the\n\t\tserver first, then establish a secure connection with the\n\t\tclient, using a mimicked server certificate. Works with both\n\t\tCONNECT requests and intercepted SSL connections, but does\n\t\tnot allow to make decisions based on SSL handshake info.\n\n\t    peek-and-splice\n\t\tDecide whether to bump or splice the connection based on \n\t\tclient-to-squid and server-to-squid SSL hello messages.\n\t\tXXX: Remove.\n\n\t    none\n\t\tSame as the \"splice\" action.\n\n\tAll ssl_bump rules are evaluated at each of the supported bumping\n\tsteps.  Rules with actions that are impossible at the current step are\n\tignored. The first matching ssl_bump action wins and is applied at the\n\tend of the current step. If no rules match, the splice action is used.\n\tSee the at_step ACL for a list of the supported SslBump steps.\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\n\tSee also: http_port ssl-bump, https_port ssl-bump, and acl at_step.\n\n\n\t Example: Bump all requests except those originating from\n\t localhost or those going to example.com.\n\n\tacl broken_sites dstdomain .example.com\n\tssl_bump splice localhost\n\tssl_bump splice broken_sites\n\tssl_bump bump all\nDefault:\n Become a TCP tunnel without decrypting proxied traffic.\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tVarious flags modifying the use of SSL while proxying https:// URLs:\n\t    DONT_VERIFY_PEER\tAccept certificates that fail verification.\n\t\t\t\tFor refined control, see sslproxy_cert_error.\n\t    NO_DEFAULT_CA\tDon't use the default CA list built in\n\t\t\t\tto OpenSSL.\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tUse this ACL to bypass server certificate validation errors.\n\n\tFor example, the following lines will bypass all validation errors\n\twhen talking to servers for example.com. All other\n\tvalidation errors will result in ERR_SECURE_CONNECT_FAIL error.\n\n\t\tacl BrokenButTrustedServers dstdomain example.com\n\t\tsslproxy_cert_error allow BrokenButTrustedServers\n\t\tsslproxy_cert_error deny all\n\n\tThis clause only supports fast acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\tUsing slow acl types may result in server crashes\n\n\tWithout this option, all server certificate validation errors\n\tterminate the transaction to protect Squid and the client.\n\n\tSQUID_X509_V_ERR_INFINITE_VALIDATION error cannot be bypassed\n\tbut should not happen unless your OpenSSL library is buggy.\n\n\tSECURITY WARNING:\n\t\tBypassing validation errors is dangerous because an\n\t\terror usually implies that the server cannot be trusted\n\t\tand the connection may be insecure.\n\n\tSee also: sslproxy_flags and DONT_VERIFY_PEER.\nDefault:\n Server certificate errors terminate the transaction.\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\n        sslproxy_cert_sign <signing algorithm> acl ...\n\n        The following certificate signing algorithms are supported:\n\n\t   signTrusted\n\t\tSign using the configured CA certificate which is usually\n\t\tplaced in and trusted by end-user browsers. This is the\n\t\tdefault for trusted origin server certificates.\n\n\t   signUntrusted\n\t\tSign to guarantee an X509_V_ERR_CERT_UNTRUSTED browser error.\n\t\tThis is the default for untrusted origin server certificates\n\t\tthat are not self-signed (see ssl::certUntrusted).\n\n\t   signSelf\n\t\tSign using a self-signed certificate with the right CN to\n\t\tgenerate a X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT error in the\n\t\tbrowser. This is the default for self-signed origin server\n\t\tcertificates (see ssl::certSelfSigned).\n\n\tThis clause only supports fast acl types.\n\n\tWhen sslproxy_cert_sign acl(s) match, Squid uses the corresponding\n\tsigning algorithm to generate the certificate and ignores all\n\tsubsequent sslproxy_cert_sign options (the first match wins). If no\n\tacl(s) match, the default signing algorithm is determined by errors\n\tdetected when obtaining and validating the origin server certificate.\n\n\tWARNING: SQUID_X509_V_ERR_DOMAIN_MISMATCH and ssl:certDomainMismatch can\n\tbe used with sslproxy_cert_adapt, but if and only if Squid is bumping a\n\tCONNECT request that carries a domain name. In all other cases (CONNECT\n\tto an IP address or an intercepted SSL connection), Squid cannot detect\n\tthe domain mismatch at certificate generation time when\n\tbump-server-first is used.\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\t\n\tsslproxy_cert_adapt <adaptation algorithm> acl ...\n\n\tThe following certificate adaptation algorithms are supported:\n\n\t   setValidAfter\n\t\tSets the \"Not After\" property to the \"Not After\" property of\n\t\tthe CA certificate used to sign generated certificates.\n\n\t   setValidBefore\n\t\tSets the \"Not Before\" property to the \"Not Before\" property of\n\t\tthe CA certificate used to sign generated certificates.\n\n\t   setCommonName or setCommonName{CN}\n\t\tSets Subject.CN property to the host name specified as a \n\t\tCN parameter or, if no explicit CN parameter was specified,\n\t\textracted from the CONNECT request. It is a misconfiguration\n\t\tto use setCommonName without an explicit parameter for\n\t\tintercepted or tproxied SSL connections.\n\t\t\n\tThis clause only supports fast acl types.\n\n\tSquid first groups sslproxy_cert_adapt options by adaptation algorithm.\n\tWithin a group, when sslproxy_cert_adapt acl(s) match, Squid uses the\n\tcorresponding adaptation algorithm to generate the certificate and\n\tignores all subsequent sslproxy_cert_adapt options in that algorithm's\n\tgroup (i.e., the first match wins within each algorithm group). If no\n\tacl(s) match, the default mimicking action takes place.\n\n\tWARNING: SQUID_X509_V_ERR_DOMAIN_MISMATCH and ssl:certDomainMismatch can\n\tbe used with sslproxy_cert_adapt, but if and only if Squid is bumping a\n\tCONNECT request that carries a domain name. In all other cases (CONNECT\n\tto an IP address or an intercepted SSL connection), Squid cannot detect\n\tthe domain mismatch at certificate generation time when\n\tbump-server-first is used.\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tSpecify a program used for entering SSL key passphrases\n\twhen using encrypted SSL certificate keys. If not specified\n\tkeys must either be unencrypted, or Squid started with the -N\n\toption to allow it to query interactively for the passphrase.\n\n\tThe key file name is given as argument to the program allowing\n\tselection of the right password if you have multiple encrypted\n\tkeys.\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       --with-openssl\n\n\tSpecify the location and options of the executable for ssl_crt_validator\n\tprocess.\n\n\tUsage:  sslcrtvalidator_program [ttl=n] [cache=n] path ...\n\n\tOptions:\n\t  ttl=n         TTL in seconds for cached results. The default is 60 secs\n\t  cache=n       limit the result cache size. The default value is 2048\nDefault:\n none\n", "\tTo specify other caches in a hierarchy, use the format:\n\t\n\t\tcache_peer hostname type http-port icp-port [options]\n\t\n\tFor example,\n\t\n\t                                        proxy  icp\n\t          hostname             type     port   port  options\n\t          -------------------- -------- ----- -----  -----------\n\tcache_peer parent.foo.net       parent    3128  3130  default\n\tcache_peer sib1.foo.net         sibling   3128  3130  proxy-only\n\tcache_peer sib2.foo.net         sibling   3128  3130  proxy-only\n\tcache_peer example.com          parent    80       0  default\n\tcache_peer cdn.example.com      sibling   3128     0  \n\t\n\t      type:\teither 'parent', 'sibling', or 'multicast'.\n\t\n\tproxy-port:\tThe port number where the peer accept HTTP requests.\n\t\t\tFor other Squid proxies this is usually 3128\n\t\t\tFor web servers this is usually 80\n\t\n\t  icp-port:\tUsed for querying neighbor caches about objects.\n\t\t\tSet to 0 if the peer does not support ICP or HTCP.\n\t\t\tSee ICP and HTCP options below for additional details.\n\t\n\t\n\t==== ICP OPTIONS ====\n\t\n\tYou MUST also set icp_port and icp_access explicitly when using these options.\n\tThe defaults will prevent peer traffic using ICP.\n\t\n\t\n\tno-query\tDisable ICP queries to this neighbor.\n\t\n\tmulticast-responder\n\t\t\tIndicates the named peer is a member of a multicast group.\n\t\t\tICP queries will not be sent directly to the peer, but ICP\n\t\t\treplies will be accepted from it.\n\t\n\tclosest-only\tIndicates that, for ICP_OP_MISS replies, we'll only forward\n\t\t\tCLOSEST_PARENT_MISSes and never FIRST_PARENT_MISSes.\n\t\n\tbackground-ping\n\t\t\tTo only send ICP queries to this neighbor infrequently.\n\t\t\tThis is used to keep the neighbor round trip time updated\n\t\t\tand is usually used in conjunction with weighted-round-robin.\n\t\n\t\n\t==== HTCP OPTIONS ====\n\t\n\tYou MUST also set htcp_port and htcp_access explicitly when using these options.\n\tThe defaults will prevent peer traffic using HTCP.\n\t\n\t\n\thtcp\t\tSend HTCP, instead of ICP, queries to the neighbor.\n\t\t\tYou probably also want to set the \"icp-port\" to 4827\n\t\t\tinstead of 3130. This directive accepts a comma separated\n\t\t\tlist of options described below.\n\t\n\thtcp=oldsquid\tSend HTCP to old Squid versions (2.5 or earlier).\n\t\n\thtcp=no-clr\tSend HTCP to the neighbor but without\n\t\t\tsending any CLR requests.  This cannot be used with\n\t\t\tonly-clr.\n\t\n\thtcp=only-clr\tSend HTCP to the neighbor but ONLY CLR requests.\n\t\t\tThis cannot be used with no-clr.\n\t\n\thtcp=no-purge-clr\n\t\t\tSend HTCP to the neighbor including CLRs but only when\n\t\t\tthey do not result from PURGE requests.\n\t\n\thtcp=forward-clr\n\t\t\tForward any HTCP CLR requests this proxy receives to the peer.\n\t\n\t\n\t==== PEER SELECTION METHODS ====\n\t\n\tThe default peer selection method is ICP, with the first responding peer\n\tbeing used as source. These options can be used for better load balancing.\n\t\n\t\n\tdefault\t\tThis is a parent cache which can be used as a \"last-resort\"\n\t\t\tif a peer cannot be located by any of the peer-selection methods.\n\t\t\tIf specified more than once, only the first is used.\n\t\n\tround-robin\tLoad-Balance parents which should be used in a round-robin\n\t\t\tfashion in the absence of any ICP queries.\n\t\t\tweight=N can be used to add bias.\n\t\n\tweighted-round-robin\n\t\t\tLoad-Balance parents which should be used in a round-robin\n\t\t\tfashion with the frequency of each parent being based on the\n\t\t\tround trip time. Closer parents are used more often.\n\t\t\tUsually used for background-ping parents.\n\t\t\tweight=N can be used to add bias.\n\t\n\tcarp\t\tLoad-Balance parents which should be used as a CARP array.\n\t\t\tThe requests will be distributed among the parents based on the\n\t\t\tCARP load balancing hash function based on their weight.\n\t\n\tuserhash\tLoad-balance parents based on the client proxy_auth or ident username.\n\t\n\tsourcehash\tLoad-balance parents based on the client source IP.\n\n\tmulticast-siblings\n\t\t\tTo be used only for cache peers of type \"multicast\".\n\t\t\tALL members of this multicast group have \"sibling\"\n\t\t\trelationship with it, not \"parent\".  This is to a multicast\n\t\t\tgroup when the requested object would be fetched only from\n\t\t\ta \"parent\" cache, anyway.  It's useful, e.g., when\n\t\t\tconfiguring a pool of redundant Squid proxies, being\n\t\t\tmembers of the same multicast group.\n\t\n\t\n\t==== PEER SELECTION OPTIONS ====\n\t\n\tweight=N\tuse to affect the selection of a peer during any weighted\n\t\t\tpeer-selection mechanisms.\n\t\t\tThe weight must be an integer; default is 1,\n\t\t\tlarger weights are favored more.\n\t\t\tThis option does not affect parent selection if a peering\n\t\t\tprotocol is not in use.\n\t\n\tbasetime=N\tSpecify a base amount to be subtracted from round trip\n\t\t\ttimes of parents.\n\t\t\tIt is subtracted before division by weight in calculating\n\t\t\twhich parent to fectch from. If the rtt is less than the\n\t\t\tbase time the rtt is set to a minimal value.\n\t\n\tttl=N\t\tSpecify a TTL to use when sending multicast ICP queries\n\t\t\tto this address.\n\t\t\tOnly useful when sending to a multicast group.\n\t\t\tBecause we don't accept ICP replies from random\n\t\t\thosts, you must configure other group members as\n\t\t\tpeers with the 'multicast-responder' option.\n\t\n\tno-delay\tTo prevent access to this neighbor from influencing the\n\t\t\tdelay pools.\n\t\n\tdigest-url=URL\tTell Squid to fetch the cache digest (if digests are\n\t\t\tenabled) for this host from the specified URL rather\n\t\t\tthan the Squid default location.\n\t\n\t\n\t==== CARP OPTIONS ====\n\t\n\tcarp-key=key-specification\n\t\t\tuse a different key than the full URL to hash against the peer.\n\t\t\tthe key-specification is a comma-separated list of the keywords\t\t\t\n\t\t\tscheme, host, port, path, params\n\t\t\tOrder is not important.\n\t\n\t==== ACCELERATOR / REVERSE-PROXY OPTIONS ====\n\t\n\toriginserver\tCauses this parent to be contacted as an origin server.\n\t\t\tMeant to be used in accelerator setups when the peer\n\t\t\tis a web server.\n\t\n\tforceddomain=name\n\t\t\tSet the Host header of requests forwarded to this peer.\n\t\t\tUseful in accelerator setups where the server (peer)\n\t\t\texpects a certain domain name but clients may request\n\t\t\tothers. ie example.com or www.example.com\n\t\n\tno-digest\tDisable request of cache digests.\n\t\n\tno-netdb-exchange\n\t\t\tDisables requesting ICMP RTT database (NetDB).\n\t\n\t\n\t==== AUTHENTICATION OPTIONS ====\n\t\n\tlogin=user:password\n\t\t\tIf this is a personal/workgroup proxy and your parent\n\t\t\trequires proxy authentication.\n\t\t\t\n\t\t\tNote: The string can include URL escapes (i.e. %20 for\n\t\t\tspaces). This also means % must be written as %%.\n\t\n\tlogin=PASSTHRU\n\t\t\tSend login details received from client to this peer.\n\t\t\tBoth Proxy- and WWW-Authorization headers are passed\n\t\t\twithout alteration to the peer.\n\t\t\tAuthentication is not required by Squid for this to work.\n\t\t\t\n\t\t\tNote: This will pass any form of authentication but\n\t\t\tonly Basic auth will work through a proxy unless the\n\t\t\tconnection-auth options are also used.\n\n\tlogin=PASS\tSend login details received from client to this peer.\n\t\t\tAuthentication is not required by this option.\n\t\t\t\n\t\t\tIf there are no client-provided authentication headers\n\t\t\tto pass on, but username and password are available\n\t\t\tfrom an external ACL user= and password= result tags\n\t\t\tthey may be sent instead.\n\t\t\t\n\t\t\tNote: To combine this with proxy_auth both proxies must\n\t\t\tshare the same user database as HTTP only allows for\n\t\t\ta single login (one for proxy, one for origin server).\n\t\t\tAlso be warned this will expose your users proxy\n\t\t\tpassword to the peer. USE WITH CAUTION\n\t\n\tlogin=*:password\n\t\t\tSend the username to the upstream cache, but with a\n\t\t\tfixed password. This is meant to be used when the peer\n\t\t\tis in another administrative domain, but it is still\n\t\t\tneeded to identify each user.\n\t\t\tThe star can optionally be followed by some extra\n\t\t\tinformation which is added to the username. This can\n\t\t\tbe used to identify this proxy to the peer, similar to\n\t\t\tthe login=username:password option above.\n\t\n\tlogin=NEGOTIATE\n\t\t\tIf this is a personal/workgroup proxy and your parent\n\t\t\trequires a secure proxy authentication.\n\t\t\tThe first principal from the default keytab or defined by\n\t\t\tthe environment variable KRB5_KTNAME will be used. \n\t\n\t\t\tWARNING: The connection may transmit requests from multiple\n\t\t\tclients. Negotiate often assumes end-to-end authentication\n\t\t\tand a single-client. Which is not strictly true here.\n\t\n\tlogin=NEGOTIATE:principal_name\n\t\t\tIf this is a personal/workgroup proxy and your parent\n\t\t\trequires a secure proxy authentication. \n\t\t\tThe principal principal_name from the default keytab or\n\t\t\tdefined by the environment variable KRB5_KTNAME will be\n\t\t\tused.\n\t\n\t\t\tWARNING: The connection may transmit requests from multiple\n\t\t\tclients. Negotiate often assumes end-to-end authentication\n\t\t\tand a single-client. Which is not strictly true here.\n\t\n\tconnection-auth=on|off\n\t\t\tTell Squid that this peer does or not support Microsoft\n\t\t\tconnection oriented authentication, and any such\n\t\t\tchallenges received from there should be ignored.\n\t\t\tDefault is auto to automatically determine the status\n\t\t\tof the peer.\n\t\n\t\n\t==== SSL / HTTPS / TLS OPTIONS ====\n\t\n\tssl\t\tEncrypt connections to this peer with SSL/TLS.\n\t\n\tsslcert=/path/to/ssl/certificate\n\t\t\tA client SSL certificate to use when connecting to\n\t\t\tthis peer.\n\t\n\tsslkey=/path/to/ssl/key\n\t\t\tThe private SSL key corresponding to sslcert above.\n\t\t\tIf 'sslkey' is not specified 'sslcert' is assumed to\n\t\t\treference a combined file containing both the\n\t\t\tcertificate and the key.\n\n\tNotes:\n\t\n\tOn Debian/Ubuntu systems a default snakeoil certificate is\n    available in /etc/ssl and users can set:\n\n\t\tcert=/etc/ssl/certs/ssl-cert-snakeoil.pem\n\n\tand\n\n\t\tkey=/etc/ssl/private/ssl-cert-snakeoil.key\n\n\tfor testing.\n\t\n\tsslversion=1|2|3|4|5|6\n\t\t\tThe SSL version to use when connecting to this peer\n\t\t\t\t1 = automatic (default)\n\t\t\t\t2 = SSL v2 only\n\t\t\t\t3 = SSL v3 only\n\t\t\t\t4 = TLS v1.0 only\n\t\t\t\t5 = TLS v1.1 only\n\t\t\t\t6 = TLS v1.2 only\n\t\n\tsslcipher=...\tThe list of valid SSL ciphers to use when connecting\n\t\t\tto this peer.\n\t\n\tssloptions=... \tSpecify various SSL implementation options:\n\n\t\t\t    NO_SSLv2    Disallow the use of SSLv2\n\t\t\t    NO_SSLv3    Disallow the use of SSLv3\n\t\t\t    NO_TLSv1    Disallow the use of TLSv1.0\n\t\t\t    NO_TLSv1_1  Disallow the use of TLSv1.1\n\t\t\t    NO_TLSv1_2  Disallow the use of TLSv1.2\n\t\t\t    SINGLE_DH_USE\n\t\t\t\t      Always create a new key when using\n\t\t\t\t      temporary/ephemeral DH key exchanges\n\t\t\t    ALL       Enable various bug workarounds\n\t\t\t\t      suggested as \"harmless\" by OpenSSL\n\t\t\t\t      Be warned that this reduces SSL/TLS\n\t\t\t\t      strength to some attacks.\n\n\t\t\tSee the OpenSSL SSL_CTX_set_options documentation for a\n\t\t\tmore complete list.\n\t\n\tsslcafile=... \tA file containing additional CA certificates to use\n\t\t\twhen verifying the peer certificate.\n\t\n\tsslcapath=...\tA directory containing additional CA certificates to\n\t\t\tuse when verifying the peer certificate.\n\t\n\tsslcrlfile=... \tA certificate revocation list file to use when\n\t\t\tverifying the peer certificate.\n\t\n\tsslflags=...\tSpecify various flags modifying the SSL implementation:\n\t\n\t\t\tDONT_VERIFY_PEER\n\t\t\t\tAccept certificates even if they fail to\n\t\t\t\tverify.\n\t\t\tNO_DEFAULT_CA\n\t\t\t\tDon't use the default CA list built in\n\t\t\t\tto OpenSSL.\n\t\t\tDONT_VERIFY_DOMAIN\n\t\t\t\tDon't verify the peer certificate\n\t\t\t\tmatches the server name\n\t\n\tssldomain= \tThe peer name as advertised in it's certificate.\n\t\t\tUsed for verifying the correctness of the received peer\n\t\t\tcertificate. If not specified the peer hostname will be\n\t\t\tused.\n\t\n\tfront-end-https\n\t\t\tEnable the \"Front-End-Https: On\" header needed when\n\t\t\tusing Squid as a SSL frontend in front of Microsoft OWA.\n\t\t\tSee MS KB document Q307347 for details on this header.\n\t\t\tIf set to auto the header will only be added if the\n\t\t\trequest is forwarded as a https:// URL.\n\t\n\t\n\t==== GENERAL OPTIONS ====\n\t\n\tconnect-timeout=N\n\t\t\tA peer-specific connect timeout.\n\t\t\tAlso see the peer_connect_timeout directive.\n\t\n\tconnect-fail-limit=N\n\t\t\tHow many times connecting to a peer must fail before\n\t\t\tit is marked as down. Standby connection failures\n\t\t\tcount towards this limit. Default is 10.\n\t\n\tallow-miss\tDisable Squid's use of only-if-cached when forwarding\n\t\t\trequests to siblings. This is primarily useful when\n\t\t\ticp_hit_stale is used by the sibling. Excessive use\n\t\t\tof this option may result in forwarding loops. One way\n\t\t\tto prevent peering loops when using this option, is to\n\t\t\tdeny cache peer usage on requests from a peer:\n\t\t\tacl fromPeer ...\n\t\t\tcache_peer_access peerName deny fromPeer\n\t\n\tmax-conn=N \tLimit the number of concurrent connections the Squid\n\t\t\tmay open to this peer, including already opened idle\n\t\t\tand standby connections. There is no peer-specific\n\t\t\tconnection limit by default.\n\t\n\t\t\tA peer exceeding the limit is not used for new\n\t\t\trequests unless a standby connection is available.\n\t\n\t\t\tmax-conn currently works poorly with idle persistent\n\t\t\tconnections: When a peer reaches its max-conn limit,\n\t\t\tand there are idle persistent connections to the peer,\n\t\t\tthe peer may not be selected because the limiting code\n\t\t\tdoes not know whether Squid can reuse those idle\n\t\t\tconnections.\n\t\n\tstandby=N\tMaintain a pool of N \"hot standby\" connections to an\n\t\t\tUP peer, available for requests when no idle\n\t\t\tpersistent connection is available (or safe) to use.\n\t\t\tBy default and with zero N, no such pool is maintained.\n\t\t\tN must not exceed the max-conn limit (if any).\n\t\n\t\t\tAt start or after reconfiguration, Squid opens new TCP\n\t\t\tstandby connections until there are N connections\n\t\t\tavailable and then replenishes the standby pool as\n\t\t\topened connections are used up for requests. A used\n\t\t\tconnection never goes back to the standby pool, but\n\t\t\tmay go to the regular idle persistent connection pool\n\t\t\tshared by all peers and origin servers.\n\t\n\t\t\tSquid never opens multiple new standby connections\n\t\t\tconcurrently.  This one-at-a-time approach minimizes\n\t\t\tflooding-like effect on peers. Furthermore, just a few\n\t\t\tstandby connections should be sufficient in most cases\n\t\t\tto supply most new requests with a ready-to-use\n\t\t\tconnection.\n\t\n\t\t\tStandby connections obey server_idle_pconn_timeout.\n\t\t\tFor the feature to work as intended, the peer must be\n\t\t\tconfigured to accept and keep them open longer than\n\t\t\tthe idle timeout at the connecting Squid, to minimize\n\t\t\trace conditions typical to idle used persistent\n\t\t\tconnections. Default request_timeout and\n\t\t\tserver_idle_pconn_timeout values ensure such a\n\t\t\tconfiguration.\n\t\n\tname=xxx\tUnique name for the peer.\n\t\t\tRequired if you have multiple peers on the same host\n\t\t\tbut different ports.\n\t\t\tThis name can be used in cache_peer_access and similar\n\t\t\tdirectives to identify the peer.\n\t\t\tCan be used by outgoing access controls through the\n\t\t\tpeername ACL type.\n\t\n\tno-tproxy\tDo not use the client-spoof TPROXY support when forwarding\n\t\t\trequests to this peer. Use normal address selection instead.\n\t\t\tThis overrides the spoof_client_ip ACL.\n\t\n\tproxy-only\tobjects fetched from the peer will not be stored locally.\n\t\nDefault:\n none\n", "\tUse to limit the domains for which a neighbor cache will be\n\tqueried.\n\n\tUsage:\n\t\tcache_peer_domain cache-host domain [domain ...]\n\t\tcache_peer_domain cache-host !domain\n\n\tFor example, specifying\n\n\t\tcache_peer_domain parent.foo.net\t.edu\n\n\thas the effect such that UDP query packets are sent to\n\t'bigserver' only when the requested object exists on a\n\tserver in the .edu domain.  Prefixing the domainname\n\twith '!' means the cache will be queried for objects\n\tNOT in that domain.\n\n\tNOTE:\t* Any number of domains may be given for a cache-host,\n\t\t  either on the same or separate lines.\n\t\t* When multiple domains are given for a particular\n\t\t  cache-host, the first matched domain is applied.\n\t\t* Cache hosts with no domain restrictions are queried\n\t\t  for all requests.\n\t\t* There are no defaults.\n\t\t* There is also a 'cache_peer_access' tag in the ACL\n\t\t  section.\nDefault:\n none\n", "\tRestricts usage of cache_peer proxies.\n\n\tUsage:\n\t\tcache_peer_access peer-name allow|deny [!]aclname ...\n\n\tFor the required peer-name parameter, use either the value of the\n\tcache_peer name=value parameter or, if name=value is missing, the\n\tcache_peer hostname parameter.\n\n\tThis directive narrows down the selection of peering candidates, but\n\tdoes not determine the order in which the selected candidates are\n\tcontacted. That order is determined by the peer selection algorithms\n\t(see PEER SELECTION sections in the cache_peer documentation).\n\n\tIf a deny rule matches, the corresponding peer will not be contacted\n\tfor the current transaction -- Squid will not send ICP queries and\n\twill not forward HTTP requests to that peer. An allow match leaves\n\tthe corresponding peer in the selection. The first match for a given\n\tpeer wins for that peer.\n\n\tThe relative order of cache_peer_access directives for the same peer\n\tmatters. The relative order of any two cache_peer_access directives\n\tfor different peers does not matter. To ease interpretation, it is a\n\tgood idea to group cache_peer_access directives for the same peer\n\ttogether.\n\n\tA single cache_peer_access directive may be evaluated multiple times\n\tfor a given transaction because individual peer selection algorithms\n\tmay check it independently from each other. These redundant checks\n\tmay be optimized away in future Squid versions.\n\n\tThis clause only supports fast acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\nDefault:\n No peer usage restrictions.\n", "\tModify the cache_peer neighbor type when passing requests\n\tabout specific domains to the peer.\n\n\tUsage:\n\t\t neighbor_type_domain neighbor parent|sibling domain domain ...\n\n\tFor example:\n\t\tcache_peer foo.example.com parent 3128 3130\n\t\tneighbor_type_domain foo.example.com sibling .au .de\n\n\tThe above configuration treats all requests to foo.example.com as a\n\tparent proxy unless the request is for a .au or .de ccTLD domain name.\nDefault:\n The peer type from cache_peer directive is used for all requests to that peer.\n", "\tThis controls how long Squid waits to declare a peer cache\n\tas \"dead.\"  If there are no ICP replies received in this\n\tamount of time, Squid will declare the peer dead and not\n\texpect to receive any further ICP replies.  However, it\n\tcontinues to send ICP queries, and will mark the peer as\n\talive upon receipt of the first subsequent ICP reply.\n\n\tThis timeout also affects when Squid expects to receive ICP\n\treplies from peers.  If more than 'dead_peer' seconds have\n\tpassed since the last ICP reply was received, Squid will not\n\texpect to receive an ICP reply on the next query.  Thus, if\n\tyour time between requests is greater than this timeout, you\n\twill see a lot of requests sent DIRECT to origin servers\n\tinstead of to your parents.\nDefault:\n dead_peer_timeout 10 seconds\n", "\tNOTE: THIS PARAMETER DOES NOT SPECIFY THE MAXIMUM PROCESS SIZE.\n\tIT ONLY PLACES A LIMIT ON HOW MUCH ADDITIONAL MEMORY SQUID WILL\n\tUSE AS A MEMORY CACHE OF OBJECTS. SQUID USES MEMORY FOR OTHER\n\tTHINGS AS WELL. SEE THE SQUID FAQ SECTION 8 FOR DETAILS.\n\n\t'cache_mem' specifies the ideal amount of memory to be used\n\tfor:\n\t\t* In-Transit objects\n\t\t* Hot Objects\n\t\t* Negative-Cached objects\n\n\tData for these objects are stored in 4 KB blocks.  This\n\tparameter specifies the ideal upper limit on the total size of\n\t4 KB blocks allocated.  In-Transit objects take the highest\n\tpriority.\n\n\tIn-transit objects have priority over the others.  When\n\tadditional space is needed for incoming data, negative-cached\n\tand hot objects will be released.  In other words, the\n\tnegative-cached and hot objects will fill up any unused space\n\tnot needed for in-transit objects.\n\n\tIf circumstances require, this limit will be exceeded.\n\tSpecifically, if your incoming request rate requires more than\n\t'cache_mem' of memory to hold in-transit objects, Squid will\n\texceed this limit to satisfy the new requests.  When the load\n\tdecreases, blocks will be freed until the high-water mark is\n\treached.  Thereafter, blocks will be used to store hot\n\tobjects.\n\n\tIf shared memory caching is enabled, Squid does not use the shared\n\tcache space for in-transit objects, but they still consume as much\n\tlocal memory as they need. For more details about the shared memory\n\tcache, see memory_cache_shared.\nDefault:\n cache_mem 256 MB\n", "\tObjects greater than this size will not be attempted to kept in\n\tthe memory cache. This should be set high enough to keep objects\n\taccessed frequently in memory to improve performance whilst low\n\tenough to keep larger objects from hoarding cache_mem.\nDefault:\n maximum_object_size_in_memory 512 KB\n", "\tControls whether the memory cache is shared among SMP workers.\n\n\tThe shared memory cache is meant to occupy cache_mem bytes and replace\n\tthe non-shared memory cache, although some entities may still be\n\tcached locally by workers for now (e.g., internal and in-transit\n\tobjects may be served from a local memory cache even if shared memory\n\tcaching is enabled).\n\n\tBy default, the memory cache is shared if and only if all of the\n\tfollowing conditions are satisfied: Squid runs in SMP mode with\n\tmultiple workers, cache_mem is positive, and Squid environment\n\tsupports required IPC primitives (e.g., POSIX shared memory segments\n\tand GCC-style atomic operations).\n\n\tTo avoid blocking locks, shared memory uses opportunistic algorithms\n\tthat do not guarantee that every cachable entity that could have been\n\tshared among SMP workers will actually be shared.\n\n\tCurrently, entities exceeding 32KB in size cannot be shared.\nDefault:\n \"on\" where supported if doing memory caching with multiple SMP workers.\n", "\tControls which objects to keep in the memory cache (cache_mem)\n\n\talways\tKeep most recently fetched objects in memory (default)\n\n\tdisk\tOnly disk cache hits are kept in memory, which means\n\t\tan object must first be cached on disk and then hit\n\t\ta second time before cached in memory.\n\n\tnetwork\tOnly objects fetched from network is kept in memory\nDefault:\n Keep the most recently fetched objects in memory\n", "\tObjects smaller than this size will NOT be saved on disk.  The\n\tvalue is specified in bytes, and the default is 0 KB, which\n\tmeans all responses can be stored.\nDefault:\n no limit\n", "\tSet the default value for max-size parameter on any cache_dir.\n\tThe value is specified in bytes, and the default is 4 MB.\n\t\n\tIf you wish to get a high BYTES hit ratio, you should probably\n\tincrease this (one 32 MB object hit counts for 3200 10KB\n\thits).\n\t\n\tIf you wish to increase hit ratio more than you want to\n\tsave bandwidth you should leave this low.\n\t\n\tNOTE: if using the LFUDA replacement policy you should increase\n\tthis value to maximize the byte hit rate improvement of LFUDA!\n\tSee cache_replacement_policy for a discussion of this policy.\nDefault:\n maximum_object_size 4 MB\n", "\tFormat:\n\t\tcache_dir Type Directory-Name Fs-specific-data [options]\n\n\tYou can specify multiple cache_dir lines to spread the\n\tcache among different disk partitions.\n\n\tType specifies the kind of storage system to use. Only \"ufs\"\n\tis built by default. To enable any of the other storage systems\n\tsee the --enable-storeio configure option.\n\n\t'Directory' is a top-level directory where cache swap\n\tfiles will be stored.  If you want to use an entire disk\n\tfor caching, this can be the mount-point directory.\n\tThe directory must exist and be writable by the Squid\n\tprocess.  Squid will NOT create this directory for you.\n\n\tIn SMP configurations, cache_dir must not precede the workers option\n\tand should use configuration macros or conditionals to give each\n\tworker interested in disk caching a dedicated cache directory.\n\n\n\t====  The ufs store type  ====\n\n\t\"ufs\" is the old well-known Squid storage format that has always\n\tbeen there.\n\n\tUsage:\n\t\tcache_dir ufs Directory-Name Mbytes L1 L2 [options]\n\n\t'Mbytes' is the amount of disk space (MB) to use under this\n\tdirectory.  The default is 100 MB.  Change this to suit your\n\tconfiguration.  Do NOT put the size of your disk drive here.\n\tInstead, if you want Squid to use the entire disk drive,\n\tsubtract 20% and use that value.\n\n\t'L1' is the number of first-level subdirectories which\n\twill be created under the 'Directory'.  The default is 16.\n\n\t'L2' is the number of second-level subdirectories which\n\twill be created under each first-level directory.  The default\n\tis 256.\n\n\n\t====  The aufs store type  ====\n\n\t\"aufs\" uses the same storage format as \"ufs\", utilizing\n\tPOSIX-threads to avoid blocking the main Squid process on\n\tdisk-I/O. This was formerly known in Squid as async-io.\n\n\tUsage:\n\t\tcache_dir aufs Directory-Name Mbytes L1 L2 [options]\n\n\tsee argument descriptions under ufs above\n\n\n\t====  The diskd store type  ====\n\n\t\"diskd\" uses the same storage format as \"ufs\", utilizing a\n\tseparate process to avoid blocking the main Squid process on\n\tdisk-I/O.\n\n\tUsage:\n\t\tcache_dir diskd Directory-Name Mbytes L1 L2 [options] [Q1=n] [Q2=n]\n\n\tsee argument descriptions under ufs above\n\n\tQ1 specifies the number of unacknowledged I/O requests when Squid\n\tstops opening new files. If this many messages are in the queues,\n\tSquid won't open new files. Default is 64\n\n\tQ2 specifies the number of unacknowledged messages when Squid\n\tstarts blocking.  If this many messages are in the queues,\n\tSquid blocks until it receives some replies. Default is 72\n\n\tWhen Q1 < Q2 (the default), the cache directory is optimized\n\tfor lower response time at the expense of a decrease in hit\n\tratio.  If Q1 > Q2, the cache directory is optimized for\n\thigher hit ratio at the expense of an increase in response\n\ttime.\n\n\n\t====  The rock store type  ====\n\n\tUsage:\n\t    cache_dir rock Directory-Name Mbytes [options]\n\n\tThe Rock Store type is a database-style storage. All cached\n\tentries are stored in a \"database\" file, using fixed-size slots.\n\tA single entry occupies one or more slots.\n\n\tIf possible, Squid using Rock Store creates a dedicated kid\n\tprocess called \"disker\" to avoid blocking Squid worker(s) on disk\n\tI/O. One disker kid is created for each rock cache_dir.  Diskers\n\tare created only when Squid, running in daemon mode, has support\n\tfor the IpcIo disk I/O module.\n\n\tswap-timeout=msec: Squid will not start writing a miss to or\n\treading a hit from disk if it estimates that the swap operation\n\twill take more than the specified number of milliseconds. By\n\tdefault and when set to zero, disables the disk I/O time limit\n\tenforcement. Ignored when using blocking I/O module because\n\tblocking synchronous I/O does not allow Squid to estimate the\n\texpected swap wait time.\n\n\tmax-swap-rate=swaps/sec: Artificially limits disk access using\n\tthe specified I/O rate limit. Swap out requests that\n\twould cause the average I/O rate to exceed the limit are\n\tdelayed. Individual swap in requests (i.e., hits or reads) are\n\tnot delayed, but they do contribute to measured swap rate and\n\tsince they are placed in the same FIFO queue as swap out\n\trequests, they may wait longer if max-swap-rate is smaller.\n\tThis is necessary on file systems that buffer \"too\n\tmany\" writes and then start blocking Squid and other processes\n\twhile committing those writes to disk.  Usually used together\n\twith swap-timeout to avoid excessive delays and queue overflows\n\twhen disk demand exceeds available disk \"bandwidth\". By default\n\tand when set to zero, disables the disk I/O rate limit\n\tenforcement. Currently supported by IpcIo module only.\n\n\tslot-size=bytes: The size of a database \"record\" used for\n\tstoring cached responses. A cached response occupies at least\n\tone slot and all database I/O is done using individual slots so\n\tincreasing this parameter leads to more disk space waste while\n\tdecreasing it leads to more disk I/O overheads. Should be a\n\tmultiple of your operating system I/O page size. Defaults to\n\t16KBytes. A housekeeping header is stored with each slot and\n\tsmaller slot-sizes will be rejected. The header is smaller than\n\t100 bytes.\n\n\n\t==== COMMON OPTIONS ====\n\n\tno-store\tno new objects should be stored to this cache_dir.\n\n\tmin-size=n\tthe minimum object size in bytes this cache_dir\n\t\t\twill accept.  It's used to restrict a cache_dir\n\t\t\tto only store large objects (e.g. AUFS) while\n\t\t\tother stores are optimized for smaller objects\n\t\t\t(e.g. Rock).\n\t\t\tDefaults to 0.\n\n\tmax-size=n\tthe maximum object size in bytes this cache_dir\n\t\t\tsupports.\n\t\t\tThe value in maximum_object_size directive sets\n\t\t\tthe default unless more specific details are\n\t\t\tavailable (ie a small store capacity).\n\n\tNote: To make optimal use of the max-size limits you should order\n\tthe cache_dir lines with the smallest max-size value first.\n\nDefault:\n No disk cache. Store cache ojects only in memory.\n", "\tTo avoid having disk as the I/O bottleneck Squid can optionally\n\tbypass the on-disk cache if more than this amount of disk file\n\tdescriptors are open.\n\n\tA value of 0 indicates no limit.\nDefault:\n no limit\n", "\tThe low-water mark for AUFS/UFS/diskd cache object eviction by\n\tthe cache_replacement_policy algorithm.\n\n\tRemoval begins when the swap (disk) usage of a cache_dir is\n\tabove this low-water mark and attempts to maintain utilization\n\tnear the low-water mark.\n\n\tAs swap utilization increases towards the high-water mark set\n\tby cache_swap_high object eviction becomes more agressive.\n\n\tThe value difference in percentages between low- and high-water\n\tmarks represent an eviction rate of 300 objects per second and\n\tthe rate continues to scale in agressiveness by multiples of\n\tthis above the high-water mark.\n\n\tDefaults are 90% and 95%. If you have a large cache, 5% could be\n\thundreds of MB. If this is the case you may wish to set these\n\tnumbers closer together.\n\n\tSee also cache_swap_high and cache_replacement_policy\nDefault:\n cache_swap_low 90\n", "\tThe high-water mark for AUFS/UFS/diskd cache object eviction by\n\tthe cache_replacement_policy algorithm.\n\n\tRemoval begins when the swap (disk) usage of a cache_dir is\n\tabove the low-water mark set by cache_swap_low and attempts to\n\tmaintain utilization near the low-water mark.\n\n\tAs swap utilization increases towards this high-water mark object\n\teviction becomes more agressive.\n\n\tThe value difference in percentages between low- and high-water\n\tmarks represent an eviction rate of 300 objects per second and\n\tthe rate continues to scale in agressiveness by multiples of\n\tthis above the high-water mark.\n\n\tDefaults are 90% and 95%. If you have a large cache, 5% could be\n\thundreds of MB. If this is the case you may wish to set these\n\tnumbers closer together.\n\n\tSee also cache_swap_low and cache_replacement_policy\nDefault:\n cache_swap_high 95\n", "\tUsage:\n\n\tlogformat <name> <format specification>\n\n\tDefines an access log format.\n\n\tThe <format specification> is a string with embedded % format codes\n\n\t% format codes all follow the same basic structure where all but\n\tthe formatcode is optional. Output strings are automatically escaped\n\tas required according to their context and the output format\n\tmodifiers are usually not needed, but can be specified if an explicit\n\toutput format is desired.\n\n\t\t% [\"|[|'|] [-] [[0]width] [{argument}] formatcode\n\n\t\t\"\toutput in quoted string format\n\t\t[\toutput in squid text log format as used by log_mime_hdrs\n\t\t\toutput in URL quoted format\n\t\t'\toutput as-is\n\n\t\t-\tleft aligned\n\n\t\twidth\tminimum and/or maximum field width:\n\t\t\t    [width_min][.width_max]\n\t\t\tWhen minimum starts with 0, the field is zero-padded.\n\t\t\tString values exceeding maximum width are truncated.\n\n\t\t{arg}\targument such as header name etc\n\n\tFormat codes:\n\n\t\t%\ta literal % character\n\t\tsn\tUnique sequence number per log line entry\n\t\terr_code    The ID of an error response served by Squid or\n\t\t\t\ta similar internal error identifier.\n\t\terr_detail  Additional err_code-dependent error information.\n\t\tnote\tThe annotation specified by the argument. Also\n\t\t\tlogs the adaptation meta headers set by the\n\t\t\tadaptation_meta configuration parameter.\n\t\t\tIf no argument given all annotations logged.\n\t\t\tThe argument may include a separator to use with\n\t\t\tannotation values:\n                            name[:separator]\n\t\t\tBy default, multiple note values are separated with \",\"\n\t\t\tand multiple notes are separated with \"\\r\\n\".\n\t\t\tWhen logging named notes with %{name}note, the\n\t\t\texplicitly configured separator is used between note\n\t\t\tvalues. When logging all notes with %note, the\n\t\t\texplicitly configured separator is used between\n\t\t\tindividual notes. There is currently no way to\n\t\t\tspecify both value and notes separators when logging\n\t\t\tall notes with %note.\n\n\tConnection related format codes:\n\n\t\t>a\tClient source IP address\n\t\t>A\tClient FQDN\n\t\t>p\tClient source port\n\t\t>eui\tClient source EUI (MAC address, EUI-48 or EUI-64 identifier)\n\t\t>la\tLocal IP address the client connected to\n\t\t>lp\tLocal port number the client connected to\n\t\t>qos    Client connection TOS/DSCP value set by Squid\n\t\t>nfmark Client connection netfilter mark set by Squid\n\n\t\tla\tLocal listening IP address the client connection was connected to.\n\t\tlp\tLocal listening port number the client connection was connected to.\n\n\t\t<a\tServer IP address of the last server or peer connection\n\t\t<A\tServer FQDN or peer name\n\t\t<p\tServer port number of the last server or peer connection\n\t\t<la\tLocal IP address of the last server or peer connection\n\t\t<lp     Local port number of the last server or peer connection\n\t\t<qos\tServer connection TOS/DSCP value set by Squid\n\t\t<nfmark Server connection netfilter mark set by Squid\n\n\tTime related format codes:\n\n\t\tts\tSeconds since epoch\n\t\ttu\tsubsecond time (milliseconds)\n\t\ttl\tLocal time. Optional strftime format argument\n\t\t\t\tdefault %d/%b/%Y:%H:%M:%S %z\n\t\ttg\tGMT time. Optional strftime format argument\n\t\t\t\tdefault %d/%b/%Y:%H:%M:%S %z\n\t\ttr\tResponse time (milliseconds)\n\t\tdt\tTotal time spent making DNS lookups (milliseconds)\n\t\ttS\tApproximate master transaction start time in \n\t\t\t<full seconds since epoch>.<fractional seconds> format.\n\t\t\tCurrently, Squid considers the master transaction\n\t\t\tstarted when a complete HTTP request header initiating\n\t\t\tthe transaction is received from the client. This is\n\t\t\tthe same value that Squid uses to calculate transaction\n\t\t\tresponse time when logging %tr to access.log. Currently,\n\t\t\tSquid uses millisecond resolution for %tS values,\n\t\t\tsimilar to the default access.log \"current time\" field\n\t\t\t(%ts.%03tu).\n\n\tAccess Control related format codes:\n\n\t\tet\tTag returned by external acl\n\t\tea\tLog string returned by external acl\n\t\tun\tUser name (any available)\n\t\tul\tUser name from authentication\n\t\tue\tUser name from external acl helper\n\t\tui\tUser name from ident\n\t\tun\tA user name. Expands to the first available name\n\t\t\tfrom the following list of information sources:\n\t\t\t- authenticated user name, like %ul\n\t\t\t- user name supplied by an external ACL, like %ue\n\t\t\t- SSL client name, like %us\n\t\t\t- ident user name, like %ui\n\t\tcredentials Client credentials. The exact meaning depends on\n\t\t\tthe authentication scheme: For Basic authentication,\n\t\t\tit is the password; for Digest, the realm sent by the\n\t\t\tclient; for NTLM and Negotiate, the client challenge\n\t\t\tor client credentials prefixed with \"YR \" or \"KK \".\n\n\tHTTP related format codes:\n\n\t    REQUEST\n\n\t\t[http::]rm\tRequest method (GET/POST etc)\n\t\t[http::]>rm\tRequest method from client\n\t\t[http::]<rm\tRequest method sent to server or peer\n\t\t[http::]ru\tRequest URL from client (historic, filtered for logging)\n\t\t[http::]>ru\tRequest URL from client\n\t\t[http::]<ru\tRequest URL sent to server or peer\n\t\t[http::]>rs\tRequest URL scheme from client\n\t\t[http::]<rs\tRequest URL scheme sent to server or peer\n\t\t[http::]>rd\tRequest URL domain from client\n\t\t[http::]<rd\tRequest URL domain sent to server or peer\n\t\t[http::]>rP\tRequest URL port from client\n\t\t[http::]<rP\tRequest URL port sent to server or peer\n\t\t[http::]rp\tRequest URL path excluding hostname\n\t\t[http::]>rp\tRequest URL path excluding hostname from client\n\t\t[http::]<rp\tRequest URL path excluding hostname sent to server or peer\n\t\t[http::]rv\tRequest protocol version\n\t\t[http::]>rv\tRequest protocol version from client\n\t\t[http::]<rv\tRequest protocol version sent to server or peer\n\n\t\t[http::]>h\tOriginal received request header.\n\t\t\t\tUsually differs from the request header sent by\n\t\t\t\tSquid, although most fields are often preserved.\n\t\t\t\tAccepts optional header field name/value filter\n\t\t\t\targument using name[:[separator]element] format.\n\t\t[http::]>ha\tReceived request header after adaptation and\n\t\t\t\tredirection (pre-cache REQMOD vectoring point).\n\t\t\t\tUsually differs from the request header sent by\n\t\t\t\tSquid, although most fields are often preserved.\n\t\t\t\tOptional header name argument as for >h\n\n\n\t    RESPONSE\n\n\t\t[http::]<Hs\tHTTP status code received from the next hop\n\t\t[http::]>Hs\tHTTP status code sent to the client\n\n\t\t[http::]<h\tReply header. Optional header name argument\n\t\t\t\tas for >h\n\n\t\t[http::]mt\tMIME content type\n\n\n\t    SIZE COUNTERS\n\n\t\t[http::]st\tTotal size of request + reply traffic with client\n\t\t[http::]>st\tTotal size of request received from client.\n\t\t\t\tExcluding chunked encoding bytes.\n\t\t[http::]<st\tTotal size of reply sent to client (after adaptation)\n\n\t\t[http::]>sh\tSize of request headers received from client\n\t\t[http::]<sh\tSize of reply headers sent to client (after adaptation)\n\n\t\t[http::]<sH\tReply high offset sent\n\t\t[http::]<sS\tUpstream object size\n\n\t\t[http::]<bs\tNumber of HTTP-equivalent message body bytes \n\t\t\t\treceived from the next hop, excluding chunked\n\t\t\t\ttransfer encoding and control messages.\n\t\t\t\tGenerated FTP/Gopher listings are treated as\n\t\t\t\treceived bodies.\n\n\n\t    TIMING\n\n\t\t[http::]<pt\tPeer response time in milliseconds. The timer starts\n\t\t\t\twhen the last request byte is sent to the next hop\n\t\t\t\tand stops when the last response byte is received.\n\t\t[http::]<tt\tTotal time in milliseconds. The timer \n\t\t\t\tstarts with the first connect request (or write I/O)\n\t\t\t\tsent to the first selected peer. The timer stops\n\t\t\t\twith the last I/O with the last peer.\n\n\tSquid handling related format codes:\n\n\t\tSs\tSquid request status (TCP_MISS etc)\n\t\tSh\tSquid hierarchy status (DEFAULT_PARENT etc)\n\n\tSSL-related format codes:\n\n\t\tssl::bump_mode\tSslBump decision for the transaction:\n\n\t\t\t\tFor CONNECT requests that initiated bumping of\n\t\t\t\ta connection and for any request received on\n\t\t\t\tan already bumped connection, Squid logs the\n\t\t\t\tcorresponding SslBump mode (\"server-first\" or\n\t\t\t\t\"client-first\"). See the ssl_bump option for\n\t\t\t\tmore information about these modes.\n\n\t\t\t\tA \"none\" token is logged for requests that\n\t\t\t\ttriggered \"ssl_bump\" ACL evaluation matching\n\t\t\t\teither a \"none\" rule or no rules at all.\n\n\t\t\t\tIn all other cases, a single dash (\"-\") is\n\t\t\t\tlogged.\n\n\t\tssl::>sni\tSSL client SNI sent to Squid. Available only\n\t\t\t\tafter the peek, stare, or splice SSL bumping\n\t\t\t\tactions.\n\n\tIf ICAP is enabled, the following code becomes available (as\n\twell as ICAP log codes documented with the icap_log option):\n\n\t\ticap::tt        Total ICAP processing time for the HTTP\n\t\t\t\ttransaction. The timer ticks when ICAP\n\t\t\t\tACLs are checked and when ICAP\n\t\t\t\ttransaction is in progress.\n\n\tIf adaptation is enabled the following three codes become available:\n\n\t\tadapt::<last_h\tThe header of the last ICAP response or\n\t\t\t\tmeta-information from the last eCAP\n\t\t\t\ttransaction related to the HTTP transaction.\n\t\t\t\tLike <h, accepts an optional header name\n\t\t\t\targument.\n\n\t\tadapt::sum_trs Summed adaptation transaction response\n\t\t\t\ttimes recorded as a comma-separated list in\n\t\t\t\tthe order of transaction start time. Each time\n\t\t\t\tvalue is recorded as an integer number,\n\t\t\t\trepresenting response time of one or more\n\t\t\t\tadaptation (ICAP or eCAP) transaction in\n\t\t\t\tmilliseconds.  When a failed transaction is\n\t\t\t\tbeing retried or repeated, its time is not\n\t\t\t\tlogged individually but added to the\n\t\t\t\treplacement (next) transaction. See also:\n\t\t\t\tadapt::all_trs.\n\n\t\tadapt::all_trs All adaptation transaction response times.\n\t\t\t\tSame as adaptation_strs but response times of\n\t\t\t\tindividual transactions are never added\n\t\t\t\ttogether. Instead, all transaction response\n\t\t\t\ttimes are recorded individually.\n\n\tYou can prefix adapt::*_trs format codes with adaptation\n\tservice name in curly braces to record response time(s) specific\n\tto that service. For example: %{my_service}adapt::sum_trs\n\n\tIf SSL is enabled, the following formating codes become available:\n\n\t\t%ssl::>cert_subject The Subject field of the received client\n\t\t\t\tSSL certificate or a dash ('-') if Squid has\n\t\t\t\treceived an invalid/malformed certificate or\n\t\t\t\tno certificate at all. Consider encoding the\n\t\t\t\tlogged value because Subject often has spaces.\n\n\t\t%ssl::>cert_issuer The Issuer field of the received client\n\t\t\t\tSSL certificate or a dash ('-') if Squid has\n\t\t\t\treceived an invalid/malformed certificate or\n\t\t\t\tno certificate at all. Consider encoding the\n\t\t\t\tlogged value because Issuer often has spaces.\n\n\tThe default formats available (which do not need re-defining) are:\n\nlogformat squid      %ts.%03tu %6tr %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt\nlogformat common     %>a %[ui %[un [%tl] \"%rm %ru HTTP/%rv\" %>Hs %<st %Ss:%Sh\nlogformat combined   %>a %[ui %[un [%tl] \"%rm %ru HTTP/%rv\" %>Hs %<st \"%{Referer}>h\" \"%{User-Agent}>h\" %Ss:%Sh\nlogformat referrer   %ts.%03tu %>a %{Referer}>h %ru\nlogformat useragent  %>a [%tl] \"%{User-Agent}>h\"\n\n\tNOTE: When the log_mime_hdrs directive is set to ON.\n\t\tThe squid, common and combined formats have a safely encoded copy\n\t\tof the mime headers appended to each line within a pair of brackets.\n\n\tNOTE: The common and combined formats are not quite true to the Apache definition.\n\t\tThe logs from Squid contain an extra status and hierarchy code appended.\n\nDefault:\n The format definitions squid, common, combined, referrer, useragent are built in.\n", "\tICAP log files record ICAP transaction summaries, one line per\n\ttransaction.\n\n\tThe icap_log option format is:\n\ticap_log <filepath> [<logformat name> [acl acl ...]]\n\ticap_log none [acl acl ...]]\n\t\n\tPlease see access_log option documentation for details. The two\n\tkinds of logs share the overall configuration approach and many\n\tfeatures.\n\n\tICAP processing of a single HTTP message or transaction may\n\trequire multiple ICAP transactions.  In such cases, multiple\n\tICAP transaction log lines will correspond to a single access\n\tlog line.\n\n\tICAP log uses logformat codes that make sense for an ICAP\n\ttransaction. Header-related codes are applied to the HTTP header\n\tembedded in an ICAP server response, with the following caveats:\n\tFor REQMOD, there is no HTTP response header unless the ICAP\n\tserver performed request satisfaction. For RESPMOD, the HTTP\n\trequest header is the header sent to the ICAP server. For\n\tOPTIONS, there are no HTTP headers.\n\n\tThe following format codes are also available for ICAP logs:\n\n\t\ticap::<A\tICAP server IP address. Similar to <A.\n\n\t\ticap::<service_name\tICAP service name from the icap_service\n\t\t\t\toption in Squid configuration file.\n\n\t\ticap::ru\tICAP Request-URI. Similar to ru.\n\n\t\ticap::rm\tICAP request method (REQMOD, RESPMOD, or \n\t\t\t\tOPTIONS). Similar to existing rm.\n\n\t\ticap::>st\tBytes sent to the ICAP server (TCP payload\n\t\t\t\tonly; i.e., what Squid writes to the socket).\n\n\t\ticap::<st\tBytes received from the ICAP server (TCP\n\t\t\t\tpayload only; i.e., what Squid reads from\n\t\t\t\tthe socket).\n\n\t\ticap::<bs\tNumber of message body bytes received from the\n\t\t\t\tICAP server. ICAP message body, if any, usually\n\t\t\t\tincludes encapsulated HTTP message headers and\n\t\t\t\tpossibly encapsulated HTTP message body. The\n\t\t\t\tHTTP body part is dechunked before its size is\n\t\t\t\tcomputed.\n\n\t\ticap::tr \tTransaction response time (in\n\t\t\t\tmilliseconds).  The timer starts when\n\t\t\t\tthe ICAP transaction is created and\n\t\t\t\tstops when the transaction is completed.\n\t\t\t\tSimilar to tr.\n\n\t\ticap::tio\tTransaction I/O time (in milliseconds). The\n\t\t\t\ttimer starts when the first ICAP request\n\t\t\t\tbyte is scheduled for sending. The timers\n\t\t\t\tstops when the last byte of the ICAP response\n\t\t\t\tis received.\n\n\t\ticap::to \tTransaction outcome: ICAP_ERR* for all\n\t\t\t\ttransaction errors, ICAP_OPT for OPTION\n\t\t\t\ttransactions, ICAP_ECHO for 204\n\t\t\t\tresponses, ICAP_MOD for message\n\t\t\t\tmodification, and ICAP_SAT for request\n\t\t\t\tsatisfaction. Similar to Ss.\n\n\t\ticap::Hs\tICAP response status code. Similar to Hs.\n\n\t\ticap::>h\tICAP request header(s). Similar to >h.\n\n\t\ticap::<h\tICAP response header(s). Similar to <h.\n\n\tThe default ICAP log format, which can be used without an explicit\n\tdefinition, is called icap_squid:\n\nlogformat icap_squid %ts.%03tu %6icap::tr %>a %icap::to/%03icap::Hs %icap::<size %icap::rm %icap::ru% %un -/%icap::<A -\n\n\tSee also: logformat, log_icap, and %adapt::<last_h \nDefault:\n none\n", "\tThis options allows you to control which requests gets accounted\n\tin performance counters.\n\n\tThis clause only supports fast acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\nDefault:\n Allow logging for all transactions.\n", "\tLogs the activities of the storage manager.  Shows which\n\tobjects are ejected from the cache, and which objects are\n\tsaved and for how long.\n\tThere are not really utilities to analyze this data, so you can safely\n\tdisable it (the default).\n\t\n\tStore log uses modular logging outputs. See access_log for the list\n\tof modules supported.\n\t\n\tExample:\n\t\tcache_store_log stdio:/var/log/squid/store.log\n\t\tcache_store_log daemon:/var/log/squid/store.log\nDefault:\n none\n", "\tLocation for the cache \"swap.state\" file. This index file holds\n\tthe metadata of objects saved on disk.  It is used to rebuild\n\tthe cache during startup.  Normally this file resides in each\n\t'cache_dir' directory, but you may specify an alternate\n\tpathname here.  Note you must give a full filename, not just\n\ta directory. Since this is the index for the whole object\n\tlist you CANNOT periodically rotate it!\n\n\tIf %s can be used in the file name it will be replaced with a\n\ta representation of the cache_dir name where each / is replaced\n\twith '.'. This is needed to allow adding/removing cache_dir\n\tlines when cache_swap_log is being used.\n\n\tIf have more than one 'cache_dir', and %s is not used in the name\n\tthese swap logs will have names such as:\n\n\t\tcache_swap_log.00\n\t\tcache_swap_log.01\n\t\tcache_swap_log.02\n\n\tThe numbered extension (which is added automatically)\n\tcorresponds to the order of the 'cache_dir' lines in this\n\tconfiguration file.  If you change the order of the 'cache_dir'\n\tlines in this file, these index files will NOT correspond to\n\tthe correct 'cache_dir' entry (unless you manually rename\n\tthem).  We recommend you do NOT use this option.  It is\n\tbetter to keep these index files in each 'cache_dir' directory.\nDefault:\n Store the journal inside its cache_dir\n", "\tA netmask for client addresses in logfiles and cachemgr output.\n\tChange this to protect the privacy of your cache clients.\n\tA netmask of 255.255.255.0 will log all IP's in that range with\n\tthe last digit set to '0'.\nDefault:\n Log full client IP address\n", "\tLogging options are set as section,level where each source file\n\tis assigned a unique section.  Lower levels result in less\n\toutput,  Full debugging (level 9) can result in a very large\n\tlog file, so be careful.\n\n\tThe magic word \"ALL\" sets debugging levels for all sections.\n\tThe default is to run with \"ALL,1\" to record important warnings.\n\n\tThe rotate=N option can be used to keep more or less of these logs\n\tthan would otherwise be kept by logfile_rotate.\n\tFor most uses a single log should be enough to monitor current\n\tevents affecting Squid.\nDefault:\n Log all critical and important messages.\n", "\tBy default Squid leaves core files in the directory from where\n\tit was started. If you set 'coredump_dir' to a directory\n\tthat exists, Squid will chdir() to that directory at startup\n\tand coredump files will be left there.\n\nDefault:\n Use the directory from where Squid was started.\n", "\tBy default Squid leaves core files in the directory from where\n\tit was started. If you set 'coredump_dir' to a directory\n\tthat exists, Squid will chdir() to that directory at startup\n\tand coredump files will be left there.\n\nDefault:\n Use the directory from where Squid was started.\n", "\tFTP Protocol extensions permit the use of a special \"EPSV\" command.\n\n\tNATs may be able to put the connection on a \"fast path\" through the\n\ttranslator using EPSV, as the EPRT command will never be used\n\tand therefore, translation of the data portion of the segments \n\twill never be needed.\n\n\tEPSV is often required to interoperate with FTP servers on IPv6\n\tnetworks. On the other hand, it may break some IPv4 servers.\n\n\tBy default, EPSV may try EPSV with any FTP server. To fine tune\n\tthat decision, you may restrict EPSV to certain clients or servers\n\tusing ACLs:\n\n\t\tftp_epsv allow|deny al1 acl2 ...\n\n\tWARNING: Disabling EPSV may cause problems with external NAT and IPv6.\n\n\tOnly fast ACLs are supported.\n\tRequires ftp_passive to be ON (default) for any effect.\nDefault:\n none\n", "\tSpecify the location of the executable URL rewriter to use.\n\tSince they can perform almost any function there isn't one included.\n\n\tFor each requested URL, the rewriter will receive on line with the format\n\n\t  [channel-ID <SP>] URL [<SP> extras]<NL>\n\n\tSee url_rewrite_extras on how to send \"extras\" with optional values to\n\tthe helper.\n\tAfter processing the request the helper must reply using the following format:\n\n\t  [channel-ID <SP>] result [<SP> kv-pairs]\n\n\tThe result code can be:\n\n\t  OK status=30N url=\"...\"\n\t\tRedirect the URL to the one supplied in 'url='.\n\t\t'status=' is optional and contains the status code to send\n\t\tthe client in Squids HTTP response. It must be one of the\n\t\tHTTP redirect status codes: 301, 302, 303, 307, 308.\n\t\tWhen no status is given Squid will use 302.\n\n\t  OK rewrite-url=\"...\"\n\t\tRewrite the URL to the one supplied in 'rewrite-url='.\n\t\tThe new URL is fetched directly by Squid and returned to\n\t\tthe client as the response to its request.\n\n\t  OK\n\t\tWhen neither of url= and rewrite-url= are sent Squid does\n\t\tnot change the URL.\n\n\t  ERR\n\t\tDo not change the URL.\n\n\t  BH\n\t\tAn internal error occurred in the helper, preventing\n\t\ta result being identified. The 'message=' key name is\n\t\treserved for delivering a log message.\n\n\n\tIn addition to the above kv-pairs Squid also understands the following\n\toptional kv-pairs received from URL rewriters:\n\t  clt_conn_tag=TAG\n\t\tAssociates a TAG with the client TCP connection.\n\t\tThe TAG is treated as a regular annotation but persists across\n\t\tfuture requests on the client connection rather than just the\n\t\tcurrent request. A helper may update the TAG during subsequent\n\t\trequests be returning a new kv-pair.\n\n\tWhen using the concurrency= option the protocol is changed by\n\tintroducing a query channel tag in front of the request/response.\n\tThe query channel tag is a number between 0 and concurrency-1.\n\tThis value must be echoed back unchanged to Squid as the first part\n\tof the response relating to its request.\n\n\tWARNING: URL re-writing ability should be avoided whenever possible.\n\t\t Use the URL redirect form of response instead.\n\n\tRe-write creates a difference in the state held by the client\n\tand server. Possibly causing confusion when the server response\n\tcontains snippets of its view state. Embeded URLs, response\n\tand content Location headers, etc. are not re-written by this\n\tinterface.\n\n\tBy default, a URL rewriter is not used.\nDefault:\n none\n", "\tIf defined, this access list specifies which requests are\n\tsent to the redirector processes.\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\nDefault:\n Allow, unless rules exist in squid.conf.\n", "\tSpecify the location of the executable StoreID helper to use.\n\tSince they can perform almost any function there isn't one included.\n\n\tFor each requested URL, the helper will receive one line with the format\n\n\t  [channel-ID <SP>] URL [<SP> extras]<NL>\n\n\n\tAfter processing the request the helper must reply using the following format:\n\n\t  [channel-ID <SP>] result [<SP> kv-pairs]\n\n\tThe result code can be:\n\n\t  OK store-id=\"...\"\n\t\tUse the StoreID supplied in 'store-id='.\n\n\t  ERR\n\t\tThe default is to use HTTP request URL as the store ID.\n\n\t  BH\n\t\tAn internal error occured in the helper, preventing\n\t\ta result being identified.\n\n\tIn addition to the above kv-pairs Squid also understands the following\n\toptional kv-pairs received from URL rewriters:\n\t  clt_conn_tag=TAG\n\t\tAssociates a TAG with the client TCP connection.\n\t\tPlease see url_rewrite_program related documentation for this\n\t\tkv-pair\n\n\tHelper programs should be prepared to receive and possibly ignore\n\tadditional whitespace-separated tokens on each input line.\n\n\tWhen using the concurrency= option the protocol is changed by\n\tintroducing a query channel tag in front of the request/response.\n\tThe query channel tag is a number between 0 and concurrency-1.\n\tThis value must be echoed back unchanged to Squid as the first part\n\tof the response relating to its request.\n\n\tNOTE: when using StoreID refresh_pattern will apply to the StoreID\n\t      returned from the helper and not the URL.\n\n\tWARNING: Wrong StoreID value returned by a careless helper may result\n\t         in the wrong cached response returned to the user.\n\n\tBy default, a StoreID helper is not used.\nDefault:\n none\n", "\tIf defined, this access list specifies which requests are\n\tsent to the StoreID processes.  By default all requests\n\tare sent.\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\nDefault:\n Allow, unless rules exist in squid.conf.\n", "\tRequests denied by this directive will not be served from the cache\n\tand their responses will not be stored in the cache. This directive\n\thas no effect on other transactions and on already cached responses.\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\n\tThis and the two other similar caching directives listed below are\n\tchecked at different transaction processing stages, have different\n\taccess to response information, affect different cache operations,\n\tand differ in slow ACLs support:\n\n\t* cache: Checked before Squid makes a hit/miss determination.\n\t\tNo access to reply information!\n\t\tDenies both serving a hit and storing a miss.\n\t\tSupports both fast and slow ACLs.\n\t* send_hit: Checked after a hit was detected.\n\t\tHas access to reply (hit) information.\n\t\tDenies serving a hit only.\n\t\tSupports fast ACLs only.\n\t* store_miss: Checked before storing a cachable miss.\n\t\tHas access to reply (miss) information.\n\t\tDenies storing a miss only.\n\t\tSupports fast ACLs only.\n\n\tIf you are not sure which of the three directives to use, apply the\n\tfollowing decision logic:\n\n\t* If your ACL(s) are of slow type _and_ need response info, redesign.\n\t  Squid does not support that particular combination at this time.\n        Otherwise:\n\t* If your directive ACL(s) are of slow type, use \"cache\"; and/or\n\t* if your directive ACL(s) need no response info, use \"cache\".\n        Otherwise:\n\t* If you do not want the response cached, use store_miss; and/or\n\t* if you do not want a hit on a cached response, use send_hit.\nDefault:\n By default, this directive is unused and has no effect.\n", "\tResponses denied by this directive will not be served from the cache\n\t(but may still be cached, see store_miss). This directive has no\n\teffect on the responses it allows and on the cached objects.\n\n\tPlease see the \"cache\" directive for a summary of differences among\n\tstore_miss, send_hit, and cache directives.\n\n\tUnlike the \"cache\" directive, send_hit only supports fast acl\n\ttypes.  See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\n\tFor example:\n\n\t\t apply custom Store ID mapping to some URLs\n\t\tacl MapMe dstdomain .c.example.com\n\t\tstore_id_program ...\n\t\tstore_id_access allow MapMe\n\n\t\t but prevent caching of special responses\n\t\t such as 302 redirects that cause StoreID loops\n\t\tacl Ordinary http_status 200-299\n\t\tstore_miss deny MapMe !Ordinary\n\n\t\t and do not serve any previously stored special responses\n\t\t from the cache (in case they were already cached before\n\t\t the above store_miss rule was in effect).\n\t\tsend_hit deny MapMe !Ordinary\nDefault:\n By default, this directive is unused and has no effect.\n", "\tResponses denied by this directive will not be cached (but may still\n\tbe served from the cache, see send_hit). This directive has no\n\teffect on the responses it allows and on the already cached responses.\n\n\tPlease see the \"cache\" directive for a summary of differences among\n\tstore_miss, send_hit, and cache directives. See the\n\tsend_hit directive for a usage example.\n\n\tUnlike the \"cache\" directive, store_miss only supports fast acl\n\ttypes.  See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\nDefault:\n By default, this directive is unused and has no effect.\n", "\tThis option puts an upper limit on how stale content Squid\n\twill serve from the cache if cache validation fails.\n\tCan be overriden by the refresh_pattern max-stale option.\nDefault:\n max_stale 1 week\n", "\tusage: refresh_pattern [-i] regex min percent max [options]\n\n\tBy default, regular expressions are CASE-SENSITIVE.  To make\n\tthem case-insensitive, use the -i option.\n\n\t'Min' is the time (in minutes) an object without an explicit\n\texpiry time should be considered fresh. The recommended\n\tvalue is 0, any higher values may cause dynamic applications\n\tto be erroneously cached unless the application designer\n\thas taken the appropriate actions.\n\n\t'Percent' is a percentage of the objects age (time since last\n\tmodification age) an object without explicit expiry time\n\twill be considered fresh.\n\n\t'Max' is an upper limit on how long objects without an explicit\n\texpiry time will be considered fresh.\n\n\toptions: override-expire\n\t\t override-lastmod\n\t\t reload-into-ims\n\t\t ignore-reload\n\t\t ignore-no-store\n\t\t ignore-must-revalidate\n\t\t ignore-private\n\t\t ignore-auth\n\t\t max-stale=NN\n\t\t refresh-ims\n\t\t store-stale\n\n\t\toverride-expire enforces min age even if the server\n\t\tsent an explicit expiry time (e.g., with the\n\t\tExpires: header or Cache-Control: max-age). Doing this\n\t\tVIOLATES the HTTP standard.  Enabling this feature\n\t\tcould make you liable for problems which it causes.\n\n\t\tNote: override-expire does not enforce staleness - it only extends\n\t\tfreshness / min. If the server returns a Expires time which\n\t\tis longer than your max time, Squid will still consider\n\t\tthe object fresh for that period of time.\n\n\t\toverride-lastmod enforces min age even on objects\n\t\tthat were modified recently.\n\n\t\treload-into-ims changes a client no-cache or ``reload''\n\t\trequest for a cached entry into a conditional request using\n\t\tIf-Modified-Since and/or If-None-Match headers, provided the\n\t\tcached entry has a Last-Modified and/or a strong ETag header.\n\t\tDoing this VIOLATES the HTTP standard. Enabling this feature\n\t\tcould make you liable for problems which it causes.\n\n\t\tignore-reload ignores a client no-cache or ``reload''\n\t\theader. Doing this VIOLATES the HTTP standard. Enabling\n\t\tthis feature could make you liable for problems which\n\t\tit causes.\n\n\t\tignore-no-store ignores any ``Cache-control: no-store''\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-must-revalidate ignores any ``Cache-Control: must-revalidate``\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-private ignores any ``Cache-control: private''\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-auth caches responses to requests with authorization,\n\t\tas if the originserver had sent ``Cache-control: public''\n\t\tin the response header. Doing this VIOLATES the HTTP standard.\n\t\tEnabling this feature could make you liable for problems which\n\t\tit causes.\n\n\t\trefresh-ims causes squid to contact the origin server\n\t\twhen a client issues an If-Modified-Since request. This\n\t\tensures that the client will receive an updated version\n\t\tif one is available.\n\n\t\tstore-stale stores responses even if they don't have explicit \n\t\tfreshness or a validator (i.e., Last-Modified or an ETag) \n\t\tpresent, or if they're already stale. By default, Squid will \n\t\tnot cache such responses because they usually can't be\n\t\treused. Note that such responses will be stale by default.\n\n\t\tmax-stale=NN provide a maximum staleness factor. Squid won't\n\t\tserve objects more stale than this even if it failed to\n\t\tvalidate the object. Default: use the max_stale global limit.\n\n\tBasically a cached object is:\n\n\t\tFRESH if expire > now, else STALE\n\t\tSTALE if age > max\n\t\tFRESH if lm-factor < percent, else STALE\n\t\tFRESH if age < min\n\t\telse STALE\n\n\tThe refresh_pattern lines are checked in the order listed here.\n\tThe first entry which matches is used.  If none of the entries\n\tmatch the default will be used.\n\n\tNote, you must uncomment all the default lines if you want\n\tto change one. The default setting is only active if none is\n\tused.\n\n\n\n\n Add any of your own refresh_pattern entries above these.\n\nrefresh_pattern ^ftp:\t\t1440\t20%\t10080\n", "\tusage: refresh_pattern [-i] regex min percent max [options]\n\n\tBy default, regular expressions are CASE-SENSITIVE.  To make\n\tthem case-insensitive, use the -i option.\n\n\t'Min' is the time (in minutes) an object without an explicit\n\texpiry time should be considered fresh. The recommended\n\tvalue is 0, any higher values may cause dynamic applications\n\tto be erroneously cached unless the application designer\n\thas taken the appropriate actions.\n\n\t'Percent' is a percentage of the objects age (time since last\n\tmodification age) an object without explicit expiry time\n\twill be considered fresh.\n\n\t'Max' is an upper limit on how long objects without an explicit\n\texpiry time will be considered fresh.\n\n\toptions: override-expire\n\t\t override-lastmod\n\t\t reload-into-ims\n\t\t ignore-reload\n\t\t ignore-no-store\n\t\t ignore-must-revalidate\n\t\t ignore-private\n\t\t ignore-auth\n\t\t max-stale=NN\n\t\t refresh-ims\n\t\t store-stale\n\n\t\toverride-expire enforces min age even if the server\n\t\tsent an explicit expiry time (e.g., with the\n\t\tExpires: header or Cache-Control: max-age). Doing this\n\t\tVIOLATES the HTTP standard.  Enabling this feature\n\t\tcould make you liable for problems which it causes.\n\n\t\tNote: override-expire does not enforce staleness - it only extends\n\t\tfreshness / min. If the server returns a Expires time which\n\t\tis longer than your max time, Squid will still consider\n\t\tthe object fresh for that period of time.\n\n\t\toverride-lastmod enforces min age even on objects\n\t\tthat were modified recently.\n\n\t\treload-into-ims changes a client no-cache or ``reload''\n\t\trequest for a cached entry into a conditional request using\n\t\tIf-Modified-Since and/or If-None-Match headers, provided the\n\t\tcached entry has a Last-Modified and/or a strong ETag header.\n\t\tDoing this VIOLATES the HTTP standard. Enabling this feature\n\t\tcould make you liable for problems which it causes.\n\n\t\tignore-reload ignores a client no-cache or ``reload''\n\t\theader. Doing this VIOLATES the HTTP standard. Enabling\n\t\tthis feature could make you liable for problems which\n\t\tit causes.\n\n\t\tignore-no-store ignores any ``Cache-control: no-store''\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-must-revalidate ignores any ``Cache-Control: must-revalidate``\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-private ignores any ``Cache-control: private''\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-auth caches responses to requests with authorization,\n\t\tas if the originserver had sent ``Cache-control: public''\n\t\tin the response header. Doing this VIOLATES the HTTP standard.\n\t\tEnabling this feature could make you liable for problems which\n\t\tit causes.\n\n\t\trefresh-ims causes squid to contact the origin server\n\t\twhen a client issues an If-Modified-Since request. This\n\t\tensures that the client will receive an updated version\n\t\tif one is available.\n\n\t\tstore-stale stores responses even if they don't have explicit \n\t\tfreshness or a validator (i.e., Last-Modified or an ETag) \n\t\tpresent, or if they're already stale. By default, Squid will \n\t\tnot cache such responses because they usually can't be\n\t\treused. Note that such responses will be stale by default.\n\n\t\tmax-stale=NN provide a maximum staleness factor. Squid won't\n\t\tserve objects more stale than this even if it failed to\n\t\tvalidate the object. Default: use the max_stale global limit.\n\n\tBasically a cached object is:\n\n\t\tFRESH if expire > now, else STALE\n\t\tSTALE if age > max\n\t\tFRESH if lm-factor < percent, else STALE\n\t\tFRESH if age < min\n\t\telse STALE\n\n\tThe refresh_pattern lines are checked in the order listed here.\n\tThe first entry which matches is used.  If none of the entries\n\tmatch the default will be used.\n\n\tNote, you must uncomment all the default lines if you want\n\tto change one. The default setting is only active if none is\n\tused.\n\n\n\n\n Add any of your own refresh_pattern entries above these.\n\nrefresh_pattern ^ftp:\t\t1440\t20%\t10080\n", "\tusage: refresh_pattern [-i] regex min percent max [options]\n\n\tBy default, regular expressions are CASE-SENSITIVE.  To make\n\tthem case-insensitive, use the -i option.\n\n\t'Min' is the time (in minutes) an object without an explicit\n\texpiry time should be considered fresh. The recommended\n\tvalue is 0, any higher values may cause dynamic applications\n\tto be erroneously cached unless the application designer\n\thas taken the appropriate actions.\n\n\t'Percent' is a percentage of the objects age (time since last\n\tmodification age) an object without explicit expiry time\n\twill be considered fresh.\n\n\t'Max' is an upper limit on how long objects without an explicit\n\texpiry time will be considered fresh.\n\n\toptions: override-expire\n\t\t override-lastmod\n\t\t reload-into-ims\n\t\t ignore-reload\n\t\t ignore-no-store\n\t\t ignore-must-revalidate\n\t\t ignore-private\n\t\t ignore-auth\n\t\t max-stale=NN\n\t\t refresh-ims\n\t\t store-stale\n\n\t\toverride-expire enforces min age even if the server\n\t\tsent an explicit expiry time (e.g., with the\n\t\tExpires: header or Cache-Control: max-age). Doing this\n\t\tVIOLATES the HTTP standard.  Enabling this feature\n\t\tcould make you liable for problems which it causes.\n\n\t\tNote: override-expire does not enforce staleness - it only extends\n\t\tfreshness / min. If the server returns a Expires time which\n\t\tis longer than your max time, Squid will still consider\n\t\tthe object fresh for that period of time.\n\n\t\toverride-lastmod enforces min age even on objects\n\t\tthat were modified recently.\n\n\t\treload-into-ims changes a client no-cache or ``reload''\n\t\trequest for a cached entry into a conditional request using\n\t\tIf-Modified-Since and/or If-None-Match headers, provided the\n\t\tcached entry has a Last-Modified and/or a strong ETag header.\n\t\tDoing this VIOLATES the HTTP standard. Enabling this feature\n\t\tcould make you liable for problems which it causes.\n\n\t\tignore-reload ignores a client no-cache or ``reload''\n\t\theader. Doing this VIOLATES the HTTP standard. Enabling\n\t\tthis feature could make you liable for problems which\n\t\tit causes.\n\n\t\tignore-no-store ignores any ``Cache-control: no-store''\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-must-revalidate ignores any ``Cache-Control: must-revalidate``\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-private ignores any ``Cache-control: private''\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-auth caches responses to requests with authorization,\n\t\tas if the originserver had sent ``Cache-control: public''\n\t\tin the response header. Doing this VIOLATES the HTTP standard.\n\t\tEnabling this feature could make you liable for problems which\n\t\tit causes.\n\n\t\trefresh-ims causes squid to contact the origin server\n\t\twhen a client issues an If-Modified-Since request. This\n\t\tensures that the client will receive an updated version\n\t\tif one is available.\n\n\t\tstore-stale stores responses even if they don't have explicit \n\t\tfreshness or a validator (i.e., Last-Modified or an ETag) \n\t\tpresent, or if they're already stale. By default, Squid will \n\t\tnot cache such responses because they usually can't be\n\t\treused. Note that such responses will be stale by default.\n\n\t\tmax-stale=NN provide a maximum staleness factor. Squid won't\n\t\tserve objects more stale than this even if it failed to\n\t\tvalidate the object. Default: use the max_stale global limit.\n\n\tBasically a cached object is:\n\n\t\tFRESH if expire > now, else STALE\n\t\tSTALE if age > max\n\t\tFRESH if lm-factor < percent, else STALE\n\t\tFRESH if age < min\n\t\telse STALE\n\n\tThe refresh_pattern lines are checked in the order listed here.\n\tThe first entry which matches is used.  If none of the entries\n\tmatch the default will be used.\n\n\tNote, you must uncomment all the default lines if you want\n\tto change one. The default setting is only active if none is\n\tused.\n\n\n\n\n Add any of your own refresh_pattern entries above these.\n\nrefresh_pattern ^ftp:\t\t1440\t20%\t10080\n", "\tusage: refresh_pattern [-i] regex min percent max [options]\n\n\tBy default, regular expressions are CASE-SENSITIVE.  To make\n\tthem case-insensitive, use the -i option.\n\n\t'Min' is the time (in minutes) an object without an explicit\n\texpiry time should be considered fresh. The recommended\n\tvalue is 0, any higher values may cause dynamic applications\n\tto be erroneously cached unless the application designer\n\thas taken the appropriate actions.\n\n\t'Percent' is a percentage of the objects age (time since last\n\tmodification age) an object without explicit expiry time\n\twill be considered fresh.\n\n\t'Max' is an upper limit on how long objects without an explicit\n\texpiry time will be considered fresh.\n\n\toptions: override-expire\n\t\t override-lastmod\n\t\t reload-into-ims\n\t\t ignore-reload\n\t\t ignore-no-store\n\t\t ignore-must-revalidate\n\t\t ignore-private\n\t\t ignore-auth\n\t\t max-stale=NN\n\t\t refresh-ims\n\t\t store-stale\n\n\t\toverride-expire enforces min age even if the server\n\t\tsent an explicit expiry time (e.g., with the\n\t\tExpires: header or Cache-Control: max-age). Doing this\n\t\tVIOLATES the HTTP standard.  Enabling this feature\n\t\tcould make you liable for problems which it causes.\n\n\t\tNote: override-expire does not enforce staleness - it only extends\n\t\tfreshness / min. If the server returns a Expires time which\n\t\tis longer than your max time, Squid will still consider\n\t\tthe object fresh for that period of time.\n\n\t\toverride-lastmod enforces min age even on objects\n\t\tthat were modified recently.\n\n\t\treload-into-ims changes a client no-cache or ``reload''\n\t\trequest for a cached entry into a conditional request using\n\t\tIf-Modified-Since and/or If-None-Match headers, provided the\n\t\tcached entry has a Last-Modified and/or a strong ETag header.\n\t\tDoing this VIOLATES the HTTP standard. Enabling this feature\n\t\tcould make you liable for problems which it causes.\n\n\t\tignore-reload ignores a client no-cache or ``reload''\n\t\theader. Doing this VIOLATES the HTTP standard. Enabling\n\t\tthis feature could make you liable for problems which\n\t\tit causes.\n\n\t\tignore-no-store ignores any ``Cache-control: no-store''\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-must-revalidate ignores any ``Cache-Control: must-revalidate``\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-private ignores any ``Cache-control: private''\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-auth caches responses to requests with authorization,\n\t\tas if the originserver had sent ``Cache-control: public''\n\t\tin the response header. Doing this VIOLATES the HTTP standard.\n\t\tEnabling this feature could make you liable for problems which\n\t\tit causes.\n\n\t\trefresh-ims causes squid to contact the origin server\n\t\twhen a client issues an If-Modified-Since request. This\n\t\tensures that the client will receive an updated version\n\t\tif one is available.\n\n\t\tstore-stale stores responses even if they don't have explicit \n\t\tfreshness or a validator (i.e., Last-Modified or an ETag) \n\t\tpresent, or if they're already stale. By default, Squid will \n\t\tnot cache such responses because they usually can't be\n\t\treused. Note that such responses will be stale by default.\n\n\t\tmax-stale=NN provide a maximum staleness factor. Squid won't\n\t\tserve objects more stale than this even if it failed to\n\t\tvalidate the object. Default: use the max_stale global limit.\n\n\tBasically a cached object is:\n\n\t\tFRESH if expire > now, else STALE\n\t\tSTALE if age > max\n\t\tFRESH if lm-factor < percent, else STALE\n\t\tFRESH if age < min\n\t\telse STALE\n\n\tThe refresh_pattern lines are checked in the order listed here.\n\tThe first entry which matches is used.  If none of the entries\n\tmatch the default will be used.\n\n\tNote, you must uncomment all the default lines if you want\n\tto change one. The default setting is only active if none is\n\tused.\n\n\n\n\n Add any of your own refresh_pattern entries above these.\n\nrefresh_pattern ^ftp:\t\t1440\t20%\t10080\n", "\tusage: refresh_pattern [-i] regex min percent max [options]\n\n\tBy default, regular expressions are CASE-SENSITIVE.  To make\n\tthem case-insensitive, use the -i option.\n\n\t'Min' is the time (in minutes) an object without an explicit\n\texpiry time should be considered fresh. The recommended\n\tvalue is 0, any higher values may cause dynamic applications\n\tto be erroneously cached unless the application designer\n\thas taken the appropriate actions.\n\n\t'Percent' is a percentage of the objects age (time since last\n\tmodification age) an object without explicit expiry time\n\twill be considered fresh.\n\n\t'Max' is an upper limit on how long objects without an explicit\n\texpiry time will be considered fresh.\n\n\toptions: override-expire\n\t\t override-lastmod\n\t\t reload-into-ims\n\t\t ignore-reload\n\t\t ignore-no-store\n\t\t ignore-must-revalidate\n\t\t ignore-private\n\t\t ignore-auth\n\t\t max-stale=NN\n\t\t refresh-ims\n\t\t store-stale\n\n\t\toverride-expire enforces min age even if the server\n\t\tsent an explicit expiry time (e.g., with the\n\t\tExpires: header or Cache-Control: max-age). Doing this\n\t\tVIOLATES the HTTP standard.  Enabling this feature\n\t\tcould make you liable for problems which it causes.\n\n\t\tNote: override-expire does not enforce staleness - it only extends\n\t\tfreshness / min. If the server returns a Expires time which\n\t\tis longer than your max time, Squid will still consider\n\t\tthe object fresh for that period of time.\n\n\t\toverride-lastmod enforces min age even on objects\n\t\tthat were modified recently.\n\n\t\treload-into-ims changes a client no-cache or ``reload''\n\t\trequest for a cached entry into a conditional request using\n\t\tIf-Modified-Since and/or If-None-Match headers, provided the\n\t\tcached entry has a Last-Modified and/or a strong ETag header.\n\t\tDoing this VIOLATES the HTTP standard. Enabling this feature\n\t\tcould make you liable for problems which it causes.\n\n\t\tignore-reload ignores a client no-cache or ``reload''\n\t\theader. Doing this VIOLATES the HTTP standard. Enabling\n\t\tthis feature could make you liable for problems which\n\t\tit causes.\n\n\t\tignore-no-store ignores any ``Cache-control: no-store''\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-must-revalidate ignores any ``Cache-Control: must-revalidate``\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-private ignores any ``Cache-control: private''\n\t\theaders received from a server. Doing this VIOLATES\n\t\tthe HTTP standard. Enabling this feature could make you\n\t\tliable for problems which it causes.\n\n\t\tignore-auth caches responses to requests with authorization,\n\t\tas if the originserver had sent ``Cache-control: public''\n\t\tin the response header. Doing this VIOLATES the HTTP standard.\n\t\tEnabling this feature could make you liable for problems which\n\t\tit causes.\n\n\t\trefresh-ims causes squid to contact the origin server\n\t\twhen a client issues an If-Modified-Since request. This\n\t\tensures that the client will receive an updated version\n\t\tif one is available.\n\n\t\tstore-stale stores responses even if they don't have explicit \n\t\tfreshness or a validator (i.e., Last-Modified or an ETag) \n\t\tpresent, or if they're already stale. By default, Squid will \n\t\tnot cache such responses because they usually can't be\n\t\treused. Note that such responses will be stale by default.\n\n\t\tmax-stale=NN provide a maximum staleness factor. Squid won't\n\t\tserve objects more stale than this even if it failed to\n\t\tvalidate the object. Default: use the max_stale global limit.\n\n\tBasically a cached object is:\n\n\t\tFRESH if expire > now, else STALE\n\t\tSTALE if age > max\n\t\tFRESH if lm-factor < percent, else STALE\n\t\tFRESH if age < min\n\t\telse STALE\n\n\tThe refresh_pattern lines are checked in the order listed here.\n\tThe first entry which matches is used.  If none of the entries\n\tmatch the default will be used.\n\n\tNote, you must uncomment all the default lines if you want\n\tto change one. The default setting is only active if none is\n\tused.\n\n\n\n\n Add any of your own refresh_pattern entries above these.\n\nrefresh_pattern ^ftp:\t\t1440\t20%\t10080\n", "Default:\n quick_abort_min 16 KB\n", "Default:\n quick_abort_max 16 KB\n", "\tThe cache by default continues downloading aborted requests\n\twhich are almost completed (less than 16 KB remaining). This\n\tmay be undesirable on slow (e.g. SLIP) links and/or very busy\n\tcaches.  Impatient users may tie up file descriptors and\n\tbandwidth by repeatedly requesting and immediately aborting\n\tdownloads.\n\n\tWhen the user aborts a request, Squid will check the\n\tquick_abort values to the amount of data transferred until\n\tthen.\n\n\tIf the transfer has less than 'quick_abort_min' KB remaining,\n\tit will finish the retrieval.\n\n\tIf the transfer has more than 'quick_abort_max' KB remaining,\n\tit will abort the retrieval.\n\n\tIf more than 'quick_abort_pct' of the transfer has completed,\n\tit will finish the retrieval.\n\n\tIf you do not want any retrieval to continue after the client\n\thas aborted, set both 'quick_abort_min' and 'quick_abort_max'\n\tto '0 KB'.\n\n\tIf you want retrievals to always continue if they are being\n\tcached set 'quick_abort_min' to '-1 KB'.\nDefault:\n quick_abort_pct 95\n", "\tThe amount of data the cache will buffer ahead of what has been\n\tsent to the client when retrieving an object from another server.\nDefault:\n read_ahead_gap 16 KB\n", "\tSet the Default Time-to-Live (TTL) for failed requests.\n\tCertain types of failures (such as \"connection refused\" and\n\t\"404 Not Found\") are able to be negatively-cached for a short time.\n\tModern web servers should provide Expires: header, however if they\n\tdo not this can provide a minimum TTL.\n\tThe default is not to cache errors with unknown expiry details.\n\n\tNote that this is different from negative caching of DNS lookups.\n\n\tWARNING: Doing this VIOLATES the HTTP standard.  Enabling\n\tthis feature could make you liable for problems which it\n\tcauses.\nDefault:\n negative_ttl 0 seconds\n", "\tUpper limit on how long Squid will cache positive DNS responses.\n\tDefault is 6 hours (360 minutes). This directive must be set\n\tlarger than negative_dns_ttl.\nDefault:\n positive_dns_ttl 6 hours\n", "\tTime-to-Live (TTL) for negative caching of failed DNS lookups.\n\tThis also sets the lower cache limit on positive lookups.\n\tMinimum value is 1 second, and it is not recommendable to go\n\tmuch below 10 seconds.\nDefault:\n negative_dns_ttl 1 minutes\n", "\tusage: (size) [units] [[!]aclname]\n\t\n\tSets an upper limit on how far (number of bytes) into the file \n\ta Range request\tmay be to cause Squid to prefetch the whole file. \n\tIf beyond this limit, Squid forwards the Range request as it is and \n\tthe result is NOT cached.\n\t\n\tThis is to stop a far ahead range request (lets say start at 17MB)\n\tfrom making Squid fetch the whole object up to that point before\n\tsending anything to the client.\n\t\n\tMultiple range_offset_limit lines may be specified, and they will \n\tbe searched from top to bottom on each request until a match is found. \n\tThe first match found will be used.  If no line matches a request, the \n\tdefault limit of 0 bytes will be used.\n\t\n\t'size' is the limit specified as a number of units.\n\t\n\t'units' specifies whether to use bytes, KB, MB, etc.\n\tIf no units are specified bytes are assumed.\n\t\n\tA size of 0 causes Squid to never fetch more than the\n\tclient requested. (default)\n\t\n\tA size of 'none' causes Squid to always fetch the object from the\n\tbeginning so it may cache the result. (2.0 style)\n\t\n\t'aclname' is the name of a defined ACL.\n\t\n\tNP: Using 'none' as the byte value here will override any quick_abort settings \n\t    that may otherwise apply to the range request. The range request will\n\t    be fully fetched from start to finish regardless of the client\n\t    actions. This affects bandwidth usage.\nDefault:\n none\n", "\tThe minimum caching time according to (Expires - Date)\n\theaders Squid honors if the object can't be revalidated.\n\tThe default is 60 seconds.\n\n\tIn reverse proxy environments it might be desirable to honor\n\tshorter object lifetimes. It is most likely better to make\n\tyour server return a meaningful Last-Modified header however.\n\n\tIn ESI environments where page fragments often have short\n\tlifetimes, this will often be best set to 0.\nDefault:\n minimum_expiry_time 60 seconds\n", "\tAverage object size, used to estimate number of objects your\n\tcache can hold.  The default is 13 KB.\n\n\tThis is used to pre-seed the cache index memory allocation to\n\treduce expensive reallocate operations while handling clients\n\ttraffic. Too-large values may result in memory allocation during\n\tpeak traffic, too-small values will result in wasted memory.\n\n\tCheck the cache manager 'info' report metrics for the real\n\tobject sizes seen by your Squid before tuning this.\nDefault:\n store_avg_object_size 13 KB\n", "\tThis specifies the maximum size for HTTP headers in a request.\n\tRequest headers are usually relatively small (about 512 bytes).\n\tPlacing a limit on the request header size will catch certain\n\tbugs (for example with persistent connections) and possibly\n\tbuffer-overflow or denial-of-service attacks.\nDefault:\n request_header_max_size 64 KB\n", "\tThis specifies the maximum size for HTTP headers in a reply.\n\tReply headers are usually relatively small (about 512 bytes).\n\tPlacing a limit on the reply header size will catch certain\n\tbugs (for example with persistent connections) and possibly\n\tbuffer-overflow or denial-of-service attacks.\nDefault:\n reply_header_max_size 64 KB\n", "\tThis specifies the maximum size for an HTTP request body.\n\tIn other words, the maximum size of a PUT/POST request.\n\tA user who attempts to send a request with a body larger\n\tthan this limit receives an \"Invalid Request\" error message.\n\tIf you set this parameter to a zero (the default), there will\n\tbe no limit imposed.\n\n\tSee also client_request_buffer_max_size for an alternative\n\tlimitation on client uploads which can be configured.\nDefault:\n No limit.\n", "\tThis specifies the maximum buffer size of a client request.\n\tIt prevents squid eating too much memory when somebody uploads\n\ta large file.\nDefault:\n client_request_buffer_max_size 512 KB\n", "\tA list of ACL elements which, if matched, causes Squid to send\n\tan extra CRLF pair after the body of a PUT/POST request.\n\n\tSome HTTP servers has broken implementations of PUT/POST,\n\tand rely on an extra CRLF pair sent by some WWW clients.\n\n\tQuote from RFC2616 section 4.1 on this matter:\n\n\t  Note: certain buggy HTTP/1.0 client implementations generate an\n\t  extra CRLF's after a POST request. To restate what is explicitly\n\t  forbidden by the BNF, an HTTP/1.1 client must not preface or follow\n\t  a request with an extra CRLF.\n\n\tThis clause only supports fast acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\nExample:\n acl buggy_server url_regex ^http://....\n broken_posts allow buggy_server\nDefault:\n Obey RFC 2616.\n", "\tUsage: request_header_access header_name allow|deny [!]aclname ...\n\n\tWARNING: Doing this VIOLATES the HTTP standard.  Enabling\n\tthis feature could make you liable for problems which it\n\tcauses.\n\n\tThis option replaces the old 'anonymize_headers' and the\n\tolder 'http_anonymizer' option with something that is much\n\tmore configurable. A list of ACLs for each header name allows\n\tremoval of specific header fields under specific conditions.\n\n\tThis option only applies to outgoing HTTP request headers (i.e.,\n\theaders sent by Squid to the next HTTP hop such as a cache peer\n\tor an origin server). The option has no effect during cache hit\n\tdetection. The equivalent adaptation vectoring point in ICAP\n\tterminology is post-cache REQMOD.\n\n\tThe option is applied to individual outgoing request header\n\tfields. For each request header field F, Squid uses the first\n\tqualifying sets of request_header_access rules:\n\n\t    1. Rules with header_name equal to F's name.\n\t    2. Rules with header_name 'Other', provided F's name is not\n\t       on the hard-coded list of commonly used HTTP header names.\n\t    3. Rules with header_name 'All'.\n\n\tWithin that qualifying rule set, rule ACLs are checked as usual.\n\tIf ACLs of an \"allow\" rule match, the header field is allowed to\n\tgo through as is. If ACLs of a \"deny\" rule match, the header is\n\tremoved and request_header_replace is then checked to identify\n\tif the removed header has a replacement. If no rules within the\n\tset have matching ACLs, the header field is left as is.\n\n\tFor example, to achieve the same behavior as the old\n\t'http_anonymizer standard' option, you should use:\n\n\t\trequest_header_access From deny all\n\t\trequest_header_access Referer deny all\n\t\trequest_header_access User-Agent deny all\n\n\tOr, to reproduce the old 'http_anonymizer paranoid' feature\n\tyou should use:\n\n\t\trequest_header_access Authorization allow all\n\t\trequest_header_access Proxy-Authorization allow all\n\t\trequest_header_access Cache-Control allow all\n\t\trequest_header_access Content-Length allow all\n\t\trequest_header_access Content-Type allow all\n\t\trequest_header_access Date allow all\n\t\trequest_header_access Host allow all\n\t\trequest_header_access If-Modified-Since allow all\n\t\trequest_header_access Pragma allow all\n\t\trequest_header_access Accept allow all\n\t\trequest_header_access Accept-Charset allow all\n\t\trequest_header_access Accept-Encoding allow all\n\t\trequest_header_access Accept-Language allow all\n\t\trequest_header_access Connection allow all\n\t\trequest_header_access All deny all\n\n\tHTTP reply headers are controlled with the reply_header_access directive.\n\n\tBy default, all headers are allowed (no anonymizing is performed).\nDefault:\n No limits.\n", "\tUsage: reply_header_access header_name allow|deny [!]aclname ...\n\n\tWARNING: Doing this VIOLATES the HTTP standard.  Enabling\n\tthis feature could make you liable for problems which it\n\tcauses.\n\n\tThis option only applies to reply headers, i.e., from the\n\tserver to the client.\n\n\tThis is the same as request_header_access, but in the other\n\tdirection. Please see request_header_access for detailed\n\tdocumentation.\n\n\tFor example, to achieve the same behavior as the old\n\t'http_anonymizer standard' option, you should use:\n\n\t\treply_header_access Server deny all\n\t\treply_header_access WWW-Authenticate deny all\n\t\treply_header_access Link deny all\n\n\tOr, to reproduce the old 'http_anonymizer paranoid' feature\n\tyou should use:\n\n\t\treply_header_access Allow allow all\n\t\treply_header_access WWW-Authenticate allow all\n\t\treply_header_access Proxy-Authenticate allow all\n\t\treply_header_access Cache-Control allow all\n\t\treply_header_access Content-Encoding allow all\n\t\treply_header_access Content-Length allow all\n\t\treply_header_access Content-Type allow all\n\t\treply_header_access Date allow all\n\t\treply_header_access Expires allow all\n\t\treply_header_access Last-Modified allow all\n\t\treply_header_access Location allow all\n\t\treply_header_access Pragma allow all\n\t\treply_header_access Content-Language allow all\n\t\treply_header_access Retry-After allow all\n\t\treply_header_access Title allow all\n\t\treply_header_access Content-Disposition allow all\n\t\treply_header_access Connection allow all\n\t\treply_header_access All deny all\n\n\tHTTP request headers are controlled with the request_header_access directive.\n\n\tBy default, all headers are allowed (no anonymizing is\n\tperformed).\nDefault:\n No limits.\n", "\tUsage:   request_header_replace header_name message\n\tExample: request_header_replace User-Agent Nutscrape/1.0 (CP/M; 8-bit)\n\n\tThis option allows you to change the contents of headers\n\tdenied with request_header_access above, by replacing them\n\twith some fixed string.\n\n\tThis only applies to request headers, not reply headers.\n\n\tBy default, headers are removed if denied.\nDefault:\n none\n", "        Usage:   reply_header_replace header_name message\n        Example: reply_header_replace Server Foo/1.0\n\n        This option allows you to change the contents of headers\n        denied with reply_header_access above, by replacing them\n        with some fixed string.\n\n        This only applies to reply headers, not request headers.\n\n        By default, headers are removed if denied.\nDefault:\n none\n", "\tUsage:   request_header_add field-name field-value acl1 [acl2] ...\n\tExample: request_header_add X-Client-CA \"CA=%ssl::>cert_issuer\" all\n\n\tThis option adds header fields to outgoing HTTP requests (i.e.,\n\trequest headers sent by Squid to the next HTTP hop such as a\n\tcache peer or an origin server). The option has no effect during\n\tcache hit detection. The equivalent adaptation vectoring point\n\tin ICAP terminology is post-cache REQMOD.\n\n\tField-name is a token specifying an HTTP header name. If a\n\tstandard HTTP header name is used, Squid does not check whether\n\tthe new header conflicts with any existing headers or violates\n\tHTTP rules. If the request to be modified already contains a\n\tfield with the same name, the old field is preserved but the\n\theader field values are not merged.\n\n\tField-value is either a token or a quoted string. If quoted\n\tstring format is used, then the surrounding quotes are removed\n\twhile escape sequences and %macros are processed.\n\n\tIn theory, all of the logformat codes can be used as %macros.\n\tHowever, unlike logging (which happens at the very end of\n\ttransaction lifetime), the transaction may not yet have enough\n\tinformation to expand a macro when the new header value is needed.\n\tAnd some information may already be available to Squid but not yet\n\tcommitted where the macro expansion code can access it (report\n\tsuch instances!). The macro will be expanded into a single dash\n\t('-') in such cases. Not all macros have been tested.\n\n\tOne or more Squid ACLs may be specified to restrict header\n\tinjection to matching requests. As always in squid.conf, all\n\tACLs in an option ACL list must be satisfied for the insertion\n\tto happen. The request_header_add option supports fast ACLs\n\tonly.\nDefault:\n none\n", "\tThis option used to log custom information about the master\n\ttransaction. For example, an admin may configure Squid to log\n\twhich \"user group\" the transaction belongs to, where \"user group\"\n\twill be determined based on a set of ACLs and not [just]\n\tauthentication information.\n\tValues of key/value pairs can be logged using %{key}note macros:\n\n\t    note key value acl ...\n\t    logformat myFormat ... %{key}note ...\nDefault:\n none\n", "\tIn the default \"on\" setting Squid accepts certain forms\n\tof non-compliant HTTP messages where it is unambiguous\n\twhat the sending application intended even if the message\n\tis not correctly formatted. The messages is then normalized\n\tto the correct form when forwarded by Squid.\n\n\tIf set to \"warn\" then a warning will be emitted in cache.log\n\teach time such HTTP error is encountered.\n\n\tIf set to \"off\" then such HTTP errors will cause the request\n\tor response to be rejected.\nDefault:\n relaxed_header_parser on\n", "       This option controls whether Squid is allowed to merge multiple\n       potentially cachable requests for the same URI before Squid knows\n       whether the response is going to be cachable.\n\n       This feature is disabled by default: Enabling collapsed forwarding\n       needlessly delays forwarding requests that look cachable (when they are\n       collapsed) but then need to be forwarded individually anyway because\n       they end up being for uncachable content. However, in some cases, such\n       as accelleration of highly cachable content with periodic or groupped\n       expiration times, the gains from collapsing [large volumes of\n       simultenous refresh requests] outweigh losses from such delays.\nDefault:\n collapsed_forwarding off\n", "\tThis parameter specifies how long Squid should at most attempt in\n\tfinding a forwarding path for the request before giving up.\nDefault:\n forward_timeout 4 minutes\n", "\tThis parameter specifies how long to wait for the TCP connect to\n\tthe requested server or peer to complete before Squid should\n\tattempt to find another path where to forward the request.\nDefault:\n connect_timeout 1 minute\n", "\tThis parameter specifies how long to wait for a pending TCP\n\tconnection to a peer cache.  The default is 30 seconds.   You\n\tmay also set different timeout values for individual neighbors\n\twith the 'connect-timeout' option on a 'cache_peer' line.\nDefault:\n peer_connect_timeout 30 seconds\n", "\tApplied on peer server connections.\n\n\tAfter each successful read(), the timeout will be extended by this\n\tamount.  If no data is read again after this amount of time,\n\tthe request is aborted and logged with ERR_READ_TIMEOUT.\n\n\tThe default is 15 minutes.\nDefault:\n read_timeout 15 minutes\n", "\tThis timeout is tracked for all connections that have data\n\tavailable for writing and are waiting for the socket to become\n\tready. After each successful write, the timeout is extended by\n\tthe configured amount. If Squid has data to write but the\n\tconnection is not ready for the configured duration, the\n\ttransaction associated with the connection is terminated. The\n\tdefault is 15 minutes.\nDefault:\n write_timeout 15 minutes\n", "\tThe maximum amount of time a client (browser) is allowed to\n\tremain connected to the cache process.  This protects the Cache\n\tfrom having a lot of sockets (and hence file descriptors) tied up\n\tin a CLOSE_WAIT state from remote clients that go away without\n\tproperly shutting down (either because of a network failure or\n\tbecause of a poor client implementation).  The default is one\n\tday, 1440 minutes.\n\n\tNOTE:  The default value is intended to be much larger than any\n\tclient would ever need to be connected to your cache.  You\n\tshould probably change client_lifetime only as a last resort.\n\tIf you seem to have many client connections tying up\n\tfiledescriptors, we recommend first tuning the read_timeout,\n\trequest_timeout, persistent_request_timeout and quick_abort values.\nDefault:\n client_lifetime 1 day\n", "\tWhen SIGTERM or SIGHUP is received, the cache is put into\n\t\"shutdown pending\" mode until all active sockets are closed.\n\tThis value is the lifetime to set for all open descriptors\n\tduring shutdown mode.  Any active clients after this many\n\tseconds will receive a 'timeout' message.\nDefault:\n shutdown_lifetime 30 seconds\n", "\tFrom: email-address for mail sent when the cache dies.\n\tThe default is to use 'squid@unique_hostname'.\n\n\tSee also: unique_hostname directive.\nDefault:\n none\n", "\tSquid sets the GID to the effective user's default group ID\n\t(taken from the password file) and supplementary group list\n\tfrom the groups membership.\n\n\tIf you want Squid to run with a specific GID regardless of\n\tthe group memberships of the effective user then set this\n\tto the group (or GID) you want Squid to run as. When set\n\tall other group privileges of the effective user are ignored\n\tand only this GID is effective. If Squid is not started as\n\troot the user starting Squid MUST be member of the specified\n\tgroup.\n\n\tThis option is not recommended by the Squid Team.\n\tOur preference is for administrators to configure a secure\n\tuser account for squid with UID/GID matching system policies.\nDefault:\n Use system group memberships of the cache_effective_user account\n", "\tIf you want to present a special hostname in error messages, etc,\n\tdefine this.  Otherwise, the return value of gethostname()\n\twill be used. If you have multiple caches in a cluster and\n\tget errors about IP-forwarding you must set them to have individual\n\tnames with this setting.\nDefault:\n Automatically detect the system host name\n", "\tIf you want to have multiple machines with the same\n\t'visible_hostname' you must give each machine a different\n\t'unique_hostname' so forwarding loops can be detected.\nDefault:\n Copy the value from visible_hostname\n", "\tA list of other DNS names your cache has.\nDefault:\n none\n", "\tThis is how frequently to send cache announcements.\n\n\tTo enable announcing your cache, just set an announce period.\n\n\tExample:\n\t\tannounce_period 1 day\nDefault:\n Announcement messages disabled.\n", "\tThe contents of this file will be included in the announce\n\tregistration messages.\nDefault:\n none\n", "\tSurrogates (http://www.esi.org/architecture_spec_1.0.html)\n\tneed an identification token to allow control targeting. Because\n\ta farm of surrogates may all perform the same tasks, they may share\n\tan identification token.\nDefault:\n visible_hostname is used if no specific ID is set.\n", "\tESI markup is not strictly XML compatible. The custom ESI parser\n\twill give higher performance, but cannot handle non ASCII character\n\tencodings.\nDefault:\n esi_parser custom\n", "\tThis defines the class of each delay pool.  There must be exactly one\n\tdelay_class line for each delay pool.  For example, to define two\n\tdelay pools, one of class 2 and one of class 3, the settings above\n\tand here would be:\n\n\tExample:\n\t    delay_pools 4       4 delay pools\n\t    delay_class 1 2     pool 1 is a class 2 pool\n\t    delay_class 2 3     pool 2 is a class 3 pool\n\t    delay_class 3 4     pool 3 is a class 4 pool\n\t    delay_class 4 5     pool 4 is a class 5 pool\n\n\tThe delay pool classes are:\n\n\t\tclass 1\t\tEverything is limited by a single aggregate\n\t\t\t\tbucket.\n\n\t\tclass 2 \tEverything is limited by a single aggregate\n\t\t\t\tbucket as well as an \"individual\" bucket chosen\n\t\t\t\tfrom bits 25 through 32 of the IPv4 address.\n\n\t\tclass 3\t\tEverything is limited by a single aggregate\n\t\t\t\tbucket as well as a \"network\" bucket chosen\n\t\t\t\tfrom bits 17 through 24 of the IP address and a\n\t\t\t\t\"individual\" bucket chosen from bits 17 through\n\t\t\t\t32 of the IPv4 address.\n\n\t\tclass 4\t\tEverything in a class 3 delay pool, with an\n\t\t\t\tadditional limit on a per user basis. This\n\t\t\t\tonly takes effect if the username is established\n\t\t\t\tin advance - by forcing authentication in your\n\t\t\t\thttp_access rules.\n\n\t\tclass 5\t\tRequests are grouped according their tag (see\n\t\t\t\texternal_acl's tag= reply).\n\n\n\tEach pool also requires a delay_parameters directive to configure the pool size\n\tand speed limits used whenever the pool is applied to a request. Along with\n\ta set of delay_access directives to determine when it is used.\n\n\tNOTE: If an IP address is a.b.c.d\n\t\t-> bits 25 through 32 are \"d\"\n\t\t-> bits 17 through 24 are \"c\"\n\t\t-> bits 17 through 32 are \"c * 256 + d\"\n\n\tNOTE-2: Due to the use of bitmasks in class 2,3,4 pools they only apply to\n\t\tIPv4 traffic. Class 1 and 5 pools may be used with IPv6 traffic.\n\n\tThis clause only supports fast acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\n\tSee also delay_parameters and delay_access.\nDefault:\n none\n", "\tThis is used to determine which delay pool a request falls into.\n\n\tdelay_access is sorted per pool and the matching starts with pool 1,\n\tthen pool 2, ..., and finally pool N. The first delay pool where the\n\trequest is allowed is selected for the request. If it does not allow\n\tthe request to any pool then the request is not delayed (default).\n\n\tFor example, if you want some_big_clients in delay\n\tpool 1 and lotsa_little_clients in delay pool 2:\n\n\t\tdelay_access 1 allow some_big_clients\n\t\tdelay_access 1 deny all\n\t\tdelay_access 2 allow lotsa_little_clients\n\t\tdelay_access 2 deny all\n\t\tdelay_access 3 allow authenticated_clients\n\n\tSee also delay_parameters and delay_class.\n\nDefault:\n Deny using the pool, unless allow rules exist in squid.conf for the pool.\n", "\tThis defines the parameters for a delay pool.  Each delay pool has\n\ta number of \"buckets\" associated with it, as explained in the\n\tdescription of delay_class.\n\n\tFor a class 1 delay pool, the syntax is:\n\t\tdelay_class pool 1\n\t\tdelay_parameters pool aggregate\n\n\tFor a class 2 delay pool:\n\t\tdelay_class pool 2\n\t\tdelay_parameters pool aggregate individual\n\n\tFor a class 3 delay pool:\n\t\tdelay_class pool 3\n\t\tdelay_parameters pool aggregate network individual\n\n\tFor a class 4 delay pool:\n\t\tdelay_class pool 4\n\t\tdelay_parameters pool aggregate network individual user\n\n\tFor a class 5 delay pool:\n\t\tdelay_class pool 5\n\t\tdelay_parameters pool tagrate\n\n\tThe option variables are:\n\n\t\tpool\t\ta pool number - ie, a number between 1 and the\n\t\t\t\tnumber specified in delay_pools as used in\n\t\t\t\tdelay_class lines.\n\n\t\taggregate\tthe speed limit parameters for the aggregate bucket\n\t\t\t\t(class 1, 2, 3).\n\n\t\tindividual\tthe speed limit parameters for the individual\n\t\t\t\tbuckets (class 2, 3).\n\n\t\tnetwork\t\tthe speed limit parameters for the network buckets\n\t\t\t\t(class 3).\n\n\t\tuser\t\tthe speed limit parameters for the user buckets\n\t\t\t\t(class 4).\n\n\t\ttagrate\t\tthe speed limit parameters for the tag buckets\n\t\t\t\t(class 5).\n\n\tA pair of delay parameters is written restore/maximum, where restore is\n\tthe number of bytes (not bits - modem and network speeds are usually\n\tquoted in bits) per second placed into the bucket, and maximum is the\n\tmaximum number of bytes which can be in the bucket at any time.\n\n\tThere must be one delay_parameters line for each delay pool.\n\n\n\tFor example, if delay pool number 1 is a class 2 delay pool as in the\n\tabove example, and is being used to strictly limit each host to 64Kbit/sec\n\t(plus overheads), with no overall limit, the line is:\n\n\t\tdelay_parameters 1 none 8000/8000\n\n\tNote that 8 x 8K Byte/sec -> 64K bit/sec.\n\n\tNote that the word 'none' is used to represent no limit.\n\n\n\tAnd, if delay pool number 2 is a class 3 delay pool as in the above\n\texample, and you want to limit it to a total of 256Kbit/sec (strict limit)\n\twith each 8-bit network permitted 64Kbit/sec (strict limit) and each\n\tindividual host permitted 4800bit/sec with a bucket maximum size of 64Kbits\n\tto permit a decent web page to be downloaded at a decent speed\n\t(if the network is not being limited due to overuse) but slow down\n\tlarge downloads more significantly:\n\n\t\tdelay_parameters 2 32000/32000 8000/8000 600/8000\n\n\tNote that 8 x  32K Byte/sec ->  256K bit/sec.\n\t\t  8 x   8K Byte/sec ->   64K bit/sec.\n\t\t  8 x 600  Byte/sec -> 4800  bit/sec.\n\n\n\tFinally, for a class 4 delay pool as in the example - each user will\n\tbe limited to 128Kbits/sec no matter how many workstations they are logged into.:\n\n\t\tdelay_parameters 4 32000/32000 8000/8000 600/64000 16000/16000\n\n\n\tSee also delay_class and delay_access.\n\nDefault:\n none\n", "\tThe initial bucket percentage is used to determine how much is put\n\tin each bucket when squid starts, is reconfigured, or first notices\n\ta host accessing it (in class 2 and class 3, individual hosts and\n\tnetworks only have buckets associated with them once they have been\n\t\"seen\" by squid).\nDefault:\n delay_initial_bucket_level 50\n", "\tThis option determines the initial bucket size as a percentage of\n\tmax_bucket_size from client_delay_parameters. Buckets are created\n\tat the time of the \"first\" connection from the matching IP. Idle\n\tbuckets are periodically deleted up.\n\n\tYou can specify more than 100 percent but note that such \"oversized\"\n\tbuckets are not refilled until their size goes down to max_bucket_size\n\tfrom client_delay_parameters.\n\n\tExample:\n\t\tclient_delay_initial_bucket_level 50\nDefault:\n client_delay_initial_bucket_level 50\n", "\n\tThis option configures client-side bandwidth limits using the\n\tfollowing format:\n\n\t    client_delay_parameters pool speed_limit max_bucket_size\n\n\tpool is an integer ID used for client_delay_access matching.\n\n\tspeed_limit is bytes added to the bucket per second.\n\n\tmax_bucket_size is the maximum size of a bucket, enforced after any\n\tspeed_limit additions.\n\n\tPlease see the delay_parameters option for more information and\n\texamples.\n\n\tExample:\n\t\tclient_delay_parameters 1 1024 2048\n\t\tclient_delay_parameters 2 51200 16384\n\n\tSee also client_delay_access.\n\nDefault:\n none\n", "\tThis option determines the client-side delay pool for the\n\trequest:\n\n\t    client_delay_access pool_ID allow|deny acl_name\n\n\tAll client_delay_access options are checked in their pool ID\n\torder, starting with pool 1. The first checked pool with allowed\n\trequest is selected for the request. If no ACL matches or there\n\tare no client_delay_access options, the request bandwidth is not\n\tlimited.\n\n\tThe ACL-selected pool is then used to find the\n\tclient_delay_parameters for the request. Client-side pools are\n\tnot used to aggregate clients. Clients are always aggregated\n\tbased on their source IP addresses (one bucket per source IP).\n\n\tThis clause only supports fast acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\tAdditionally, only the client TCP connection details are available.\n\tACLs testing HTTP properties will not work.\n\n\tPlease see delay_access for more examples.\n\n\tExample:\n\t\tclient_delay_access 1 allow low_rate_network\n\t\tclient_delay_access 2 allow vips_network\n\n\n\tSee also client_delay_parameters and client_delay_pools.\nDefault:\n Deny use of the pool, unless allow rules exist in squid.conf for the pool.\n", "\tUse this option to define your WCCP ``home'' router for\n\tSquid.\n\n\twccp_router supports a single WCCP(v1) router\n\n\twccp2_router supports multiple WCCPv2 routers\n\n\tonly one of the two may be used at the same time and defines\n\twhich version of WCCP to use.\nDefault:\n WCCP disabled.\n", "\tUse this option to define your WCCP ``home'' router for\n\tSquid.\n\n\twccp_router supports a single WCCP(v1) router\n\n\twccp2_router supports multiple WCCPv2 routers\n\n\tonly one of the two may be used at the same time and defines\n\twhich version of WCCP to use.\nDefault:\n WCCPv2 disabled.\n", "\tWCCP2 allows for multiple traffic services. There are two\n\ttypes: \"standard\" and \"dynamic\". The standard type defines\n\tone service id - http (id 0). The dynamic service ids can be from\n\t51 to 255 inclusive.  In order to use a dynamic service id\n\tone must define the type of traffic to be redirected; this is done\n\tusing the wccp2_service_info option.\n\n\tThe \"standard\" type does not require a wccp2_service_info option,\n\tjust specifying the service id will suffice.\n\n\tMD5 service authentication can be enabled by adding\n\t\"password=<password>\" to the end of this service declaration.\n\n\tExamples:\n\n\twccp2_service standard 0\t for the 'web-cache' standard service\n\twccp2_service dynamic 80\t a dynamic service type which will be\n\t\t\t\t\t fleshed out with subsequent options.\n\twccp2_service standard 0 password=foo\nDefault:\n Use the 'web-cache' standard service.\n", "\tDynamic WCCPv2 services require further information to define the\n\ttraffic you wish to have diverted.\n\n\tThe format is:\n\n\twccp2_service_info <id> protocol=<protocol> flags=<flag>,<flag>..\n\t    priority=<priority> ports=<port>,<port>..\n\n\tThe relevant WCCPv2 flags:\n\t+ src_ip_hash, dst_ip_hash\n\t+ source_port_hash, dst_port_hash\n\t+ src_ip_alt_hash, dst_ip_alt_hash\n\t+ src_port_alt_hash, dst_port_alt_hash\n\t+ ports_source\n\n\tThe port list can be one to eight entries.\n\n\tExample:\n\n\twccp2_service_info 80 protocol=tcp flags=src_ip_hash,ports_source\n\t    priority=240 ports=80\n\n\tNote: the service id must have been defined by a previous\n\t'wccp2_service dynamic <id>' entry.\nDefault:\n none\n", "\tUse this option if you require WCCPv2 to use a specific\n\tinterface address.\n\n\tThe default behavior is to not bind to any specific address.\nDefault:\n Address selected by the operating system.\n", "\tUse this option if you require WCCP to use a specific\n\tinterface address.\n\n\tThe default behavior is to not bind to any specific address.\nDefault:\n Address selected by the operating system.\n", "\tThis is the wait time between Cache Digest rebuilds.\nDefault:\n digest_rebuild_period 1 hour\n", "\tThis is the wait time between Cache Digest writes to\n\tdisk.\nDefault:\n digest_rewrite_period 1 hour\n", "\tThis is the number of bytes of the Cache Digest to write to\n\tdisk at a time.  It defaults to 4096 bytes (4KB), the Squid\n\tdefault swap page.\nDefault:\n digest_swapout_chunk_size 4096 bytes\n", "\tThis is the percentage of the Cache Digest to be scanned at a\n\ttime.  By default it is set to 10% of the Cache Digest.\nDefault:\n digest_rebuild_chunk_percentage 10\n", "\tThe port number where Squid listens for SNMP requests. To enable\n\tSNMP support set this to a suitable port number. Port number\n\t3401 is often used for the Squid SNMP agent. By default it's\n\tset to \"0\" (disabled)\n\n\tExample:\n\t\tsnmp_port 3401\nDefault:\n SNMP disabled.\n", "\tAllowing or denying access to the SNMP port.\n\n\tAll access to the agent is denied by default.\n\tusage:\n\n\tsnmp_access allow|deny [!]aclname ...\n\n\tThis clause only supports fast acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\n\nExample:\n snmp_access allow snmppublic localhost\n snmp_access deny all\nDefault:\n Deny, unless rules exist in squid.conf.\n", "\tJust like 'udp_incoming_address', but for the SNMP port.\n\n\tsnmp_incoming_address\tis used for the SNMP socket receiving\n\t\t\t\tmessages from SNMP agents.\n\n\tThe default snmp_incoming_address is to listen on all\n\tavailable network interfaces.\nDefault:\n Accept SNMP packets from all machine interfaces.\n", "\tJust like 'udp_outgoing_address', but for the SNMP port.\n\n\tsnmp_outgoing_address\tis used for SNMP packets returned to SNMP\n\t\t\t\tagents.\n\n\tIf snmp_outgoing_address is not set it will use the same socket\n\tas snmp_incoming_address. Only change this if you want to have\n\tSNMP replies sent using another address than where this Squid\n\tlistens for SNMP queries.\n\n\tNOTE, snmp_incoming_address and snmp_outgoing_address can not have\n\tthe same value since they both use the same port.\nDefault:\n Use snmp_incoming_address or an address selected by the operating system.\n", "\tThe port number where Squid sends and receives ICP queries to\n\tand from neighbor caches.  The standard UDP port for ICP is 3130.\n\n\tExample:\n\t\ticp_port 3130\nDefault:\n ICP disabled.\n", "\tThe port number where Squid sends and receives HTCP queries to\n\tand from neighbor caches.  To turn it on you want to set it to\n\t4827.\n\n\tExample:\n\t\thtcp_port 4827\nDefault:\n HTCP disabled.\n", "\tudp_incoming_address\tis used for UDP packets received from other\n\t\t\t\tcaches.\n\n\tThe default behavior is to not bind to any specific address.\n\n\tOnly change this if you want to have all UDP queries received on\n\ta specific interface/address.\n\n\tNOTE: udp_incoming_address is used by the ICP, HTCP, and DNS\n\tmodules. Altering it will affect all of them in the same manner.\n\n\tsee also; udp_outgoing_address\n\n\tNOTE, udp_incoming_address and udp_outgoing_address can not\n\thave the same value since they both use the same port.\nDefault:\n Accept packets from all machine interfaces.\n", "\tudp_outgoing_address\tis used for UDP packets sent out to other\n\t\t\t\tcaches.\n\n\tThe default behavior is to not bind to any specific address.\n\n\tInstead it will use the same socket as udp_incoming_address.\n\tOnly change this if you want to have UDP queries sent using another\n\taddress than where this Squid listens for UDP queries from other\n\tcaches.\n\n\tNOTE: udp_outgoing_address is used by the ICP, HTCP, and DNS\n\tmodules. Altering it will affect all of them in the same manner.\n\n\tsee also; udp_incoming_address\n\n\tNOTE, udp_incoming_address and udp_outgoing_address can not\n\thave the same value since they both use the same port.\nDefault:\n Use udp_incoming_address or an address selected by the operating system.\n", "\tIf using the ICMP pinging stuff, do direct fetches for sites\n\twhich are no more than this many rtt milliseconds away.\nDefault:\n minimum_direct_rtt 400\n", "\tNormally Squid will automatically determine an optimal ICP\n\tquery timeout value based on the round-trip-time of recent ICP\n\tqueries.  If you want to override the value determined by\n\tSquid, set this 'icp_query_timeout' to a non-zero value.  This\n\tvalue is specified in MILLISECONDS, so, to use a 2-second\n\ttimeout (the old default), you would write:\n\n\t\ticp_query_timeout 2000\nDefault:\n Dynamic detection.\n", "\tNormally the ICP query timeout is determined dynamically.  But\n\tsometimes it can lead to very large values (say 5 seconds).\n\tUse this option to put an upper limit on the dynamic timeout\n\tvalue.  Do NOT use this option to always use a fixed (instead\n\tof a dynamic) timeout value. To set a fixed timeout see the\n\t'icp_query_timeout' directive.\nDefault:\n maximum_icp_query_timeout 2000\n", "\tNormally the ICP query timeout is determined dynamically.  But\n\tsometimes it can lead to very small timeouts, even lower than\n\tthe normal latency variance on your link due to traffic.\n\tUse this option to put an lower limit on the dynamic timeout\n\tvalue.  Do NOT use this option to always use a fixed (instead\n\tof a dynamic) timeout value. To set a fixed timeout see the\n\t'icp_query_timeout' directive.\nDefault:\n minimum_icp_query_timeout 5\n", "\tControls how often the ICP pings are sent to siblings that\n\thave background-ping set.\nDefault:\n background_ping_rate 10 seconds\n", "\tThis tag specifies a list of multicast groups which your server\n\tshould join to receive multicasted ICP queries.\n\n\tNOTE!  Be very careful what you put here!  Be sure you\n\tunderstand the difference between an ICP _query_ and an ICP\n\t_reply_.  This option is to be set only if you want to RECEIVE\n\tmulticast queries.  Do NOT set this option to SEND multicast\n\tICP (use cache_peer for that).  ICP replies are always sent via\n\tunicast, so this option does not affect whether or not you will\n\treceive replies from multicast group members.\n\n\tYou must be very careful to NOT use a multicast address which\n\tis already in use by another group of caches.\n\n\tIf you are unsure about multicast, please read the Multicast\n\tchapter in the Squid FAQ (http://www.squid-cache.org/FAQ/).\n\n\tUsage: mcast_groups 239.128.16.128 224.0.1.20\n\n\tBy default, Squid doesn't listen on any multicast groups.\nDefault:\n none\n", " Note: This option is only available if Squid is rebuilt with the\n       -DMULTICAST_MISS_STREAM define\n\n\tIf you enable this option, every \"cache miss\" URL will\n\tbe sent out on the specified multicast address.\n\n\tDo not enable this option unless you are are absolutely\n\tcertain you understand what you are doing.\nDefault:\n disabled.\n", "\tFor multicast peers, Squid regularly sends out ICP \"probes\" to\n\tcount how many other peers are listening on the given multicast\n\taddress.  This value specifies how long Squid should wait to\n\tcount all the replies.  The default is 2000 msec, or 2\n\tseconds.\nDefault:\n mcast_icp_query_timeout 2000\n", "\tIf you wish to create your own versions of the default\n\terror files to customize them to suit your company copy\n\tthe error/template files to another directory and point\n\tthis tag at them.\n\n\tWARNING: This option will disable multi-language support\n\t         on error pages if used.\n\n\tThe squid developers are interested in making squid available in\n\ta wide variety of languages. If you are making translations for a\n\tlanguage that Squid does not currently provide please consider\n\tcontributing your translation back to the project.\n\thttp://wiki.squid-cache.org/Translations\n\n\tThe squid developers working on translations are happy to supply drop-in\n\ttranslated error files in exchange for any new language contributions.\nDefault:\n Send error pages in the clients preferred language\n", "\tSet the default language which squid will send error pages in\n\tif no existing translation matches the clients language\n\tpreferences.\n\n\tIf unset (default) generic English will be used.\n\n\tThe squid developers are interested in making squid available in\n\ta wide variety of languages. If you are interested in making\n\ttranslations for any language see the squid wiki for details.\n\thttp://wiki.squid-cache.org/Translations\nDefault:\n Generate English language pages.\n", "\tHTML text to include in error messages.  Make this a \"mailto\"\n\tURL to your admin address, or maybe just a link to your\n\torganizations Web page.\n\n\tTo include this in your error messages, you must rewrite\n\tthe error template files (found in the \"errors\" directory).\n\tWherever you want the 'err_html_text' line to appear,\n\tinsert a %L tag in the error template file.\nDefault:\n none\n", "\tUsage:   deny_info err_page_name acl\n\tor       deny_info http://... acl\n\tor       deny_info TCP_RESET acl\n\n\tThis can be used to return a ERR_ page for requests which\n\tdo not pass the 'http_access' rules.  Squid remembers the last\n\tacl it evaluated in http_access, and if a 'deny_info' line exists\n\tfor that ACL Squid returns a corresponding error page.\n\n\tThe acl is typically the last acl on the http_access deny line which\n\tdenied access. The exceptions to this rule are:\n\t- When Squid needs to request authentication credentials. It's then\n\t  the first authentication related acl encountered\n\t- When none of the http_access lines matches. It's then the last\n\t  acl processed on the last http_access line.\n\t- When the decision to deny access was made by an adaptation service,\n\t  the acl name is the corresponding eCAP or ICAP service_name.\n\n\tNP: If providing your own custom error pages with error_directory\n\t    you may also specify them by your custom file name:\n\t    Example: deny_info ERR_CUSTOM_ACCESS_DENIED bad_guys\n\n\tBy defaut Squid will send \"403 Forbidden\". A different 4xx or 5xx\n\tmay be specified by prefixing the file name with the code and a colon.\n\te.g. 404:ERR_CUSTOM_ACCESS_DENIED\n\n\tAlternatively you can tell Squid to reset the TCP connection\n\tby specifying TCP_RESET.\n\n\tOr you can specify an error URL or URL pattern. The browsers will\n\tget redirected to the specified URL after formatting tags have\n\tbeen replaced. Redirect will be done with 302 or 307 according to\n\tHTTP/1.1 specs. A different 3xx code may be specified by prefixing\n\tthe URL. e.g. 303:http://example.com/\n\n\tURL FORMAT TAGS:\n\t\t%a\t- username (if available. Password NOT included)\n\t\t%B\t- FTP path URL\n\t\t%e\t- Error number\n\t\t%E\t- Error description\n\t\t%h\t- Squid hostname\n\t\t%H\t- Request domain name\n\t\t%i\t- Client IP Address\n\t\t%M\t- Request Method\n\t\t%o\t- Message result from external ACL helper\n\t\t%p\t- Request Port number\n\t\t%P\t- Request Protocol name\n\t\t%R\t- Request URL path\n\t\t%T\t- Timestamp in RFC 1123 format\n\t\t%U\t- Full canonical URL from client\n\t\t\t  (HTTPS URLs terminate with *)\n\t\t%u\t- Full canonical URL from client\n\t\t%w\t- Admin email from squid.conf\n\t\t%x\t- Error name\n\t\t%%\t- Literal percent (%) code\n\nDefault:\n none\n", "\tUsage: always_direct allow|deny [!]aclname ...\n\n\tHere you can use ACL elements to specify requests which should\n\tALWAYS be forwarded by Squid to the origin servers without using\n\tany peers.  For example, to always directly forward requests for\n\tlocal servers ignoring any parents or siblings you may have use\n\tsomething like:\n\n\t\tacl local-servers dstdomain my.domain.net\n\t\talways_direct allow local-servers\n\n\tTo always forward FTP requests directly, use\n\n\t\tacl FTP proto FTP\n\t\talways_direct allow FTP\n\n\tNOTE: There is a similar, but opposite option named\n\t'never_direct'.  You need to be aware that \"always_direct deny\n\tfoo\" is NOT the same thing as \"never_direct allow foo\".  You\n\tmay need to use a deny rule to exclude a more-specific case of\n\tsome other rule.  Example:\n\n\t\tacl local-external dstdomain external.foo.net\n\t\tacl local-servers dstdomain  .foo.net\n\t\talways_direct deny local-external\n\t\talways_direct allow local-servers\n\n\tNOTE: If your goal is to make the client forward the request\n\tdirectly to the origin server bypassing Squid then this needs\n\tto be done in the client configuration. Squid configuration\n\tcan only tell Squid how Squid should fetch the object.\n\n\tNOTE: This directive is not related to caching. The replies\n\tis cached as usual even if you use always_direct. To not cache\n\tthe replies see the 'cache' directive.\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\nDefault:\n Prevent any cache_peer being used for this request.\n", "\tUsage: never_direct allow|deny [!]aclname ...\n\n\tnever_direct is the opposite of always_direct.  Please read\n\tthe description for always_direct if you have not already.\n\n\tWith 'never_direct' you can use ACL elements to specify\n\trequests which should NEVER be forwarded directly to origin\n\tservers.  For example, to force the use of a proxy for all\n\trequests, except those in your local domain use something like:\n\n\t\tacl local-servers dstdomain .foo.net\n\t\tnever_direct deny local-servers\n\t\tnever_direct allow all\n\n\tor if Squid is inside a firewall and there are local intranet\n\tservers inside the firewall use something like:\n\n\t\tacl local-intranet dstdomain .foo.net\n\t\tacl local-external dstdomain external.foo.net\n\t\talways_direct deny local-external\n\t\talways_direct allow local-intranet\n\t\tnever_direct allow all\n\n\tThis clause supports both fast and slow acl types.\n\tSee http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.\nDefault:\n Allow DNS results to be used for this request.\n", "\tFreeBSD:\n\n\tThe name of an accept(2) filter to install on Squid's\n\tlisten socket(s).  This feature is perhaps specific to\n\tFreeBSD and requires support in the kernel.\n\n\tThe 'httpready' filter delays delivering new connections\n\tto Squid until a full HTTP request has been received.\n\tSee the accf_http(9) man page for details.\n\n\tThe 'dataready' filter delays delivering new connections\n\tto Squid until there is some data to process.\n\tSee the accf_dataready(9) man page for details.\n\n\tLinux:\n\t\n\tThe 'data' filter delays delivering of new connections\n\tto Squid until there is some data to process by TCP_ACCEPT_DEFER.\n\tYou may optionally specify a number of seconds to wait by\n\t'data=N' where N is the number of seconds. Defaults to 30\n\tif not specified.  See the tcp(7) man page for details.\nEXAMPLE:\n FreeBSD\naccept_filter httpready\n Linux\naccept_filter data\nDefault:\n none\n", "\tSet an absolute limit on the number of connections a single\n\tclient IP can use. Any more than this and Squid will begin to drop\n\tnew connections from the client until it closes some links.\n\n\tNote that this is a global limit. It affects all HTTP, HTCP, Gopher and FTP\n\tconnections from the client. For finer control use the ACL access controls.\n\n\tRequires client_db to be enabled (the default).\n\n\tWARNING: This may noticably slow down traffic received via external proxies\n\tor NAT devices and cause them to rebound error messages back to their clients.\nDefault:\n No limit.\n", "\tSize of receive buffer to set for TCP sockets.  Probably just\n\tas easy to change your kernel's default.\n\tOmit from squid.conf to use the default buffer size.\nDefault:\n Use operating system TCP defaults.\n", "\tThis parameter specifies how long to wait for the TCP connect to\n\tthe requested ICAP server to complete before giving up and either\n\tterminating the HTTP transaction or bypassing the failure.\n\n\tThe default for optional services is peer_connect_timeout.\n\tThe default for essential services is connect_timeout.\n\tIf this option is explicitly set, its value applies to all services.\nDefault:\n none\n", "\tThis parameter specifies how long to wait for an I/O activity on\n\tan established, active ICAP connection before giving up and\n\teither terminating the HTTP transaction or bypassing the\n\tfailure.\nDefault:\n Use read_timeout.\n", "\tThe limit specifies the number of failures that Squid tolerates\n\twhen establishing a new TCP connection with an ICAP service. If\n\tthe number of failures exceeds the limit, the ICAP service is\n\tnot used for new ICAP requests until it is time to refresh its\n\tOPTIONS.\n\n\tA negative value disables the limit. Without the limit, an ICAP\n\tservice will not be considered down due to connectivity failures\n\tbetween ICAP OPTIONS requests.\n\n\tSquid forgets ICAP service failures older than the specified\n\tvalue of memory-depth. The memory fading algorithm \n\tis approximate because Squid does not remember individual \n\terrors but groups them instead, splitting the option\n\tvalue into ten time slots of equal length.\n\n\tWhen memory-depth is 0 and by default this option has no \n\teffect on service failure expiration.\n\n\tSquid always forgets failures when updating service settings\n\tusing an ICAP OPTIONS transaction, regardless of this option\n\tsetting.\n\n\tFor example,\n\t\t suspend service usage after 10 failures in 5 seconds:\n\t\ticap_service_failure_limit 10 in 5 seconds\nDefault:\n icap_service_failure_limit 10\n", "\tThe default size of preview data to be sent to the ICAP server.\n\tThis value might be overwritten on a per server basis by OPTIONS requests.\nDefault:\n No preview sent.\n", "\tDefines a single ICAP service using the following format:\n\n\ticap_service id vectoring_point uri [option ...]\n\n\tid: ID\n\t\tan opaque identifier or name which is used to direct traffic to\n\t\tthis specific service. Must be unique among all adaptation\n\t\tservices in squid.conf.\n\n\tvectoring_point: reqmod_precache|reqmod_postcache|respmod_precache|respmod_postcache\n\t\tThis specifies at which point of transaction processing the\n\t\tICAP service should be activated. *_postcache vectoring points\n\t\tare not yet supported.\n\n\turi: icap://servername:port/servicepath\n\t\tICAP server and service location.\n\n\tICAP does not allow a single service to handle both REQMOD and RESPMOD\n\ttransactions. Squid does not enforce that requirement. You can specify\n\tservices with the same service_url and different vectoring_points. You\n\tcan even specify multiple identical services as long as their\n\tservice_names differ.\n\n\tTo activate a service, use the adaptation_access directive. To group\n\tservices, use adaptation_service_chain and adaptation_service_set.\n\n\tService options are separated by white space. ICAP services support\n\tthe following name=value options:\n\n\tbypass=on|off|1|0\n\t\tIf set to 'on' or '1', the ICAP service is treated as\n\t\toptional. If the service cannot be reached or malfunctions,\n\t\tSquid will try to ignore any errors and process the message as\n\t\tif the service was not enabled. No all ICAP errors can be\n\t\tbypassed.  If set to 0, the ICAP service is treated as\n\t\tessential and all ICAP errors will result in an error page\n\t\treturned to the HTTP client.\n\n\t\tBypass is off by default: services are treated as essential.\n\n\trouting=on|off|1|0\n\t\tIf set to 'on' or '1', the ICAP service is allowed to\n\t\tdynamically change the current message adaptation plan by\n\t\treturning a chain of services to be used next. The services\n\t\tare specified using the X-Next-Services ICAP response header\n\t\tvalue, formatted as a comma-separated list of service names.\n\t\tEach named service should be configured in squid.conf. Other\n\t\tservices are ignored. An empty X-Next-Services value results\n\t\tin an empty plan which ends the current adaptation.\n\n\t\tDynamic adaptation plan may cross or cover multiple supported\n\t\tvectoring points in their natural processing order.\n\n\t\tRouting is not allowed by default: the ICAP X-Next-Services\n\t\tresponse header is ignored.\n\n\tipv6=on|off\n\t\tOnly has effect on split-stack systems. The default on those systems\n\t\tis to use IPv4-only connections. When set to 'on' this option will\n\t\tmake Squid use IPv6-only connections to contact this ICAP service.\n\n\ton-overload=block|bypass|wait|force\n\t\tIf the service Max-Connections limit has been reached, do\n\t\tone of the following for each new ICAP transaction:\n\t\t  * block:  send an HTTP error response to the client\n\t\t  * bypass: ignore the \"over-connected\" ICAP service\n\t\t  * wait:   wait (in a FIFO queue) for an ICAP connection slot\n\t\t  * force:  proceed, ignoring the Max-Connections limit \n\n\t\tIn SMP mode with N workers, each worker assumes the service\n\t\tconnection limit is Max-Connections/N, even though not all\n\t\tworkers may use a given service.\n\n\t\tThe default value is \"bypass\" if service is bypassable,\n\t\totherwise it is set to \"wait\".\n\t\t\n\n\tmax-conn=number\n\t\tUse the given number as the Max-Connections limit, regardless\n\t\tof the Max-Connections value given by the service, if any.\n\n\tOlder icap_service format without optional named parameters is\n\tdeprecated but supported for backward compatibility.\n\nExample:\nicap_service svcBlocker reqmod_precache icap://icap1.mydomain.net:1344/reqmod bypass=0\nicap_service svcLogger reqmod_precache icap://icap2.mydomain.net:1344/respmod routing=on\nDefault:\n none\n", "\tThis deprecated option was documented to define an ICAP service\n\tchain, even though it actually defined a set of similar, redundant\n\tservices, and the chains were not supported. \n\n\tTo define a set of redundant services, please use the\n\tadaptation_service_set directive. For service chains, use\n\tadaptation_service_chain.\nDefault:\n none\n", "\tThis option is deprecated. Please use adaptation_access, which\n\thas the same ICAP functionality, but comes with better\n\tdocumentation, and eCAP support.\nDefault:\n none\n", "\tDefines a single eCAP service\n\n\tecap_service id vectoring_point uri [option ...]\n\n        id: ID\n\t\tan opaque identifier or name which is used to direct traffic to\n\t\tthis specific service. Must be unique among all adaptation\n\t\tservices in squid.conf.\n\n\tvectoring_point: reqmod_precache|reqmod_postcache|respmod_precache|respmod_postcache\n\t\tThis specifies at which point of transaction processing the\n\t\teCAP service should be activated. *_postcache vectoring points\n\t\tare not yet supported.\n\n\turi: ecap://vendor/service_name?custom&cgi=style&parameters=optional\n\t\tSquid uses the eCAP service URI to match this configuration\n\t\tline with one of the dynamically loaded services. Each loaded\n\t\teCAP service must have a unique URI. Obtain the right URI from\n\t\tthe service provider.\n\n\tTo activate a service, use the adaptation_access directive. To group\n\tservices, use adaptation_service_chain and adaptation_service_set.\n\n\tService options are separated by white space. eCAP services support\n\tthe following name=value options:\n\n\tbypass=on|off|1|0\n\t\tIf set to 'on' or '1', the eCAP service is treated as optional.\n\t\tIf the service cannot be reached or malfunctions, Squid will try\n\t\tto ignore any errors and process the message as if the service\n\t\twas not enabled. No all eCAP errors can be bypassed.\n\t\tIf set to 'off' or '0', the eCAP service is treated as essential\n\t\tand all eCAP errors will result in an error page returned to the\n\t\tHTTP client.\n\n                Bypass is off by default: services are treated as essential.\n\n\trouting=on|off|1|0\n\t\tIf set to 'on' or '1', the eCAP service is allowed to\n\t\tdynamically change the current message adaptation plan by\n\t\treturning a chain of services to be used next.\n\n\t\tDynamic adaptation plan may cross or cover multiple supported\n\t\tvectoring points in their natural processing order.\n\n\t\tRouting is not allowed by default.\n\n\tOlder ecap_service format without optional named parameters is\n\tdeprecated but supported for backward compatibility.\n\n\nExample:\necap_service s1 reqmod_precache ecap://filters.R.us/leakDetector?on_error=block bypass=off\necap_service s2 respmod_precache ecap://filters.R.us/virusFilter config=/etc/vf.cfg bypass=on\nDefault:\n none\n", "\tInstructs Squid to load the specified dynamic module(s) or activate\n\tpreloaded module(s).\nExample:\nloadable_modules /usr/lib/MinimalAdapter.so\nDefault:\n none\n", "\n\tConfigures an ordered set of similar, redundant services. This is\n\tuseful when hot standby or backup adaptation servers are available.\n\n\t    adaptation_service_set set_name service_name1 service_name2 ...\n\n \tThe named services are used in the set declaration order. The first\n\tapplicable adaptation service from the set is used first. The next\n\tapplicable service is tried if and only if the transaction with the\n\tprevious service fails and the message waiting to be adapted is still\n\tintact.\n\n\tWhen adaptation starts, broken services are ignored as if they were\n\tnot a part of the set. A broken service is a down optional service.\n\n\tThe services in a set must be attached to the same vectoring point\n\t(e.g., pre-cache) and use the same adaptation method (e.g., REQMOD).\n\n\tIf all services in a set are optional then adaptation failures are\n\tbypassable. If all services in the set are essential, then a\n\ttransaction failure with one service may still be retried using\n\tanother service from the set, but when all services fail, the master\n\ttransaction fails as well.\n\n\tA set may contain a mix of optional and essential services, but that\n\tis likely to lead to surprising results because broken services become\n\tignored (see above), making previously bypassable failures fatal.\n\tTechnically, it is the bypassability of the last failed service that\n\tmatters.\n\n\tSee also: adaptation_access adaptation_service_chain\n\nExample:\nadaptation_service_set svcBlocker urlFilterPrimary urlFilterBackup\nadaptation service_set svcLogger loggerLocal loggerRemote\nDefault:\n none\n", "\n\tConfigures a list of complementary services that will be applied\n\tone-by-one, forming an adaptation chain or pipeline. This is useful\n\twhen Squid must perform different adaptations on the same message.\n\n\t    adaptation_service_chain chain_name service_name1 svc_name2 ...\n\n \tThe named services are used in the chain declaration order. The first\n\tapplicable adaptation service from the chain is used first. The next\n\tapplicable service is applied to the successful adaptation results of\n\tthe previous service in the chain.\n\n\tWhen adaptation starts, broken services are ignored as if they were\n\tnot a part of the chain. A broken service is a down optional service.\n\n\tRequest satisfaction terminates the adaptation chain because Squid\n\tdoes not currently allow declaration of RESPMOD services at the\n\t\"reqmod_precache\" vectoring point (see icap_service or ecap_service).\n\n\tThe services in a chain must be attached to the same vectoring point\n\t(e.g., pre-cache) and use the same adaptation method (e.g., REQMOD).\n\n\tA chain may contain a mix of optional and essential services. If an\n\tessential adaptation fails (or the failure cannot be bypassed for\n\tother reasons), the master transaction fails. Otherwise, the failure\n\tis bypassed as if the failed adaptation service was not in the chain.\n\n\tSee also: adaptation_access adaptation_service_set\n\nExample:\nadaptation_service_chain svcRequest requestLogger urlFilter leakDetector\nDefault:\n none\n", "\tSends an HTTP transaction to an ICAP or eCAP adaptation\tservice.\n\n\tadaptation_access service_name allow|deny [!]aclname...\n\tadaptation_access set_name     allow|deny [!]aclname...\n\n\tAt each supported vectoring point, the adaptation_access\n\tstatements are processed in the order they appear in this\n\tconfiguration file. Statements pointing to the following services\n\tare ignored (i.e., skipped without checking their ACL):\n\n\t    - services serving different vectoring points\n\t    - \"broken-but-bypassable\" services\n\t    - \"up\" services configured to ignore such transactions\n              (e.g., based on the ICAP Transfer-Ignore header).\n\n        When a set_name is used, all services in the set are checked\n\tusing the same rules, to find the first applicable one. See\n\tadaptation_service_set for details.\n\n\tIf an access list is checked and there is a match, the\n\tprocessing stops: For an \"allow\" rule, the corresponding\n\tadaptation service is used for the transaction. For a \"deny\"\n\trule, no adaptation service is activated.\n\n\tIt is currently not possible to apply more than one adaptation\n\tservice at the same vectoring point to the same HTTP transaction.\n\n        See also: icap_service and ecap_service\n\nExample:\nadaptation_access service_1 allow all\nDefault:\n Allow, unless rules exist in squid.conf.\n", "\tFor each master transaction (i.e., the HTTP request and response\n\tsequence, including all related ICAP and eCAP exchanges), Squid\n\tmaintains a table of metadata. The table entries are (name, value)\n\tpairs shared among eCAP and ICAP exchanges. The table is destroyed\n\twith the master transaction.\n\n\tThis option specifies the table entry names that Squid must accept\n\tfrom and forward to the adaptation transactions.\n\n\tAn ICAP REQMOD or RESPMOD transaction may set an entry in the \n\tshared table by returning an ICAP header field with a name \n\tspecified in adaptation_masterx_shared_names.\n\n\tAn eCAP REQMOD or RESPMOD transaction may set an entry in the\n\tshared table by implementing the libecap::visitEachOption() API\n\tto provide an option with a name specified in\n\tadaptation_masterx_shared_names.\n\n\tSquid will store and forward the set entry to subsequent adaptation\n\ttransactions within the same master transaction scope.\n\n\tOnly one shared entry name is supported at this time.\n\nExample:\n share authentication information among ICAP services\nadaptation_masterx_shared_names X-Subscriber-ID\nDefault:\n none\n", "\tThis option allows Squid administrator to add custom ICAP request\n\theaders or eCAP options to Squid ICAP requests or eCAP transactions.\n\tUse it to pass custom authentication tokens and other\n\ttransaction-state related meta information to an ICAP/eCAP service.\n\t\n\tThe addition of a meta header is ACL-driven:\n\t\tadaptation_meta name value [!]aclname ...\n\t\n\tProcessing for a given header name stops after the first ACL list match.\n\tThus, it is impossible to add two headers with the same name. If no ACL\n\tlists match for a given header name, no such header is added. For \n\texample:\n\t\n\t\t do not debug transactions except for those that need debugging\n\t\tadaptation_meta X-Debug 1 needs_debugging\n\t\n\t\t log all transactions except for those that must remain secret\n\t\tadaptation_meta X-Log 1 !keep_secret\n\t\n\t\t mark transactions from users in the \"G 1\" group\n\t\tadaptation_meta X-Authenticated-Groups \"G 1\" authed_as_G1\n\t\n\tThe \"value\" parameter may be a regular squid.conf token or a \"double\n\tquoted string\". Within the quoted string, use backslash (\\) to escape\n\tany character, which is currently only useful for escaping backslashes\n\tand double quotes. For example,\n\t    \"this string has one backslash (\\\\) and two \\\"quotes\\\"\"\n\n\tUsed adaptation_meta header values may be logged via %note\n\tlogformat code. If multiple adaptation_meta headers with the same name\n\tare used during master transaction lifetime, the header values are\n\tlogged in the order they were used and duplicate values are ignored\n\t(only the first repeated value will be logged).\nDefault:\n none\n", "\tLimits the number of retries allowed.\n\n\tCommunication errors due to persistent connection race\n\tconditions are unavoidable, automatically retried, and do not\n\tcount against this limit.\n\n\tSee also: icap_retry\nDefault:\n No retries are allowed.\n", "\tMaximum number of bytes packet size to advertise via EDNS.\n\tSet to \"none\" to disable EDNS large packet support.\n\t\n\tFor legacy reasons DNS UDP replies will default to 512 bytes which\n\tis too small for many responses. EDNS provides a means for Squid to\n\tnegotiate receiving larger responses back immediately without having\n\tto failover with repeat requests. Responses larger than this limit\n\twill retain the old behaviour of failover to TCP DNS.\n\t\n\tSquid has no real fixed limit internally, but allowing packet sizes\n\tover 1500 bytes requires network jumbogram support and is usually not\n\tnecessary.\n\t\n\tWARNING: The RFC also indicates that some older resolvers will reply\n\twith failure of the whole request if the extension is added. Some\n\tresolvers have already been identified which will reply with mangled\n\tEDNS response on occasion. Usually in response to many-KB jumbogram\n\tsizes being advertised by Squid.\n\tSquid will currently treat these both as an unable-to-resolve domain\n\teven if it would be resolvable without EDNS.\nDefault:\n EDNS disabled\n", "\tNormally the RES_DEFNAMES resolver option is disabled\n\t(see res_init(3)).  This prevents caches in a hierarchy\n\tfrom interpreting single-component hostnames locally.  To allow\n\tSquid to handle single-component names, enable this option.\nDefault:\n Search for single-label domain names is disabled.\n", "\tWhen set to on, Squid sends multicast DNS lookups on the local\n\tnetwork for domains ending in .local and .arpa.\n\tThis enables local servers and devices to be contacted in an\n\tad-hoc or zero-configuration network environment.\nDefault:\n Search for .local and .arpa names is disabled.\n", "\tUse this if you want to specify a list of DNS name servers\n\t(IP addresses) to use instead of those given in your\n\t/etc/resolv.conf file.\n\n\tOn Windows platforms, if no value is specified here or in\n\tthe /etc/resolv.conf file, the list of DNS name servers are\n\ttaken from the Windows registry, both static and dynamic DHCP\n\tconfigurations are supported.\n\n\tExample: dns_nameservers 10.0.0.1 192.172.0.4\nDefault:\n Use operating system definitions\n", "\tAppends local domain name to hostnames without any dots in\n\tthem.  append_domain must begin with a period.\n\n\tBe warned there are now Internet names with no dots in\n\tthem using only top-domain names, so setting this may\n\tcause some Internet sites to become unavailable.\n\nExample:\n append_domain .yourdomain.com\nDefault:\n Use operating system definitions\n", "\tMaximum number of DNS IP cache entries.\nDefault:\n ipcache_size 1024\n", "Default:\n ipcache_low 90\n", "\tThe size, low-, and high-water marks for the IP cache.\nDefault:\n ipcache_high 95\n", "\tMaximum number of FQDN cache entries.\nDefault:\n fqdncache_size 1024\n", "\tUsed only with memory_pools on:\n\tmemory_pools_limit 50 MB\n\n\tIf set to a non-zero value, Squid will keep at most the specified\n\tlimit of allocated (but unused) memory in memory pools. All free()\n\trequests that exceed this limit will be handled by your malloc\n\tlibrary. Squid does not pre-allocate any memory, just safe-keeps\n\tobjects that otherwise would be free()d. Thus, it is safe to set\n\tmemory_pools_limit to a reasonably high value even if your\n\tconfiguration will use less memory.\n\n\tIf set to none, Squid will keep all memory it can. That is, there\n\twill be no limit on the total amount of memory used for safe-keeping.\n\n\tTo disable memory allocation optimization, do not set\n\tmemory_pools_limit to 0 or none. Set memory_pools to \"off\" instead.\n\n\tAn overhead for maintaining memory pools is not taken into account\n\twhen the limit is checked. This overhead is close to four bytes per\n\tobject kept. However, pools may actually _save_ memory because of\n\treduced memory thrashing in your malloc library.\nDefault:\n memory_pools_limit 5 MB\n", "\tIf set to \"on\", Squid will append your client's IP address\n\tin the HTTP requests it forwards. By default it looks like:\n\n\t\tX-Forwarded-For: 192.1.2.3\n\n\tIf set to \"off\", it will appear as\n\n\t\tX-Forwarded-For: unknown\n\n\tIf set to \"transparent\", Squid will not alter the\n\tX-Forwarded-For header in any way.\n\n\tIf set to \"delete\", Squid will delete the entire\n\tX-Forwarded-For header.\n\n\tIf set to \"truncate\", Squid will remove all existing\n\tX-Forwarded-For entries, and place the client IP as the sole entry.\nDefault:\n forwarded_for on\n", "\tSpecify passwords for cachemgr operations.\n\n\tUsage: cachemgr_passwd password action action ...\n\n\tSome valid actions are (see cache manager menu for a full list):\n\t\t5min\n\t\t60min\n\t\tasndb\n\t\tauthenticator\n\t\tcbdata\n\t\tclient_list\n\t\tcomm_incoming\n\t\tconfig *\n\t\tcounters\n\t\tdelay\n\t\tdigest_stats\n\t\tdns\n\t\tevents\n\t\tfiledescriptors\n\t\tfqdncache\n\t\thistograms\n\t\thttp_headers\n\t\tinfo\n\t\tio\n\t\tipcache\n\t\tmem\n\t\tmenu\n\t\tnetdb\n\t\tnon_peers\n\t\tobjects\n\t\toffline_toggle *\n\t\tpconn\n\t\tpeer_select\n\t\treconfigure *\n\t\tredirector\n\t\trefresh\n\t\tserver_list\n\t\tshutdown *\n\t\tstore_digest\n\t\tstoredir\n\t\tutilization\n\t\tvia_headers\n\t\tvm_objects\n\n\t* Indicates actions which will not be performed without a\n\t  valid password, others can be performed if not listed here.\n\n\tTo disable an action, set the password to \"disable\".\n\tTo allow performing an action without a password, set the\n\tpassword to \"none\".\n\n\tUse the keyword \"all\" to set the same password for all actions.\n\nExample:\n cachemgr_passwd secret shutdown\n cachemgr_passwd lesssssssecret info stats/objects\n cachemgr_passwd disable all\nDefault:\n No password. Actions which require password are denied.\n", "\tThis sets the maximum number of connection attempts made for each\n\tTCP connection. The connect_retries attempts must all still\n\tcomplete within the connection timeout period.\n\n\tThe default is not to re-try if the first connection attempt fails.\n\tThe (not recommended) maximum is 10 tries.\n\n\tA warning message will be generated if it is set to a too-high\n\tvalue and the configured value will be over-ridden.\n\n\tNote: These re-tries are in addition to forward_max_tries\n\twhich limit how many different addresses may be tried to find\n\ta useful server.\nDefault:\n Do not retry failed connections.\n", "\tSpecifies a directory where Squid should do a chroot() while\n\tinitializing.  This also causes Squid to fully drop root\n\tprivileges after initializing.  This means, for example, if you\n\tuse a HTTP port less than 1024 and try to reconfigure, you may\n\tget an error saying that Squid can not open the port.\nDefault:\n none\n", "\tHTTP clients may send a pipeline of 1+N requests to Squid using a\n\tsingle connection, without waiting for Squid to respond to the first\n\tof those requests. This option limits the number of concurrent\n\trequests Squid will try to handle in parallel. If set to N, Squid\n\twill try to receive and process up to 1+N requests on the same\n\tconnection concurrently.\n\n\tDefaults to 0 (off) for bandwidth management and access logging\n\treasons.\n\n\tNOTE: pipelining requires persistent connections to clients.\n\n\tWARNING: pipelining breaks NTLM and Negotiate/Kerberos authentication.\nDefault:\n Do not pre-parse pipelined requests.\n", "\tIf the one-minute median response time exceeds this value,\n\tSquid prints a WARNING with debug level 0 to get the\n\tadministrators attention.  The value is in milliseconds.\nDefault:\n disabled.\n", "\tIf the one-minute average page fault rate exceeds this\n\tvalue, Squid prints a WARNING with debug level 0 to get\n\tthe administrators attention.  The value is in page faults\n\tper second.\nDefault:\n disabled.\n", " Note: This option is only available if Squid is rebuilt with the\n       GNU Malloc with mstats()\n\n\tIf the memory usage (as determined by gnumalloc, if available and used)\n\texceeds\tthis amount, Squid prints a WARNING with debug level 0 to get\n\tthe administrators attention.\nDefault:\n disabled.\n", "\tWhen this is set to a non-zero value, the main Squid process\n\tsleeps the specified number of microseconds after a fork()\n\tsystem call. This sleep may help the situation where your\n\tsystem reports fork() failures due to lack of (virtual)\n\tmemory. Note, however, if you have a lot of child\n\tprocesses, these sleep delays will add up and your\n\tSquid will not service requests for some amount of time\n\tuntil all the child processes have been started.\n\tOn Windows value less then 1000 (1 milliseconds) are\n\trounded to 1000.\nDefault:\n sleep_after_fork 0\n", "\tReduce the maximum number of filedescriptors supported below\n\tthe usual operating system defaults.\n\n\tRemove from squid.conf to inherit the current ulimit setting.\n\n\tNote: Changing this requires a restart of Squid. Also\n\tnot all I/O types supports large values (eg on Windows).\nDefault:\n Use operating system limits set by ulimit.\n"],"version": ["3.5.12"]}