{"version":3,"sources":["sucker.jsx","serviceWorker.js","index.js"],"names":["Sucker","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","importConfiguration","dataJSON","fetch","method","body","configurationToImport","headers","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Allow-Headers","then","setState","isLoaded","response","json","importedDataJSON","importCompleted","message","messageList","counter","z","id","length","is_enabled","position","tags","value","switchable","switch_position","openImportWindow","statusMessage","closeConfigShow","closeOnEscape","closeOnDimmerClick","open","confirm","confirmClose","close","handleContextRef","contextRef","handleOpen","active","handleClose","handleEditorClose","openEditor","handleConfigPreview","handleHideClick","visible","resetComponent","isLoading","results","handleClick","_e","titleProps","index","newIndex","activeIndex","helpEntryId","handleHelpButtonClick","e","target","helpTextIsVisible","handleEntrySliderClick","readValueFromComponent","_ref","entrynumber","readConfigurationToImport","handleMultilineEdit","multilineEntryId","displayMultilineEditor","_ref2","handleImportWindow","focusOnComponent","_ref3","componentRef","current","focus","focusTextInput","_props","_ref4","result","recordNumber","record","section_number","activeRowIndex","handleSearchChange","_ref5","searchIterateOverArray","i","source","_","times","arguments","undefined","title","setTimeout","re","RegExp","escapeRegExp","filter","test","bind","assertThisInitialized","AccordeonIconColors","_this2","error","color","content","react_default","a","createElement","Popup","trigger","Icon","name","_this3","_this$state","activeAccordeonIndex","openMultilineEntryEditor","openConfigPreview","handleShowHelpClick","warningIconPopup","greyColor","primaryAccentColor","pinkColor","searchResultsRenderer","_ref6","Header","key","size","subheader","all_sections","toLowerCase","modalWindowRenderer","onOpen","icon","headercontent","modalcontent","Modal","dimmer","onClose","Content","scrolling","Form","Fragment","Segment","Menu","fixed","inverted","fitted","Container","Item","as","header","onClick","Subheader","Search","assign","placeholder","minCharacters","loading","onResultSelect","onSearchChange","resultRenderer","Divider","Grid","centered","columns","Column","widescreen","computer","Message","squid_version","ref","Accordion","styled","fluid","AccordionContent","n","tagEntryKey","helpKey","warningBuiltWithHover","warningMessageHover","tagComponentUnitLabel","SectionContentsPopup","TableContentInSection","tagRepresentationComponent","React","createRef","options","text","Dropdown","selection","defaultValue","onChange","Button","secondary","compact","units","Label","basic","horizontal","Field","Input","labelPosition","type","action","message_built","message_warning","Table","Row","Cell","width","Checkbox","defaultChecked","slider","allign","Title","textAlign","striped","Body","createSections","Sticky","context","offset","help","TextArea","autoHeight","generatedSquidConfiguration","generateSquidConfiguration","negative","control","Dimmer","onClickOutside","page","href","Loader","Component","Boolean","window","location","hostname","match","ReactDOM","render","sucker","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3b7e12f.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport {\n  Accordion,\n  Button,\n  Checkbox,\n  Container,\n  Dimmer,\n  Divider,\n  Dropdown,\n  Form,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Label,\n  Loader,\n  Menu,\n  Message,\n  Modal,\n  Popup,\n  Search,\n  Segment,\n  Sticky,\n  Table,\n  TextArea\n} from \"semantic-ui-react\";\n\nconst suckerVersionString = \"ver.0.1 (deep beta)\";\n\nclass Sucker extends React.Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\" };\n    this.state = { activeIndex: 0 };\n    this.state = { activeRowIndex: 0 };\n    this.state = { visible: false };\n    this.state = { helpEntryId: 0 };\n    this.state = { confirm: false };\n    this.state = { openEditor: false };\n    this.state = { openImportWindow: false };\n    this.state = { dataJSON: \"\" };\n    this.state = { isLoaded: false };\n    this.state = { configurationToImport: \"\" };\n    this.state = { statusMessage: \"\" };\n\n    this.componentRef = [];\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleConfigPreview = this.handleConfigPreview.bind(this);\n    this.handleMultilineEdit = this.handleMultilineEdit.bind(this);\n    this.handleHelpButtonClick = this.handleHelpButtonClick.bind(this);\n    this.handleEntrySliderClick = this.handleEntrySliderClick.bind(this);\n    this.readValueFromComponent = this.readValueFromComponent.bind(this);\n    this.displayMultilineEditor = this.displayMultilineEditor.bind(this);\n    this.handleImportWindow = this.handleImportWindow.bind(this);\n    this.readConfigurationToImport = this.readConfigurationToImport.bind(this);\n    this.importConfiguration = this.importConfiguration.bind(this);\n    this.focusOnComponent = this.focusOnComponent.bind(this);\n    this.AccordeonIconColors = {};\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/json\")\n      .then(response => response.json())\n      .then(\n        json => {\n          this.setState({\n            dataJSON: json,\n            isLoaded: true\n          });\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  importConfiguration = () => {\n    const { dataJSON } = this.state;\n    fetch(\"http://localhost:8080/import\", {\n      method: \"POST\",\n      body: this.configurationToImport,\n      headers: {\n        // \"Content-Type\": \"application/json\",\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n        'Access-Control-Allow-Origin': 'http://localhost:8080',\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n        'Access-Control-Allow-Headers': 'X-Requested-With, Content-Type, Accept'\n      }\n    })\n      .then(this.setState({ isLoaded: false }))\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          importedDataJSON: json,\n          importCompleted: true\n        });\n        var message = \"\";\n        var messageList = \"\";\n        var counter = 0;\n        for (var z = 0; z < json.id.length; z++) {\n          dataJSON.is_enabled[z] = 0;\n        }\n        for (z = 0; z < json.id.length; z++) {\n          var position = json.id[z];\n          if (json.id[z] === 999) {\n            messageList = messageList + \" \" + json.tags[z] + \";\";\n          } else {\n            dataJSON.is_enabled[position] = 1;\n            dataJSON.value[position] = json.value[z];\n            dataJSON.switchable[position] = json.switchable[z];\n            dataJSON.switch_position[position] = json.switch_position[z];\n            counter++;\n          }\n        }\n        if (messageList !== \"\") {\n          messageList =\n            \" The following entries were skipped as they are not being present in current version:\" +\n            messageList;\n        }\n        message =\n          \"Import completed: \" +\n          json.id.length +\n          \" entries processed, \" +\n          counter +\n          \" recognized.\" +\n          messageList;\n        this.setState({\n          openImportWindow: false,\n          statusMessage: message,\n          isLoaded: true\n        });\n      });\n  };\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({ closeOnEscape, closeOnDimmerClick, open: true });\n  };\n\n  confirm = () => this.setState({ confirm: true });\n  confirmClose = () => this.setState({ confirm: false });\n  open = () => this.setState({ open: true });\n  close = () => this.setState({ open: false });\n\n  handleContextRef = contextRef => this.setState({ contextRef });\n\n  handleOpen = () => this.setState({ active: true });\n  handleClose = () => this.setState({ active: false });\n\n  handleEditorClose = () => this.setState({ openEditor: false });\n  handleConfigPreview = () => this.setState({ open: true });\n  handleHideClick = () => this.setState({ visible: false });\n\n  resetComponent = () =>\n    this.setState({ isLoading: false, results: [], value: \"\" });\n\n  handleClick = (_e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n    this.setState({ activeIndex: newIndex });\n    this.setState({ helpEntryId: 0 });\n  };\n\n  handleHelpButtonClick = e => {\n    this.setState({ helpEntryId: e.target.value });\n    this.setState({ helpTextIsVisible: true });\n  };\n\n  handleEntrySliderClick = e => {\n    const { dataJSON } = this.state;\n    dataJSON.is_enabled[e.target.value] = !dataJSON.is_enabled[e.target.value];\n  };\n\n  readValueFromComponent = (_e, { entrynumber, value }) => {\n    const { dataJSON } = this.state;\n    dataJSON.value[entrynumber] = value;\n  };\n\n  readConfigurationToImport = e => {\n    this.configurationToImport = e.target.value;\n  };\n\n  handleMultilineEdit = e => {\n    const { dataJSON } = this.state;\n    dataJSON.value[this.multilineEntryId] = e.target.value;\n  };\n\n  displayMultilineEditor = (_e, { value }) => {\n    this.multilineEntryId = value;\n    this.setState(props => ({ openEditor: !props.openEditor }));\n  };\n\n  handleImportWindow = () => {\n    this.setState({ openImportWindow: !this.state.openImportWindow });\n  };\n\n  focusOnComponent = (_e, { entrynumber }) => {\n    var component = this.componentRef[entrynumber];\n    component.current.focus();\n  };\n\n  focusTextInput = (_props, { result }) => {\n    const { dataJSON } = this.state;\n    var recordNumber = result.record;\n    var component = \"\";\n    this.setState(() => ({\n      activeIndex: dataJSON.section_number[recordNumber]\n    }));\n    this.setState(() => ({ activeRowIndex: recordNumber }));\n    if (dataJSON.switchable[recordNumber] !== 1) {\n      component = this.componentRef[recordNumber];\n      component.current.focus();\n    }\n  };\n\n  warningIconPopup(color, content) {\n    var warningMessageIcon = (\n      <Popup\n        trigger={<Icon color={color} name=\"warning sign\" />}\n        content={content}\n      />\n    );\n    return warningMessageIcon;\n  }\n\n  handleSearchChange = (_e, { value }) => {\n    function searchIterateOverArray() {\n      var i = 1;\n      return (i = i + 1);\n    }\n    const { dataJSON } = this.state;\n    const source = _.times(\n      dataJSON.tags.length,\n      (i = searchIterateOverArray) => ({\n        title: this.state.dataJSON.tags[i],\n        record: i\n      })\n    );\n\n    this.setState({ isLoading: true, value });\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.resetComponent();\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n      const isMatch = result => re.test(result.title);\n      this.setState({\n        isLoading: false,\n        results: _.filter(source, isMatch)\n      });\n    }, 300);\n  };\n\n  render() {\n    const {\n      activeIndex: activeAccordeonIndex,\n      activeRowIndex,\n      active,\n      openEditor: openMultilineEntryEditor,\n      open: openConfigPreview,\n      openImportWindow,\n      // closeOnEscape,\n      dataJSON,\n      isLoaded,\n      error,\n      contextRef,\n      isLoading,\n      value,\n      results,\n      statusMessage\n    } = this.state;\n    const handleClick = this.handleClick;\n    const handleShowHelpClick = this.handleHelpButtonClick;\n    const handleEntrySliderClick = this.handleEntrySliderClick;\n    const readValueFromComponent = this.readValueFromComponent;\n    const displayMultilineEditor = this.displayMultilineEditor;\n    const warningIconPopup = this.warningIconPopup;\n    const componentRef = this.componentRef;\n    const focusOnComponent = this.focusOnComponent;\n\n    const blackColor = \"black\";\n    const greyColor = \"grey\";\n    const primaryAccentColor = \"purple\";\n    const pinkColor = \"pink\";\n\n    const searchResultsRenderer = ({ title, record }) => {\n      return (\n        <Header\n          key={record}\n          size=\"tiny\"\n          content={title}\n          subheader={dataJSON.all_sections[\n            dataJSON.section_number[record]\n          ].toLowerCase()}\n        />\n      );\n    };\n\n    const searchFieldRenderer = () => {\n      return (\n        <Search\n          placeholder=\"Search tags\"\n          minCharacters={3}\n          loading={isLoading}\n          onResultSelect={this.focusTextInput}\n          onSearchChange={this.handleSearchChange}\n          resultRenderer={searchResultsRenderer}\n          results={results}\n          value={value}\n          {...this.props}\n        />\n      );\n    };\n\n    const modalWindowRenderer = (onOpen, icon, headercontent, modalcontent) => {\n      return (\n        <Modal\n          dimmer=\"inverted\"\n          open={onOpen}\n          closeOnEscape={this.closeOnEscape}\n          onClose={this.close}\n        >\n          <Header icon={icon} content={headercontent} />\n          <Modal.Content scrolling>\n            <Form>{modalcontent}</Form>\n          </Modal.Content>\n        </Modal>\n      );\n    };\n\n    const statusMessageBox = () => {\n      return (\n        <Message>\n          <p>Loaded configuration for Squid ver. {dataJSON.squid_version[0]}</p>\n          <p>\n            {dataJSON.tags.length} unique tags in {dataJSON.all_sections.length}{\" \"}\n            sections\n          </p>\n          <p>{statusMessage}</p>\n        </Message>\n      );\n    };\n\n    function createSections() {\n      var AccordionContent = [];\n      var n = 0;\n      var tagEntryKey = 0;\n      var helpKey = 1000;\n      var warningBuiltWithHover = \"\";\n      var warningMessageHover = \"\";\n      var tagComponentUnitLabel = \"\";\n      var AccordeonIconColors = [];\n\n      for (var i = 0; i < dataJSON.all_sections.length; i++) {\n        var SectionContentsPopup = [];\n        var TableContentInSection = [];\n\n        SectionContentsPopup[i] = \"\";\n\n        while (dataJSON.section_number[n] === i) {\n          if (dataJSON.is_enabled[n] > 0) {\n            AccordeonIconColors[i] = primaryAccentColor;\n          }\n\n          var tagRepresentationComponent = \"\";\n          SectionContentsPopup[i] += dataJSON.tags[n] + \"\\n\";\n\n          componentRef[n] = React.createRef();\n\n          if (!dataJSON.switchable[n]) {\n            if (dataJSON.units[n]) {\n              tagComponentUnitLabel = (\n                <Label basic content={dataJSON.units[n]} horizontal />\n              );\n            } else {\n              tagComponentUnitLabel = \"\";\n            }\n            // Regular tag\n            tagRepresentationComponent = (\n              <Form.Field>\n                <Input\n                  fluid\n                  ref={componentRef[n]}\n                  entrynumber={tagEntryKey}\n                  defaultValue={dataJSON.value[n] + \" \"}\n                  onChange={readValueFromComponent}\n                  labelPosition=\"right\"\n                  type=\"text\"\n                  action\n                >\n                  <input />\n                  {tagComponentUnitLabel}\n                  <Button\n                    basic\n                    type=\"reset\"\n                    entrynumber={tagEntryKey}\n                    onClick={focusOnComponent}\n                  >\n                    Reset\n                  </Button>\n                </Input>\n              </Form.Field>\n            );\n            // Tag with on/off selection\n          } else if (dataJSON.switchable[n] === 1) {\n            var options = [\n              {\n                key: \"off\",\n                text: dataJSON.tags[n] + \" off\",\n                value: dataJSON.tags[n] + \" off\"\n              },\n              {\n                key: \"on\",\n                text: dataJSON.tags[n] + \" on\",\n                value: dataJSON.tags[n] + \" on\"\n              }\n            ];\n\n            tagRepresentationComponent = (\n              <Dropdown\n                ref={componentRef[n]}\n                entrynumber={tagEntryKey}\n                fluid\n                selection\n                options={options}\n                defaultValue={options[dataJSON.switch_position[n]].value}\n                onChange={readValueFromComponent}\n              />\n            );\n          } else if (dataJSON.switchable[n] === 2) {\n            tagRepresentationComponent = (\n              <Button\n                ref={componentRef[n]}\n                secondary\n                compact\n                value={n}\n                onClick={displayMultilineEditor}\n              >\n                {dataJSON.tags[n]} - Click to edit\n              </Button>\n            );\n          }\n\n          if (dataJSON.message_built[n]) {\n            warningBuiltWithHover = warningIconPopup(\n              primaryAccentColor,\n              \"Only available if Squid is compiled with the \" +\n                dataJSON.message_built[n]\n            );\n          } else {\n            warningBuiltWithHover = \"\";\n          }\n\n          if (dataJSON.message_warning[n]) {\n            warningMessageHover = warningIconPopup(\n              pinkColor,\n              dataJSON.message_warning[n]\n            );\n          } else {\n            warningMessageHover = \"\";\n          }\n\n          TableContentInSection[n] = (\n            <Table.Row key={\"tableKey\" + n} active={activeRowIndex === n}>\n              <Table.Cell width={1}>\n                <Checkbox\n                  value={tagEntryKey}\n                  id={\"checkboxEntry\" + tagEntryKey++}\n                  defaultChecked={dataJSON.is_enabled[n]}\n                  slider\n                  onClick={handleEntrySliderClick}\n                />\n              </Table.Cell>\n              <Table.Cell>\n                <Form>{tagRepresentationComponent}</Form>\n              </Table.Cell>\n              <Table.Cell width={2}>\n                {warningBuiltWithHover}\n                {warningMessageHover}\n              </Table.Cell>\n              <Table.Cell width={1} allign=\"left\">\n                <Button\n                  value={helpKey++}\n                  compact\n                  basic\n                  color={greyColor}\n                  active={active}\n                  onClick={handleShowHelpClick}\n                >\n                  Help\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n          );\n          n++;\n        }\n\n        AccordionContent[i] = (\n          <Container key={\"containerKey\" + i}>\n            <Accordion.Title\n              active={activeAccordeonIndex === i}\n              index={i}\n              onClick={handleClick}\n            >\n              <Popup\n                trigger={<Icon name=\"dropdown\" />}\n                size=\"tiny\"\n                position=\"left center\"\n                header=\"Tags in this section:\"\n                content={\n                  <Grid centered columns={1}>\n                    <Grid.Column textAlign=\"left\">\n                      <pre>{SectionContentsPopup[i]}</pre>\n                    </Grid.Column>\n                  </Grid>\n                }\n              />\n              <Icon name=\"tags\" color={AccordeonIconColors[i]} />\n              &nbsp;\n              {dataJSON.all_sections[i]}\n            </Accordion.Title>\n            <Accordion.Content active={activeAccordeonIndex === i}>\n              <Table striped compact basic=\"very\">\n                <Table.Body>{TableContentInSection}</Table.Body>\n              </Table>\n            </Accordion.Content>\n          </Container>\n        );\n      }\n      return AccordionContent;\n    }\n\n    function generateSquidConfiguration() {\n      var generatedSquidConfiguration = \"\";\n      for (var i = 0; i < dataJSON.section_number.length; i++) {\n        if (dataJSON.is_enabled[i])\n          generatedSquidConfiguration =\n            generatedSquidConfiguration + \"\\n\" + dataJSON.value[i];\n      }\n      return generatedSquidConfiguration;\n    }\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return (\n        <React.Fragment>\n          <Dimmer inverted active={!isLoaded}>\n            <Loader inverted size=\"massive\">\n              Loading\n            </Loader>\n          </Dimmer>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Segment>\n            <Menu fixed=\"top\" inverted fitted=\"vertically\" color={blackColor}>\n              <Container>\n                <Menu.Item as=\"a\" header onClick={this.handleOpen}>\n                  <Header as=\"h3\" inverted>\n                    <Icon\n                      inverted\n                      name=\"circle outline\"\n                      color={primaryAccentColor}\n                      size=\"big\"\n                    />\n                    <Header.Content>\n                      Sucker\n                      <Header.Subheader>\n                        Squid configuration editor\n                      </Header.Subheader>\n                    </Header.Content>\n                  </Header>\n                </Menu.Item>\n                <Menu.Item as=\"a\">{searchFieldRenderer()}</Menu.Item>\n                <Menu.Item as=\"a\" onClick={this.handleConfigPreview}>\n                  <Header as=\"h4\" inverted>\n                    <Icon inverted name=\"magic\" />\n                    Show\n                  </Header>\n                </Menu.Item>\n                <Menu.Item as=\"a\" onClick={this.handleImportWindow}>\n                  <Header as=\"h4\" inverted>\n                    <Icon inverted name=\"download\" />\n                    Import\n                  </Header>\n                </Menu.Item>\n              </Container>\n            </Menu>\n          </Segment>\n          <Divider />\n          <Grid centered columns={3}>\n            <Grid.Column widescreen={5} computer={2}>\n              {statusMessageBox()}\n            </Grid.Column>\n            <Grid.Column widescreen={6} computer={7}>\n              <div ref={this.handleContextRef}>\n                <Container>\n                  <Accordion styled fluid>\n                    {createSections()}\n                  </Accordion>\n                </Container>\n              </div>\n            </Grid.Column>\n            <Grid.Column widescreen={5} computer={7}>\n              <Sticky context={contextRef} offset={75}>\n                <Segment basic size=\"small\">\n                  <Header\n                    content={dataJSON.tags[this.state.helpEntryId - 1000]}\n                  />\n                  <pre>{dataJSON.help[this.state.helpEntryId - 1000]}</pre>\n                </Segment>\n              </Sticky>\n            </Grid.Column>\n          </Grid>\n          {modalWindowRenderer(\n            openConfigPreview,\n            \"copy\",\n            \"New configuration\",\n            <React.Fragment>\n              <Form.Field>\n                <p>\n                  <b>To use:</b> copy configuration from the text area below and\n                  save it as squid.conf in the location of the original\n                  configuration file. By default, this file is located at{\" \"}\n                  <b>/etc/squid/squid.conf</b> or{\" \"}\n                  <b>/usr/local/squid/etc/squid.conf</b>.\n                </p>\n                <TextArea autoHeight value={generateSquidConfiguration()} />\n              </Form.Field>\n              <Button negative size=\"large\" onClick={this.close}>\n                close\n              </Button>\n            </React.Fragment>\n          )}\n          {modalWindowRenderer(\n            openMultilineEntryEditor,\n            \"edit\",\n            dataJSON.tags[this.multilineEntryId],\n            <React.Fragment>\n              <Form.Field>\n                <TextArea\n                  autoHeight\n                  defaultValue={dataJSON.value[this.multilineEntryId]}\n                  onChange={this.handleMultilineEdit}\n                />\n              </Form.Field>\n              <Button type=\"reset\" secondary>\n                Revert to default\n              </Button>\n              <Button secondary onClick={this.displayMultilineEditor}>\n                Save and close\n              </Button>\n            </React.Fragment>\n          )}\n          {modalWindowRenderer(\n            openImportWindow,\n            \"paste\",\n            \"Import existing configuration\",\n            <React.Fragment>\n              <p>\n                <b>To import:</b> copy and paste contents of <b>squid.conf</b>{\" \"}\n                into the window below. By default, this file is located at{\" \"}\n                <b>/etc/squid/squid.conf</b> or{\" \"}\n                <b>/usr/local/squid/etc/squid.conf</b>.\n              </p>\n              <p>\n                <b>Please note:</b> lines that begin with '#' (i.e. commented\n                out) are not going to be processed.\n              </p>\n              <Form.TextArea\n                control=\"textarea\"\n                onChange={this.readConfigurationToImport}\n              />\n              <Button secondary onClick={this.handleImportWindow}>\n                Close\n              </Button>\n              <Button\n                secondary\n                type=\"submit\"\n                method=\"post\"\n                onClick={this.importConfiguration}\n              >\n                Import\n              </Button>\n            </React.Fragment>\n          )}\n          <Dimmer\n            inverted\n            active={active}\n            onClickOutside={this.handleClose}\n            page\n          >\n            <Header as=\"h1\" icon color={primaryAccentColor}>\n              <Icon name=\"circle outline\" color={primaryAccentColor} />\n              Sucker\n              <Header.Subheader>{suckerVersionString}</Header.Subheader>\n            </Header>\n            <Header color={greyColor}>\n              <p>\n                configuration editor for{\" \"}\n                <a href=\"http://www.squid-cache.org/\">Squid</a> caching proxy\n              </p>\n              <p>\n                <Icon name=\"github\" />\n                Github:{\" \"}\n                <a href=\"https://github.com/itworks99/sucker\">\n                  itworks99/sucker\n                </a>\n              </p>\n              <p>Built with Bottle, Python, React and Semantic-UI</p>\n              <p>\n                Created in Sydney with <Icon color=\"pink\" name=\"heart\" />\n              </p>\n            </Header>\n          </Dimmer>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default Sucker;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport Sucker from './sucker.jsx';\nimport * as serviceWorker from './serviceWorker.js';\n\nReactDOM.render( < Sucker / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}